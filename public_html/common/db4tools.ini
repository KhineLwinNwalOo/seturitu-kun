<?php
/*
 * [新★会社設立.JP ツール]
 * DB関連ファイル
 *
 * 更新履歴：2008/12/01	d.ishikawa	新規作成
 *
 */


/* start ----------------------------------------------ユーザー関連---------------------------------------------- start */
/**
 * ユーザー情報を取得する。
 *
 * @param	int   	$userId			ユーザーID
 * @param	boolean	$undeleteOnly	未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @return	mixed	問合せ情報{null:取得できなかった場合}
 * @access  public
 * @since
 */
function _GetUserInfo($userId, $undeleteOnly = true) {

	_Log("[_GetUserInfo] start.");

	_Log("[_GetUserInfo] (param) ユーザーID = '".$userId."'");
	_Log("[_GetUserInfo] (param) 未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象} = '".$undeleteOnly."'");

	if (_IsNull($userId)) {
		_Log("[_GetUserInfo] User Id is null.");
		_Log("[_GetUserInfo] end.");
		return null;
	}


	//ユーザー情報を取得する。
	_Log("[_GetUserInfo] {ユーザー情報取得} ============================================================ start");


	//1.ユーザーテーブルを検索する。
	_Log("[_GetUserInfo] {ユーザー情報取得} 1.ユーザーテーブル情報取得");
	$condition = array();
	$condition['usr_user_id'] = $userId;
	$tblUserInfo = _DB_GetInfo('tbl_user', $condition, $undeleteOnly, 'usr_del_flag');
	if (_IsNull($tblUserInfo)) {
		_Log("[_GetUserInfo] _DB_GetInfo('tbl_user', \$condition, \$undeleteOnly) is null.");
		_Log("[_GetUserInfo] end.");
		return null;
	}


	//配列に設定する。
	$resList = array();
	$resList['tbl_user'] = $tblUserInfo;		//1.ユーザーテーブル


	_Log("[_GetUserInfo] {ユーザー情報取得} 結果 = '".print_r($resList,true)."'");
	_Log("[_GetUserInfo] {ユーザー情報取得} ============================================================ end");

	_Log("[_GetUserInfo] end.");
	return $resList;
}

/**
 * ユーザー情報を作成する。
 *
 * @param	mixed   $info		ユーザー情報
 * @return	int		ユーザーID{false:失敗した場合}
 * @access  public
 * @since
 */
function _CreateUserInfo(&$info) {

	_Log("[_CreateUserInfo] start.");

	_Log("[_CreateUserInfo] (param) ユーザー情報='".print_r($info,true)."'");

	//IPアドレスを設定する。
	$ip = $_SERVER["REMOTE_ADDR"];
	$date = null;


	//ユーザー情報を登録する。
	_Log("[_CreateUserInfo] {ユーザー情報登録} ============================================================ start");

	//1.ユーザーテーブルに登録する。
	_Log("[_CreateUserInfo] {ユーザー情報登録} 1.ユーザーテーブル情報登録");
	$info['tbl_user']['usr_auth_id'] = ((isset($info['tbl_user']['usr_auth_id']) && !_IsNull($info['tbl_user']['usr_auth_id']))?$info['tbl_user']['usr_auth_id']:AUTH_NON);				//権限ID
	$info['tbl_user']['usr_del_flag'] = ((isset($info['tbl_user']['usr_del_flag']) && !_IsNull($info['tbl_user']['usr_del_flag']))?$info['tbl_user']['usr_del_flag']:DELETE_FLAG_NO);	//削除フラグ
	$info['tbl_user']['usr_create_ip'] = $ip;			//作成IP
	$info['tbl_user']['usr_create_date'] = $date;		//作成日
	$info['tbl_user']['usr_update_ip'] = $ip;			//更新IP
	$info['tbl_user']['usr_update_date'] = $date;		//更新日
	$userId = _DB_CreateInfo('tbl_user', $info['tbl_user']);
	if ($userId === false) {
		_Log("[_CreateUserInfo] {ユーザー情報登録} 1.→【失敗】");
		_Log("[_CreateUserInfo] {ユーザー情報登録} {ERROR} ユーザーテーブル登録に失敗しました。_DB_CreateInfo('tbl_user', xxx) ", 1);
		_Log("[_CreateUserInfo] {ユーザー情報登録} {ERROR} ユーザーテーブル情報 = '".print_r($info['tbl_user'],true)."'", 1);
	} else {
		_Log("[_CreateUserInfo] {ユーザー情報登録} 1.→【成功】");
	}


	_Log("[_CreateUserInfo] {ユーザー情報登録} ============================================================ end");

	_Log("[_CreateUserInfo] 結果-ユーザーID = '".$userId."'");
	_Log("[_CreateUserInfo] 結果-ユーザー情報='".print_r($info,true)."'");

	_Log("[_CreateUserInfo] end.");

	return $userId;

}

/**
 * ユーザー情報を更新する。
 *
 * @param	mixed   $info		ユーザー情報
 * @return	int		ユーザーID{false:失敗した場合}
 * @access  public
 * @since
 */
function _SaveUserInfo(&$info) {

	_Log("[_SaveUserInfo] start.");

	_Log("[_SaveUserInfo] (param) ユーザー情報='".print_r($info,true)."'");

	//IPアドレスを設定する。
	$ip = $_SERVER["REMOTE_ADDR"];
	$date = null;

	$userId = false;

	//ユーザー情報を更新する。
	_Log("[_SaveUserInfo] {ユーザー情報更新} ============================================================ start");

	//1.ユーザーテーブルを更新する。
	_Log("[_SaveUserInfo] {ユーザー情報更新} 1.ユーザーテーブル情報更新");
	$info['tbl_user']['usr_auth_id'] = ((isset($info['tbl_user']['usr_auth_id']) && !_IsNull($info['tbl_user']['usr_auth_id']))?$info['tbl_user']['usr_auth_id']:AUTH_NON);				//権限ID
	$info['tbl_user']['usr_del_flag'] = ((isset($info['tbl_user']['usr_del_flag']) && !_IsNull($info['tbl_user']['usr_del_flag']))?$info['tbl_user']['usr_del_flag']:DELETE_FLAG_NO);	//削除フラグ
	$info['tbl_user']['usr_update_ip'] = $ip;			//更新IP
	$info['tbl_user']['usr_update_date'] = $date;		//更新日
	unset($info['tbl_user']['usr_create_ip']);			//作成IP
	unset($info['tbl_user']['usr_create_date']);		//作成日
	$res = _DB_SaveInfo('tbl_user', $info['tbl_user']);
	if ($res === false) {
		_Log("[_SaveUserInfo] {ユーザー情報更新} 1.→【失敗】");
		_Log("[_SaveUserInfo] {ユーザー情報更新} {ERROR} ユーザーテーブル更新に失敗しました。_DB_SaveInfo('tbl_user', xxx) ", 1);
		_Log("[_SaveUserInfo] {ユーザー情報更新} {ERROR} ユーザーテーブル情報 = '".print_r($info['tbl_user'],true)."'", 1);
	} else {
		_Log("[_SaveUserInfo] {ユーザー情報更新} 1.→【成功】");
		//ユーザーIDを設定する。
		$userId = $info['tbl_user']['usr_user_id'];
	}


	_Log("[_SaveUserInfo] {ユーザー情報更新} ============================================================ end");

	_Log("[_SaveUserInfo] 結果 = '".$userId."'");
    _Log("[_SaveUserInfo] end.");

	return $userId;

}


/**
 * ユーザーに関連する株式会社の会社IDを取得する。
 * 複数の会社IDが関連付いている場合は、先頭の会社IDを返す。(→"株式会社"は1件のはず！将来は増えるかも。)
 *
 * @param	int   	$userId			ユーザーID
 * @param	boolean	$undeleteOnly	未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @return	mixed	会社ID{null:取得できなかった場合}
 * @access  public
 * @since
 */
function _GetRelationCompanyId($userId, $undeleteOnly = true) {

	_Log("[_GetRelationCompanyId] start.");

	_Log("[_GetRelationCompanyId] (param) ユーザーID = '".$userId."'");
	_Log("[_GetRelationCompanyId] (param) 未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象} = '".$undeleteOnly."'");

//	if (_IsNull($userId)) {
//		_Log("[_GetRelationCompanyId] User Id is null.");
//		_Log("[_GetRelationCompanyId] end.");
//		return null;
//	}
//
//	$id = null;
//
//	//会社IDを検索する。
//	//ユーザー_会社_関連付テーブルを検索する。
//	$condition = array();
//	$condition['usr_cmp_rel_user_id'] = $userId;		//ユーザーID
//	$order = "usr_cmp_rel_company_id";					//ソート順=会社IDの昇順(なんでもいいけど…)
//	$tblUserCompanyRelationList = _DB_GetListByAssociative('tbl_user_company_relation', 'usr_cmp_rel_company_id', null, $condition, $undeleteOnly, $order, 'usr_cmp_rel_del_flag');
//	if (!_IsNull($tblUserCompanyRelationList)) {
//		//会社テーブルを検索する。
//		$condition = array();
//		$condition['cmp_company_id'] = $tblUserCompanyRelationList;		//会社ID
//		$condition['cmp_company_type_id'] = MST_COMPANY_TYPE_ID_CMP;	//会社タイプID="株式会社"
//		$order = "cmp_company_id";										//ソート順=会社IDの昇順(なんでもいいけど…)
//		$tblCompanyList = _DB_GetList('tbl_company', $condition, $undeleteOnly, $order, 'cmp_del_flag');
//		if (!_IsNull($tblCompanyList)) {
//			//先頭を取得する。(→"株式会社"は1件のはず！将来は増えるかも。)
//			$id = $tblCompanyList[0]['cmp_company_id'];
//		}
//	}
//
//	_Log("[_GetRelationCompanyId] {ユーザー情報取得} 結果 会社ID = '".$id."'");
//
//	_Log("[_GetRelationCompanyId] end.");

	//編集対象の会社IDを返す。
	$id = null;
	if (isset($_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_CMP])) {
		$id = $_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_CMP];
	}
	_Log("[_GetRelationCompanyId] \$_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_CMP] = '".$_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_CMP]."'");
	_Log("[_GetRelationCompanyId] isset = '".isset($_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_CMP])."'");

	_Log("[_GetRelationCompanyId] \$_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_LLC] = '".$_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_LLC]."'");
	_Log("[_GetRelationCompanyId] isset = '".isset($_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_LLC])."'");

	_Log("[_GetRelationCompanyId] {ユーザー情報取得} 結果 会社ID = '".$id."'");

	_Log("[_GetRelationCompanyId] end.");

	return $id;
}


/**
 * ユーザーに関連する合同会社の会社IDを取得する。
 * 複数の会社IDが関連付いている場合は、先頭の会社IDを返す。(→"合同会社"は1件のはず！将来は増えるかも。)
 *
 * @param	int   	$userId			ユーザーID
 * @param	boolean	$undeleteOnly	未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @return	mixed	会社ID{null:取得できなかった場合}
 * @access  public
 * @since
 */
function _GetRelationLlcId($userId, $undeleteOnly = true) {

	_Log("[_GetRelationLlcId] start.");

	_Log("[_GetRelationLlcId] (param) ユーザーID = '".$userId."'");
	_Log("[_GetRelationLlcId] (param) 未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象} = '".$undeleteOnly."'");

//	if (_IsNull($userId)) {
//		_Log("[_GetRelationLlcId] User Id is null.");
//		_Log("[_GetRelationLlcId] end.");
//		return null;
//	}
//
//	$id = null;
//
//	//会社IDを検索する。
//	//ユーザー_会社_関連付テーブルを検索する。
//	$condition = array();
//	$condition['usr_cmp_rel_user_id'] = $userId;		//ユーザーID
//	$order = "usr_cmp_rel_company_id";					//ソート順=会社IDの昇順(なんでもいいけど…)
//	$tblUserCompanyRelationList = _DB_GetListByAssociative('tbl_user_company_relation', 'usr_cmp_rel_company_id', null, $condition, $undeleteOnly, $order, 'usr_cmp_rel_del_flag');
//	if (!_IsNull($tblUserCompanyRelationList)) {
//		//会社テーブルを検索する。
//		$condition = array();
//		$condition['cmp_company_id'] = $tblUserCompanyRelationList;		//会社ID
//		$condition['cmp_company_type_id'] = MST_COMPANY_TYPE_ID_LLC;	//会社タイプID="合同会社"
//		$order = "cmp_company_id";										//ソート順=会社IDの昇順(なんでもいいけど…)
//		$tblCompanyList = _DB_GetList('tbl_company', $condition, $undeleteOnly, $order, 'cmp_del_flag');
//		if (!_IsNull($tblCompanyList)) {
//			//先頭を取得する。(→"合同会社"は1件のはず！将来は増えるかも。)
//			$id = $tblCompanyList[0]['cmp_company_id'];
//		}
//	}
//
//	_Log("[_GetRelationLlcId] {ユーザー情報取得} 結果 会社ID = '".$id."'");
//
//	_Log("[_GetRelationLlcId] end.");

	//編集対象の会社IDを返す。
	$id = null;
	if (isset($_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_LLC])) {
		$id = $_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_LLC];
	}
	_Log("[_GetRelationLlcId] \$_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_CMP] = '".$_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_CMP]."'");
	_Log("[_GetRelationLlcId] isset = '".isset($_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_CMP])."'");

	_Log("[_GetRelationLlcId] \$_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_LLC] = '".$_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_LLC]."'");
	_Log("[_GetRelationLlcId] isset = '".isset($_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_LLC])."'");

	_Log("[_GetRelationLlcId] {ユーザー情報取得} 結果 会社ID = '".$id."'");

	_Log("[_GetRelationLlcId] end.");

	return $id;
}


/**
 * ユーザー_状況情報を作成する。
 * 【ご利用料金のお支払いフォーム用】
 *
 * @param	mixed   $info		ユーザー_状況情報
 * @return	boolean	{true:成功/false:失敗した場合}
 * @access  public
 * @since
 */
function _CreateUserStatusInfo4BuyForm(&$info) {

	_Log("[_CreateUserStatusInfo4BuyForm] start.");

	_Log("[_CreateUserStatusInfo4BuyForm] (param) ユーザー_状況情報='".print_r($info,true)."'");

	//IPアドレスを設定する。
	$ip = $_SERVER["REMOTE_ADDR"];
	$date = null;

	$res = true;

	//ユーザー情報を登録する。
	_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} ============================================================ start");

	$userId = $info['tbl_user']['usr_user_id'];

	if (isset($info['tbl_buy'])) {

		//1.ユーザーテーブルを更新する。
		_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} 1.ユーザー_状況情報登録");

		//システムコースマスタ
		$condition4Mst = null;
		$undeleteOnly4Mst = false;
		$order4Mst = "lpad(show_order,10,'0'),id";
		$mstSystemCourseList = _DB_GetList('mst_system_course', $condition4Mst, $undeleteOnly4Mst, $order4Mst, 'del_flag', 'id');

		//状況Noを採番する。
		$condition4No = array();
		$condition4No['usr_sts_user_id'] = $userId;//ユーザーID
		$no = _DB_GetNextNo('tbl_user_status', 'usr_sts_no', $condition4No, false);

		foreach ($info['tbl_buy']['buy_system_course_id'] as $scKey => $systemCourseId) {
//			//会社タイプIDを設定する。
//			$companyTypeId = $mstSystemCourseList[$systemCourseId]['company_type_id'];
//			//会社IDを設定する。
//			$companyId = null;
//			switch ($companyTypeId) {
//				case MST_COMPANY_TYPE_ID_CMP:
//					//株式会社
//					//ユーザーに関連する株式会社の会社IDを取得する。
//					$companyId = _GetRelationCompanyId($userId);
//					break;
//				case MST_COMPANY_TYPE_ID_LLC:
//					//合同会社
//					//ユーザーに関連する合同会社の会社IDを取得する。
//					$companyId = _GetRelationLlcId($userId);
//					break;
//			}
//			//会社情報が未登録の場合、仮登録する。
//			if (_IsNull($companyId)) {
//				$bufCompanyInfo = array();
//				$bufCompanyInfo['tbl_company']['cmp_company_type_id'] = $companyTypeId;		//会社タイプID
//				$bufCompanyInfo['tbl_user']['usr_user_id'] = $userId;
//				$companyId = _CreateCompanyInfo($bufCompanyInfo);
//				if ($companyId === false) {
//					$res = false;
//					$companyId = null;
//				}
//			}

			_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} 会社ID + システムコースID = '".$systemCourseId."'");
			$idList = explode("_", $systemCourseId);
			$companyId = $idList[0];
			$systemCourseId = $idList[1];

			_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} システムコースID = '".$systemCourseId."'");
			_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} 会社ID = '".$companyId."'");
//			_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} 会社タイプID = '".$companyTypeId."'");


			_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} システムコースの登録有無を確認する。");
			//システムコースの登録有無を確認する。
			$condition4old = array();
			$condition4old['usr_sts_user_id'] = $userId;													//ユーザーID
			$condition4old['usr_sts_company_id'] = $companyId;												//会社ID
			$condition4old['usr_sts_system_course_id'] = $systemCourseId;									//システムコースID
			$condition4old['usr_sts_pay_status_id'] = array(MST_PAY_STATUS_ID_NON, MST_PAY_STATUS_ID_OK);	//支払状況ID="未入金","入金済"
			$order = null;
			$oldList = _DB_GetList('tbl_user_status', $condition4old, true, $order, 'usr_sts_del_flag');
			$oldInfo = null;
			if (!_IsNull($oldList)) {
				//1件のみのはず。先頭を取得する。
				$oldInfo = $oldList[0];
			}

			if (_IsNull($oldInfo)) {
				//新規登録する。
				_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} システムコースの登録有無を確認する。→無→登録する。");
				_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} 1-1.登録する。");
				//ユーザー_状況テーブルに登録する。
				$bufInfo = array();
				$bufInfo['usr_sts_user_id'] = $userId;															//ユーザーID
				$bufInfo['usr_sts_no'] = $no;																	//状況No
				$bufInfo['usr_sts_company_id'] = $companyId;													//会社ID
				$bufInfo['usr_sts_system_course_id'] = $systemCourseId;											//システムコースID
				$bufInfo['usr_sts_pay_means_id'] = $info['tbl_buy']['buy_pay_means_id'];						//支払方法ID
				$bufInfo['usr_sts_pay_status_id'] = MST_PAY_STATUS_ID_NON;										//支払状況ID="未入金"
				$bufInfo['usr_sts_system_course_name'] = $mstSystemCourseList[$systemCourseId]['name'];			//システムコース名
				$bufInfo['usr_sts_system_course_price'] = $mstSystemCourseList[$systemCourseId]['price'];		//システムコース価格
				$bufInfo['usr_sts_note'] = $info['tbl_buy']['buy_note'];										//備考
				$bufInfo['usr_sts_del_flag'] = DELETE_FLAG_NO;													//削除フラグ
				$bufInfo['usr_sts_create_ip'] = $ip;															//作成IP
				$bufInfo['usr_sts_create_date'] = null;															//作成日
				$bufInfo['usr_sts_update_ip'] = $ip;															//更新IP
				$bufInfo['usr_sts_update_date'] = null;															//更新日
				$resDb = _DB_CreateInfo('tbl_user_status', $bufInfo);
				if ($resDb === false) {
					$res = false;
					_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} 1-1.→【失敗】");
					_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} {ERROR} ユーザー_状況テーブル登録に失敗しました。_DB_CreateInfo('tbl_user_status', xxx) ", 1);
					_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} {ERROR} ユーザー_状況テーブル情報 = '".print_r($bufInfo,true)."'", 1);
				} else {
					_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} 1-1.→【成功】");
				}

				$no++;
			} else {
				//更新する。
				_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} システムコースの登録有無を確認する。→有");
				switch ($oldInfo['usr_sts_pay_status_id']) {
					case MST_PAY_STATUS_ID_NON://未入金
						//更新する。
						_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} システムコースの登録有無を確認する。→有→支払状況ID=\"未入金\"なので、更新する。");
						_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} 1-2.更新する。");
						//ユーザー_状況テーブルに更新する。
						$bufInfo = array();
						$bufInfo['usr_sts_user_id'] = $oldInfo['usr_sts_user_id'];										//ユーザーID
						$bufInfo['usr_sts_no'] = $oldInfo['usr_sts_no'];												//状況No
						$bufInfo['usr_sts_system_course_id'] = $systemCourseId;											//システムコースID
						$bufInfo['usr_sts_pay_means_id'] = $info['tbl_buy']['buy_pay_means_id'];						//支払方法ID
						$bufInfo['usr_sts_system_course_name'] = $mstSystemCourseList[$systemCourseId]['name'];			//システムコース名
						$bufInfo['usr_sts_system_course_price'] = $mstSystemCourseList[$systemCourseId]['price'];		//システムコース価格
						$bufInfo['usr_sts_note'] = $info['tbl_buy']['buy_note'];										//備考
						$bufInfo['usr_sts_update_ip'] = $ip;															//更新IP
						$bufInfo['usr_sts_update_date'] = null;															//更新日
						$resDb = _DB_SaveInfo('tbl_user_status', $bufInfo);
						if ($resDb === false) {
							$res = false;
							_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} 1-2.→【失敗】");
							_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} {ERROR} ユーザー_状況テーブル更新に失敗しました。_DB_SaveInfo('tbl_user_status', xxx) ", 1);
							_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} {ERROR} ユーザー_状況テーブル情報 = '".print_r($bufInfo,true)."'", 1);
						} else {
							_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} 1-2.→【成功】");
						}
						break;
					case MST_PAY_STATUS_ID_OK://入金済
						//更新しない。
						_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} システムコースの登録有無を確認する。→有→支払状況ID=\"入金済\"なので、更新しない。");
						break;
				}
			}
		}
	}
	_Log("[_CreateUserStatusInfo4BuyForm] {ユーザー_状況情報登録} ============================================================ end");

	_Log("[_CreateUserStatusInfo4BuyForm] 結果 = '".$res."'");

	_Log("[_CreateUserStatusInfo4BuyForm] end.");

	return $res;

}


/**
 * 入金済みかをチェックする。
 *
 * @param	int		$userId				ユーザーID
 * @param	int		$companyId			会社ID
 * @param	int		$systemCourseId		システムコースID
 * @return	boolean	{true:入金済み、使用可/false:未入金、使用不可}
 * @access	public
 * @since
 */
function _CheckUserStatus($userId, $companyId, $systemCourseId) {

	_Log("[_CheckUserStatus] start.");

	_Log("[_CheckUserStatus] (param) ユーザーID = '".$userId."'");
	_Log("[_CheckUserStatus] (param) 会社ID = '".$companyId."'");
	_Log("[_CheckUserStatus] (param) システムコースID = '".$systemCourseId."'");

	$res = false;

	if (_IsNull($userId)) {
		_Log("[_CheckUserStatus] ユーザーID未設定。");
		_Log("[_CheckUserStatus] 結果 = '".$res."'");
		_Log("[_CheckUserStatus] end.");
		return $res;
	}
	if (_IsNull($companyId)) {
		_Log("[_CheckUserStatus] 会社ID未設定。");
		_Log("[_CheckUserStatus] 結果 = '".$res."'");
		_Log("[_CheckUserStatus] end.");
		return $res;
	}
	if (_IsNull($systemCourseId)) {
		_Log("[_CheckUserStatus] システムコースID未設定。");
		_Log("[_CheckUserStatus] 結果 = '".$res."'");
		_Log("[_CheckUserStatus] end.");
		return $res;
	}

	//ユーザーのプランIDを調べる。
	$condition = array();
	$condition['usr_user_id'] = $userId;
	$undeleteOnly = false;//削除フラグは無視する。→プランを調べるだけ。管理者が削除済のユーザーを参照することもある。
	$tblUserInfo = _DB_GetInfo('tbl_user', $condition, $undeleteOnly, 'usr_del_flag');
	if (_IsNull($tblUserInfo)) {
		_Log("[_CheckUserStatus] ユーザー情報未登録。");
		_Log("[_CheckUserStatus] 結果 = '".$res."'");
		_Log("[_CheckUserStatus] end.");
		return $res;
	}

	_Log("[_CheckUserStatus] プランID = '".$tblUserInfo['usr_plan_id']."'");
	_Log("[_CheckUserStatus] プシステムコースID(変更前) = '".$systemCourseId."'");
	
	//プランIDに合わせて、システムコースIDを変更する。
	switch ($tblUserInfo['usr_plan_id']) {
		case MST_PLAN_ID_STANDARD://スタンダードパートナープラン
			switch ($systemCourseId) {
				case MST_SYSTEM_COURSE_ID_CMP://[株式会社] 株式会社設立 (システム利用料金)
					$systemCourseId = MST_SYSTEM_COURSE_ID_STANDARD_CMP;//[スタンダードパートナープラン][株式会社] 株式会社設立 (システム利用料金)
					break;
				case MST_SYSTEM_COURSE_ID_LLC://[合同会社] 合同会社設立LLC (システム利用料金)
					$systemCourseId = MST_SYSTEM_COURSE_ID_STANDARD_LLC;//[スタンダードパートナープラン][合同会社] 合同会社設立LLC (システム利用料金)
					break;
			}
			break;
		case MST_PLAN_ID_PLATINUM://プラチナパートナープラン
//			//後払いOKなので、trueを返す。
//			$res = true;
//			_Log("[_CheckUserStatus] プラチナパートナープラン→後払いOKなので、trueを返す。");
//			_Log("[_CheckUserStatus] 結果 = '".$res."'");
//			_Log("[_CheckUserStatus] end.");
//			return $res;

			switch ($systemCourseId) {
				case MST_SYSTEM_COURSE_ID_CMP://[株式会社] 株式会社設立 (システム利用料金)
					$systemCourseId = MST_SYSTEM_COURSE_ID_PLATINUM_CMP;//[プラチナパートナープラン][株式会社] 株式会社設立 (システム利用料金)
					break;
				case MST_SYSTEM_COURSE_ID_LLC://[合同会社] 合同会社設立LLC (システム利用料金)
					$systemCourseId = MST_SYSTEM_COURSE_ID_PLATINUM_LLC;//[プラチナパートナープラン][合同会社] 合同会社設立LLC (システム利用料金)
					break;
			}
			break;
		case MST_PLAN_ID_NORMAL://通常プラン
		default:
			//何も変更しない。
			break;
	}

	_Log("[_CheckUserStatus] プシステムコースID(変更後) = '".$systemCourseId."'");

	$condition = array();
	$condition['usr_sts_user_id'] = $userId;						//ユーザーID
	$condition['usr_sts_company_id'] = $companyId;					//会社ID
	$condition['usr_sts_system_course_id'] = $systemCourseId;		//システムコースID
	$condition['usr_sts_pay_status_id'] = MST_PAY_STATUS_ID_OK;		//支払状況ID="入金済"
	$undeleteOnly = true;
	$order = null;
	$tblUserStatusList = _DB_GetList('tbl_user_status', $condition, $undeleteOnly, $order, 'usr_sts_del_flag');
	if (!_IsNull($tblUserStatusList)) {
		_Log("[_CheckUserStatus] {システム利用期限チェック} システムコースID = '".$systemCourseId."'");
		switch ($systemCourseId) {
			case MST_SYSTEM_COURSE_ID_CMP://[株式会社] 株式会社設立 (システム利用料金)
			case MST_SYSTEM_COURSE_ID_LLC://[合同会社] 合同会社設立LLC (システム利用料金)

			case MST_SYSTEM_COURSE_ID_STANDARD_CMP://[スタンダードパートナープラン][株式会社] 株式会社設立 (システム利用料金)
			case MST_SYSTEM_COURSE_ID_STANDARD_LLC://[スタンダードパートナープラン][合同会社] 合同会社設立LLC (システム利用料金)

			case MST_SYSTEM_COURSE_ID_PLATINUM_CMP://[プラチナパートナープラン][株式会社] 株式会社設立 (システム利用料金)
			case MST_SYSTEM_COURSE_ID_PLATINUM_LLC://[プラチナパートナープラン][合同会社] 合同会社設立LLC (システム利用料金)

				_Log("[_CheckUserStatus] {システム利用期限チェック} → \"[株式会社] 株式会社設立 (システム利用料金)\"、\"[合同会社] 合同会社設立LLC (システム利用料金)\"は、期限チェックする。");
				//支払状況ID="入金済"は1件のみのはず。先頭を取得する。
				$tblUserStatusInfo = $tblUserStatusList[0];
				_Log("[_CheckUserStatus] {システム利用期限チェック} 入金日の登録あるか？");
				//入金日の登録あるか？
				if (!_IsNull($tblUserStatusInfo['usr_sts_pay_year']) && !_IsNull($tblUserStatusInfo['usr_sts_pay_month']) && !_IsNull($tblUserStatusInfo['usr_sts_pay_day'])) {
					_Log("[_CheckUserStatus] {システム利用期限チェック} 入金日の登録あるか？ → 入金日が設定有 →  OK");
					$res = true;

//※ここでの期限チェックは不要。cronでチェック、更新しているのでOK。
//					_Log("[_CheckUserStatus] {システム利用期限チェック} システム利用期限(単位:日{null:期間制限無}) = '".SYSTEM_USE_DEADLINE."'");
//					if (_IsNull(SYSTEM_USE_DEADLINE)) {
//						_Log("[_CheckUserStatus] {システム利用期限チェック} → 期限チェックなし。 → OK");
//						$res = true;
//					} else {
//						$payYear = $tblUserStatusInfo['usr_sts_pay_year'];
//						$payMonth = $tblUserStatusInfo['usr_sts_pay_month'];
//						$payDay = $tblUserStatusInfo['usr_sts_pay_day'];
//						$payTime = mktime(0, 0, 0, $payMonth, $payDay, $payYear);
//						$payYmd = sprintf('%04d/%02d/%02d', $payYear, $payMonth, $payDay);
//						//入金日のNヶ月後を取得する。
//						$deadlineTime = mktime(0, 0, 0, $payMonth, $payDay + SYSTEM_USE_DEADLINE, $payYear);
//						$deadlineYear = date('Y', $deadlineTime);
//						$deadlineMonth = date('n', $deadlineTime);
//						$deadlineDay = date('j', $deadlineTime);
//						$deadlineYmd = sprintf('%04d/%02d/%02d', $deadlineYear, $deadlineMonth, $deadlineDay);
//						//本日を取得する。
//						$nowTime = mktime(0, 0, 0, date('n'), date('j'), date('Y'));
//						$nowYear = date('Y', $nowTime);
//						$nowMonth = date('n', $nowTime);
//						$nowDay = date('j', $nowTime);
//						$nowYmd = sprintf('%04d/%02d/%02d', $nowYear, $nowMonth, $nowDay);
//
//						_Log("[_CheckUserStatus] {システム利用期限チェック} 入金日 = '".$payYmd."'");
//						_Log("[_CheckUserStatus] {システム利用期限チェック} 期限日 = '".$deadlineYmd."'");
//						_Log("[_CheckUserStatus] {システム利用期限チェック} 本　日 = '".$nowYmd."'");
//						_Log("[_CheckUserStatus] {システム利用期限チェック} 入金日(time) = '".$payTime."'");
//						_Log("[_CheckUserStatus] {システム利用期限チェック} 期限日(time) = '".$deadlineTime."'");
//						_Log("[_CheckUserStatus] {システム利用期限チェック} 本　日(time) = '".$nowTime."'");
//
//						_Log("[_CheckUserStatus] {システム利用期限チェック} 期限チェック");
//						if ($nowTime <= $deadlineTime) {
//							_Log("[_CheckUserStatus] {システム利用期限チェック} → OK");
//							$res = true;
//						} else {
//							_Log("[_CheckUserStatus] {システム利用期限チェック} → 【NG】");//※cronでの自動更新追加したら、ここでのチェックは不要！状況だけみればOKになる。
//						}
//					}
				} else {
					_Log("[_CheckUserStatus] {システム利用期限チェック} 入金日の登録あるか？ → 入金日が未設定 →  【NG】");
				}
				break;
			default:
				_Log("[_CheckUserStatus] {システム利用期限チェック} → 期限チェックなし。 → OK");
				$res = true;
				break;
		}
	}

	_Log("[_CheckUserStatus] 結果 = '".$res."'");
	_Log("[_CheckUserStatus] end.");
	return $res;
}



/**
 * ユーザー情報を検索する。
 *
 * @param	mixed	$condition				検索条件
 * @param	string	$order					ソート条件
 * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
 * @param	int		$activePage				表示するページ
 * @param	int		$showNumberOfOnePage	1ページの表示件数
 * @param	int		$returnMode				返り値配列の格納モード{1:通常(添字0~Nの1次元配列)/2:ユーザーID毎([ユーザーID]の1次元配列)/3:}
 * @return	array	ユーザー情報(取得できなかった場合はnull。)
 * @access	public
 * @since	3.2.0
 */
function _GetUser($condition = null, $order = null, $undeleteOnly = true, $countOnly = false, $activePage = 1, $showNumberOfOnePage = null, $returnMode = 1) {

	_Log("[_GetUser] start.");

	_Log("[_GetUser] (param) 検索条件='".print_r($condition,true)."'");
	_Log("[_GetUser] (param) ソート条件='".$order."'");
	_Log("[_GetUser] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
	_Log("[_GetUser] (param) 表示するページ='".$activePage."'");
	_Log("[_GetUser] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
	_Log("[_GetUser] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
	_Log("[_GetUser] (param) 返り値配列の格納モード{1:通常(添字0~Nの1次元配列)/2:ユーザーID毎([ユーザーID]の1次元配列)/3:}='".$returnMode."'");


	//一時テーブルを作成する。=========================================================================================================start
	//1.ユーザー_状況テーブルをサマリした結果の一時テーブルを一旦削除する。
	$sql = "";
	$sql .= "\n drop table if exists tmp_tbl_user_status";

	_Log("[_GetUser] {1.ユーザー_状況テーブルの一時テーブル削除} sql='".$sql."'", 2);

	//SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	if ($result === false) {
		_Log("[_GetUser] mysql_error='".mysql_error()."'", 1);
		_Log("[_GetUser] mysql_errno='".mysql_errno()."'", 1);
		_Log("[_GetUser] SQL='".$sql."'", 1);
		return null;
	}

	//2.ユーザー_状況テーブルをサマリした結果の一時テーブルを作成する。
	$sql = "";
	$sql .= "\n create temporary table tmp_tbl_user_status";
	$sql .= "\n as";
	$sql .= "\n select";
	$sql .= "\n  usr_sts_user_id";//ユーザーID
	$sql .= "\n from tbl_user_status";

	//検索条件を設定する。
	$sql .= "\n where";
	$sql .= "\n 1=1";

	$sql .= "\n and usr_sts_del_flag = ".DELETE_FLAG_NO."";//削除フラグ

	//支払状況ID
	if (isset($condition['usr_sts_pay_status_id'])) {
		$buf = null;
		switch (gettype($condition['usr_sts_pay_status_id'])) {
			case 'array':
				foreach ($condition['usr_sts_pay_status_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['usr_sts_pay_status_id'])) {
					$buf .= mysql_real_escape_string($condition['usr_sts_pay_status_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and usr_sts_pay_status_id in (".$buf.")";
		}
	}

	$sql .= "\n group by usr_sts_user_id";




	_Log("[_GetUser] {2.ユーザー_状況テーブルの一時テーブル作成} sql='".$sql."'", 2);

	//SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	if ($result === false) {
		_Log("[_GetUser] mysql_error='".mysql_error()."'", 1);
		_Log("[_GetUser] mysql_errno='".mysql_errno()."'", 1);
		_Log("[_GetUser] SQL='".$sql."'", 1);
		return null;
	}

	//3.ユーザー_状況テーブルをサマリした結果の一時テーブルにインデックスを作成する。
	$sql = "";
	$sql .= "\n create index idx_tmp_tbl_user_status on tmp_tbl_user_status (usr_sts_user_id)";

	_Log("[_GetUser] {3.ユーザー_状況テーブルの一時テーブルインデックス作成} sql='".$sql."'", 2);

	//SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	if ($result === false) {
		_Log("[_GetUser] mysql_error='".mysql_error()."'", 1);
		_Log("[_GetUser] mysql_errno='".mysql_errno()."'", 1);
		_Log("[_GetUser] SQL='".$sql."'", 1);
		return null;
	}

	//一時テーブルを作成する。=========================================================================================================end

//-----------------------------------------test start
if (true) {
//if (false) {
	$sql = "";
	$sql .= "\n select";
	$sql .= "\n  *";
	$sql .= "\n from";
	$sql .= "\n  tmp_tbl_user_status";

	_Log("[_GetUser] (TEST){ユーザー_状況テーブルの一時テーブル確認} sql='".$sql."'", 2);

	//SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	if ($result === false) {
		_Log("[_GetUser] mysql_error='".mysql_error()."'", 1);
		_Log("[_GetUser] mysql_errno='".mysql_errno()."'", 1);
		_Log("[_GetUser] SQL='".$sql."'", 1);
	} else {
		//検索結果を配列に格納
		while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
			_Log("[_GetUser] (TEST){ユーザー_状況テーブルの一時テーブル確認} ☆結果='".print_r($line,true)."'", 2);
		}
	}

}
//-----------------------------------------test end




	//SQLを作成する。
	$sql = "";
	$sql .= "\n select";
	$sql .= "\n 	t_usr.*";																						//ユーザーテーブル

	$sql .= "\n 	,m_prf.name usr_pref_name";																		//住所(都道府県)

	$sql .= "\n 	,date_format(t_usr.usr_create_date,'%Y/%m/%d %H:%i:%s') usr_create_date_yyyymmddhhmmss";		//作成日YYYY/MM/DD hh:mm:ss
	$sql .= "\n 	,date_format(t_usr.usr_create_date,'%Y/%m/%d') usr_create_date_yyyymmdd";						//作成日YYYY/MM/DD
	$sql .= "\n 	,date_format(t_usr.usr_create_date,'%y/%m/%d') usr_create_date_yymmdd";							//作成日YY/MM/DD
	$sql .= "\n 	,date_format(t_usr.usr_update_date,'%Y/%m/%d %H:%i:%s') usr_update_date_yyyymmddhhmmss";		//更新日YYYY/MM/DD hh:mm:ss
	$sql .= "\n 	,date_format(t_usr.usr_update_date,'%Y/%m/%d') usr_update_date_yyyymmdd";						//更新日YYYY/MM/DD
	$sql .= "\n 	,date_format(t_usr.usr_update_date,'%y/%m/%d') usr_update_date_yymmdd";							//更新日YY/MM/DD

	$sql .= "\n 	,sign(ifnull(tmp_t_usr_sts.usr_sts_user_id,0)) status_flag";

	$sql .= "\n from";

	$sql .= "\n 	tbl_user t_usr";																				//ユーザーテーブル

	$sql .= "\n 		left outer join mst_pref m_prf on t_usr.usr_pref_id = m_prf.id";							//住所(都道府県)

	$sql .= "\n 		left outer join tmp_tbl_user_status tmp_t_usr_sts on t_usr.usr_user_id = tmp_t_usr_sts.usr_sts_user_id";		//ユーザー_状況テーブルの一時テーブル


	//検索条件を設定する。
	$sql .= "\n where";
	$sql .= "\n 1=1";

	//ユーザーテーブルの条件------------------------

	//削除フラグ
	if ($undeleteOnly) {
		$sql .= "\n and t_usr.usr_del_flag = ".DELETE_FLAG_NO."";
	}

	//ユーザーID
	if (isset($condition['usr_user_id'])) {
		$buf = null;
		switch (gettype($condition['usr_user_id'])) {
			case 'array':
				foreach ($condition['usr_user_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['usr_user_id'])) {
					$buf .= mysql_real_escape_string($condition['usr_user_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and t_usr.usr_user_id in (".$buf.")";
		}
	}

	//削除フラグ
	if (isset($condition['usr_del_flag'])) {
		$buf = null;
		switch (gettype($condition['usr_del_flag'])) {
			case 'array':
				foreach ($condition['usr_del_flag'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['usr_del_flag'])) {
					$buf .= mysql_real_escape_string($condition['usr_del_flag']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and t_usr.usr_del_flag in (".$buf.")";
		}
	}

	//プランID
	if (isset($condition['usr_plan_id'])) {
		$buf = null;
		switch (gettype($condition['usr_plan_id'])) {
			case 'array':
				foreach ($condition['usr_plan_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['usr_plan_id'])) {
					$buf .= mysql_real_escape_string($condition['usr_plan_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and t_usr.usr_plan_id in (".$buf.")";
		}
	}

	//E-Mail
	if (isset($condition['usr_e_mail']) && !_IsNull($condition['usr_e_mail'])) {
		$sql .= "\n and t_usr.usr_e_mail like '%".mysql_real_escape_string($condition['usr_e_mail'])."%'";
	}

	//名前(姓)	
	if (isset($condition['usr_family_name']) && !_IsNull($condition['usr_family_name'])) {
		$sql .= "\n and t_usr.usr_family_name like '%".mysql_real_escape_string($condition['usr_family_name'])."%'";
	}

	//名前(名)	
	if (isset($condition['usr_first_name']) && !_IsNull($condition['usr_first_name'])) {
		$sql .= "\n and t_usr.usr_first_name like '%".mysql_real_escape_string($condition['usr_first_name'])."%'";
	}

	if (_IsNull($order)) {
		$order .= "\n t_usr.usr_user_id desc";	//ユーザーテーブル.ユーザーID(降順)
	}


	//ユーザー_状況テーブルの条件-------------------------------------------------------------
	//支払状況ID
	if (isset($condition['usr_sts_pay_status_id'])) {
		$buf = null;
		switch (gettype($condition['usr_sts_pay_status_id'])) {
			case 'array':
				foreach ($condition['usr_sts_pay_status_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['usr_sts_pay_status_id'])) {
					$buf .= mysql_real_escape_string($condition['usr_sts_pay_status_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and tmp_t_usr_sts.usr_sts_user_id is not null";
		}
	}


	$sql .= "\n order by";
	$sql .= " ".$order;


	//検索件数のみ場合、以下の条件は不要
	if (!$countOnly) {
		//全件の場合、以下の条件は不要
		if (!_IsNull($showNumberOfOnePage)) {
			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
		}
	}

	_Log("[_GetUser] sql='\n".$sql."\n'", 2);

	//SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	$list = null;
	$count = null;
	if ($result === false) {
		_Log("[_GetUser] mysql_error='".mysql_error()."'", 1);
		_Log("[_GetUser] mysql_errno='".mysql_errno()."'", 1);
		_Log("[_GetUser] SQL='".$sql."'", 1);
	} else {
		$count = mysql_num_rows($result);
		if (!$countOnly) {
			$list = array();

			//検索結果を配列に格納
			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
				switch ($returnMode) {
					case 2:
						$list[$line['usr_user_id']] = $line;
						break;
					default:
						$list[] = $line;
						break;
				}
			}
			if (count($list) == 0) 	$list = null;
		}
	}

	_Log("[_GetUser] 結果(ユーザー情報件数)='".$count."'");
	_Log("[_GetUser] 結果(ユーザー情報)='".print_r($list,true)."'");
	_Log("[_GetUser] end.");

	if ($countOnly) {
		return $count;
	} else {
		return $list;
	}
}


/* end   ----------------------------------------------ユーザー関連---------------------------------------------- end   */

/* start ------------------------------------------株式会社設立情報関連------------------------------------------ start */
/**
 * 株式会社設立情報を作成する。
 *
 * @param	mixed   $info		株式会社設立情報
 * @return	int		会社ID{false:失敗した場合}
 * @access  public
 * @since
 */
function _CreateCompanyInfo(&$info) {

	_Log("[_CreateCompanyInfo] start.");

	_Log("[_CreateCompanyInfo] (param) 株式会社設立情報='".print_r($info,true)."'");

	//IPアドレスを設定する。
	$ip = $_SERVER["REMOTE_ADDR"];
	$date = null;


	//株式会社設立情報を登録する。
	_Log("[_CreateCompanyInfo] {株式会社設立情報登録} ============================================================ start");

	//1.会社テーブルに登録する。
	_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.会社テーブル情報登録");

	$errorFlag = true;
	$companyId = null;

	_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.役員構成IDが設定有りか？");
	$tblCompanyBoardFlag = false;

	//役員構成IDが設定有りか？
	if (isset($info['tbl_company']['cmp_board_formation_id']) && !_IsNull($info['tbl_company']['cmp_board_formation_id'])) {
		_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→設定有→処理有");
		switch ($info['tbl_company']['cmp_board_formation_id']) {
			case MST_BOARD_FORMATION_ID_1_10:
				//取締役会を設置しない　役員1〜10人で設立
				//取締役人数
				if (_IsNull($info['tbl_company']['cmp_director_num'])) $info['tbl_company']['cmp_director_num'] = 1;
				$info['tbl_company']['cmp_inspector_num'] = 0;			//監査役人数
				break;
			case MST_BOARD_FORMATION_ID_3_1:
				//取締役会を設置する　役員3人と監査役1人で設立
				//(修正2011/10/25)
				//役員構成=「取締役会を設置する　取締役3人以上と監査役1人が必要です。」で「3人以上」となったので、人数を選択できるようにする。
				if (_IsNull($info['tbl_company']['cmp_director_num'])) {
					$info['tbl_company']['cmp_director_num'] = 3;			//取締役人数
				} elseif ($info['tbl_company']['cmp_director_num'] < 3) {
					$info['tbl_company']['cmp_director_num'] = 3;			//取締役人数
				} else {
				}
				$info['tbl_company']['cmp_inspector_num'] = 1;			//監査役人数
				break;
		}
		_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→取締役人数、監査役人数調整 = '".print_r($info,true)."'");
		$tblCompanyBoardFlag = true;
	} else {
		_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→設定無→処理無");
		//取締役人数が設定有の場合、役員構成ID=未設定と判断する。→会社_役員テーブルを全削除(論理削除)する。
		if (isset($info['tbl_company']['cmp_director_num'])) {
			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→取締役人数が設定有の場合、役員構成ID=未設定と判断する。→会社_役員テーブルを全削除(論理削除)する。");
			$info['tbl_company']['cmp_board_formation_id'] = null;		//役員構成ID=未設定

			$info['tbl_company']['cmp_director_num'] = 0;				//取締役人数
			$info['tbl_company']['cmp_inspector_num'] = 0;				//監査役人数

			$tblCompanyBoardFlag = true;
		} else {
			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→取締役人数が設定無の場合、処理無。→会社_役員テーブルへの処理無。");
		}
	}

	_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.会社IDが設定済みか？");
	//会社IDが設定済みか？
	if (isset($info['tbl_company']['cmp_company_id']) && !_IsNull($info['tbl_company']['cmp_company_id'])) {
		//設定済→更新
		_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→設定済→更新");

		$info['tbl_company']['cmp_del_flag'] = ((isset($info['tbl_company']['cmp_del_flag']) && !_IsNull($info['tbl_company']['cmp_del_flag']))?$info['tbl_company']['cmp_del_flag']:DELETE_FLAG_NO);	//削除フラグ
		$info['tbl_company']['cmp_update_ip'] = $ip;			//更新IP
		$info['tbl_company']['cmp_update_date'] = $date;		//更新日
		unset($info['tbl_company']['cmp_create_ip']);			//作成IP
		unset($info['tbl_company']['cmp_create_date']);			//作成日
		$res = _DB_SaveInfo('tbl_company', $info['tbl_company']);
		if ($res === false) {
			$errorFlag = false;
			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→【更新失敗】");
			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社テーブル更新に失敗しました。_DB_SaveInfo('tbl_company', xxx) ", 1);
			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社テーブル情報 = '".print_r($info['tbl_company'],true)."'", 1);
		} else {
			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→【更新成功】");
			//会社IDを設定する。
			$companyId = $info['tbl_company']['cmp_company_id'];
		}
	} else {
		//未設定→登録
		_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→未設定→登録");

		//会社タイプIDによって初期値を設定する。
		switch ($info['tbl_company']['cmp_company_type_id']) {
			case MST_COMPANY_TYPE_ID_CMP:
				//株式会社
				if (_IsNull($info['tbl_company']['cmp_term_year'])) $info['tbl_company']['cmp_term_year'] = 10;						//取締役任期=10年固定
				if (_IsNull($info['tbl_company']['cmp_inspector_term_year'])) $info['tbl_company']['cmp_inspector_term_year'] = 4;	//監査役任期=4年固定
				break;
			case MST_COMPANY_TYPE_ID_LLC:
				//合同会社
				$info['tbl_company']['cmp_article_business_execution_id'] = MST_ARTICLE_BUSINESS_EXECUTION_ID_ALL;		//定款業務執行ID="全員の一致"
				$info['tbl_company']['cmp_article_share_id'] = MST_ARTICLE_SHARE_ID_ALL;								//定款分配ID="総社員の同意により、出資額と異なる割合によることができる"
				$info['tbl_company']['cmp_article_change_id'] = MST_ARTICLE_CHANGE_ID_ALL;								//定款変更ID="社員全員の一致をもって"
				break;
		}


		$info['tbl_company']['cmp_del_flag'] = ((isset($info['tbl_company']['cmp_del_flag']) && !_IsNull($info['tbl_company']['cmp_del_flag']))?$info['tbl_company']['cmp_del_flag']:DELETE_FLAG_NO);	//削除フラグ
		$info['tbl_company']['cmp_create_ip'] = $ip;			//作成IP
		$info['tbl_company']['cmp_create_date'] = $date;		//作成日
		$info['tbl_company']['cmp_update_ip'] = $ip;			//更新IP
		$info['tbl_company']['cmp_update_date'] = $date;		//更新日
		$companyId = _DB_CreateInfo('tbl_company', $info['tbl_company']);
		if ($companyId === false) {
			$companyId = null;
			$errorFlag = false;
			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→【登録失敗】");
			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社テーブル登録に失敗しました。_DB_CreateInfo('tbl_company', xxx) ", 1);
			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社テーブル情報 = '".print_r($info['tbl_company'],true)."'", 1);
			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} ※会社_xxxテーブルへの登録は、会社IDが無いため行いません。", 1);
		} else {
			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→【登録成功】");


			//1.ユーザー_会社_関連付テーブルに登録する。
			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→ユーザー_会社_関連付テーブルに登録する。(ユーザーIDと会社IDを関連付ける。)");

			$info4rel = array();
			$info4rel['usr_cmp_rel_user_id'] = $info['tbl_user']['usr_user_id'];	//ユーザーID
			$info4rel['usr_cmp_rel_company_id'] = $companyId;						//会社ID
			$info4rel['usr_cmp_rel_create_ip'] = $ip;									//作成IP
			$info4rel['usr_cmp_rel_create_date'] = $date;								//作成日
			$info4rel['usr_cmp_rel_update_ip'] = $ip;									//更新IP
			$info4rel['usr_cmp_rel_update_date'] = $date;								//更新日
			$res = _DB_CreateInfo('tbl_user_company_relation', $info4rel);
			if ($res === false) {
				$errorFlag = false;
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→【登録失敗】");
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} ユーザー_会社_関連付テーブル登録に失敗しました。_DB_CreateInfo('tbl_user_company_relation', xxx) ", 1);
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} ユーザー_会社_関連付テーブル情報 = '".print_r($info4rel,true)."'", 1);
			} else {
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 1.→【登録成功】");
			}
		}
	}

	if (!_IsNull($companyId)) {

		//2.会社_目的テーブルに登録する。
		_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 2.会社_目的テーブル情報登録");

		if (isset($info['tbl_company_purpose']['purpose_info'])) {
			//会社_目的テーブル情報が設定されている場合、処理する。

			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 2.→会社_目的テーブル情報を一旦削除する。");
			$condition4del = array();
			$condition4del['cmp_pps_company_id'] = $companyId;//会社ID
			$res = _DB_DeleteInfo('tbl_company_purpose', $condition4del);
			if ($res === false) {
				$errorFlag = false;
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 2.→【削除失敗】");
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_目的テーブル削除に失敗しました。_DB_DeleteInfo('tbl_company_purpose', xxx) ", 1);
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 削除条件 = '".print_r($condition4del,true)."'", 1);
			} else {
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 2.→【削除成功】");
			}

			if (is_array($info['tbl_company_purpose']['purpose_info'])) {
				$cmpPpsNo = 0;
				foreach ($info['tbl_company_purpose']['purpose_info'] as $key => $tblCompanyPurposeInfo) {
					//削除フラグ="ON"は、登録しない。
					if (isset($tblCompanyPurposeInfo['cmp_pps_del_flag']) && $tblCompanyPurposeInfo['cmp_pps_del_flag'] == DELETE_FLAG_YES) {
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 2.→削除フラグ=\"ON\"は、登録しない。");
						continue;
					}
					//以下の項目が全て未入力の場合、登録しない。
					$createFlag = false;
					//目的
					if (isset($tblCompanyPurposeInfo['cmp_pps_purpose']) && !_IsNull($tblCompanyPurposeInfo['cmp_pps_purpose'])) $createFlag = true;
					if (!$createFlag) {
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 2.→必須項目が全て未入力の場合、登録しない。");
						continue;
					}

					_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 2.→必須項目が一つでも入力有の場合、登録する。");

					$cmpPpsNo++;
					$tblCompanyPurposeInfo['cmp_pps_company_id'] = $companyId;										//会社ID
					$tblCompanyPurposeInfo['cmp_pps_no'] = $cmpPpsNo;												//目的No
					//$tblCompanyPurposeInfo['cmp_pps_purpose'] = null;												//目的
					$tblCompanyPurposeInfo['cmp_pps_del_flag'] = DELETE_FLAG_NO;									//削除フラグ="未削除"
					$tblCompanyPurposeInfo['cmp_pps_create_ip'] = $ip;												//作成IP
					$tblCompanyPurposeInfo['cmp_pps_create_date'] = $date;											//作成日
					$tblCompanyPurposeInfo['cmp_pps_update_ip'] = $ip;												//更新IP
					$tblCompanyPurposeInfo['cmp_pps_update_date'] = $date;											//更新日

					//登録情報を保存しておく。(使うかもしれないので。)
					$info['tbl_company_purpose']['purpose_info'][$key] = $tblCompanyPurposeInfo;

					$res = _DB_CreateInfo('tbl_company_purpose', $tblCompanyPurposeInfo);
					if ($res === false) {
						$errorFlag = false;
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 2.→【登録失敗】");
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_目的テーブル登録に失敗しました。_DB_CreateInfo('tbl_company_purpose', xxx) ", 1);
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_目的テーブル情報 = '".print_r($tblCompanyPurposeInfo,true)."'", 1);
					} else {
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 2.→【登録成功】");
					}
				}
			}
		}

		//3.会社_役員テーブルに登録する。
		_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.会社_役員テーブル情報登録");
		if (isset($info['tbl_company_board']) || $tblCompanyBoardFlag) {

			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→会社_役員テーブル情報を一旦削除する。(論理削除)");
			$condition4del = array();
			$condition4del['cmp_bod_company_id'] = $companyId;		//会社ID
			$condition4del['cmp_bod_del_flag'] = DELETE_FLAG_YES;	//削除フラグ="削除済"
			$condition4del['cmp_bod_update_ip'] = $ip;				//更新IP
			$condition4del['cmp_bod_update_date'] = $date;			//更新日
			$res = _DB_SaveInfo('tbl_company_board', $condition4del);
			if ($res === false) {
				$errorFlag = false;
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→【削除失敗(論理削除)】");
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社テーブル更新に失敗しました。_DB_SaveInfo('tbl_company_board', xxx) ", 1);
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社テーブル情報 = '".print_r($condition4del,true)."'", 1);
			} else {
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→【削除成功(論理削除)】");
			}

			if ($tblCompanyBoardFlag) {
				//役員構成IDの設定が変更されたので、会社_役員テーブル情報を更新する。
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→役員構成IDの設定が変更されたので、会社_役員テーブル情報を更新する。");

				$directorNum = $info['tbl_company']['cmp_director_num'];		//取締役人数
				$inspectorNum = $info['tbl_company']['cmp_inspector_num'];		//監査役人数

				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→取締役人数 = '".$directorNum."'");
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→監査役人数 = '".$inspectorNum."'");

				$updNoList = array();
				$insPostIdList = array();

				if ($directorNum > 0) {
					//現在の会社_役員テーブル情報を検索する。
					//役職ID="代表取締役"を検索する。
					$condition4old = array();
					$condition4old['cmp_bod_company_id'] = $companyId;				//会社ID
					$condition4old['cmp_bod_post_id'] = MST_POST_ID_REP_DIRECTOR;	//役職ID="代表取締役"
					$order = null;
					$order .= "cmp_bod_no";//ソート順=役員Noの昇順
					$oldList = _DB_GetList('tbl_company_board', $condition4old, false, $order, 'cmp_bod_del_flag');
//					if (!_IsNull($oldList)) {
//						//役職ID="代表取締役"が存在した場合、削除フラグ="未削除"に更新する。(→1件のはずなので、先頭を更新する。)
//						$updNoList[] = $oldList[0]['cmp_bod_no'];
//					} else {
//						//役職ID="代表取締役"が存在しない場合、登録する。
//						$insPostIdList[] = MST_POST_ID_REP_DIRECTOR;
//					}
//					$directorNum--;

					if (!_IsNull($oldList)) {
						foreach ($oldList as $oKey => $oldInfo) {
							//役職ID="代表取締役"が存在した場合、削除フラグ="未削除"に更新する。(→複数になった。)
							$updNoList[] = $oldInfo['cmp_bod_no'];
							$directorNum--;

							if ($directorNum == 0) break;
						}
					} else {
						//役職ID="代表取締役"が存在しない場合、登録する。
						$insPostIdList[] = MST_POST_ID_REP_DIRECTOR;
						$directorNum--;
					}

					if ($directorNum > 0) {
						//役職ID="取締役"を検索する。
						$condition4old = array();
						$condition4old['cmp_bod_company_id'] = $companyId;				//会社ID
						$condition4old['cmp_bod_post_id'] = MST_POST_ID_DIRECTOR;		//役職ID="取締役"
						$order = null;
						$order .= "cmp_bod_no";//ソート順=役員Noの昇順
						$oldList = _DB_GetList('tbl_company_board', $condition4old, false, $order, 'cmp_bod_del_flag');
						if (!_IsNull($oldList)) {
							foreach ($oldList as $oKey => $oldInfo) {
								//役職ID="取締役"が存在した場合、削除フラグ="未削除"に更新する。
								$updNoList[] = $oldInfo['cmp_bod_no'];
								$directorNum--;

								if ($directorNum == 0) break;
							}
						}
					}
					//役職ID="取締役"が足りない分場合、登録する。
					$max = $directorNum;
					for ($i = 0; $i < $max; $i++) {
						$insPostIdList[] = MST_POST_ID_DIRECTOR;
						$directorNum--;
					}
				}

				if ($inspectorNum > 0) {
					//役職ID="監査役"を検索する。
					$condition4old = array();
					$condition4old['cmp_bod_company_id'] = $companyId;				//会社ID
					$condition4old['cmp_bod_post_id'] = MST_POST_ID_INSPECTOR;		//役職ID="監査役"
					$order = null;
					$order .= "cmp_bod_no";//ソーと順=役員Noの昇順
					$oldList = _DB_GetList('tbl_company_board', $condition4old, false, $order, 'cmp_bod_del_flag');
					if (!_IsNull($oldList)) {
						foreach ($oldList as $oKey => $oldInfo) {
							//役職ID="監査役"が存在した場合、削除フラグ="未削除"に更新する。
							$updNoList[] = $oldInfo['cmp_bod_no'];
							$inspectorNum--;

							if ($inspectorNum == 0) break;
						}
					}
					//役職ID="監査役"が足りない分場合、登録する。
					$max = $inspectorNum;
					for ($i = 0; $i < $max; $i++) {
						$insPostIdList[] = MST_POST_ID_INSPECTOR;
						$inspectorNum--;
					}
				}

				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→取締役人数(処理後) = '".$directorNum."'");
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→監査役人数(処理後) = '".$inspectorNum."'");

				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→更新分の役員No = '".print_r($updNoList, true)."'");
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→登録分の役職ID = '".print_r($insPostIdList, true)."'");

				if (count($updNoList) > 0) {
					_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→会社_役員テーブル情報を更新する。論理削除を復活される。");
					$condition4upd = array();
					$condition4upd['cmp_bod_company_id'] = $companyId;		//会社ID
					$condition4upd['cmp_bod_no'] = $updNoList;				//役員No
					$condition4upd['cmp_bod_del_flag'] = DELETE_FLAG_NO;	//削除フラグ="未削除"
					$condition4upd['cmp_bod_update_ip'] = $ip;				//更新IP
					$condition4upd['cmp_bod_update_date'] = $date;			//更新日
					$res = _DB_SaveInfo('tbl_company_board', $condition4upd);
					if ($res === false) {
						$errorFlag = false;
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→【更新失敗(論理削除復活)】");
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社テーブル更新に失敗しました。_DB_SaveInfo('tbl_company_board', xxx) ", 1);
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社テーブル情報 = '".print_r($condition4upd,true)."'", 1);
					} else {
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→【更新成功(論理削除復活)】");
					}
				}

				if (count($insPostIdList) > 0) {
					_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→会社_役員テーブル情報を登録する。役員構成分の枠のみ登録する。");
					foreach ($insPostIdList as $insKey => $insPostId) {
						//役員Noを採番する。
						$condition4bodNo = array();
						$condition4bodNo['cmp_bod_company_id'] = $companyId;		//会社ID
						$cmpBodNo = _DB_GetNextNo('tbl_company_board', 'cmp_bod_no', $condition4bodNo, false);

						$newInfo = array();
						$newInfo['cmp_bod_company_id'] = $companyId;			//会社ID
						$newInfo['cmp_bod_no'] = $cmpBodNo;						//役員No
						$newInfo['cmp_bod_post_id'] = $insPostId;				//役職ID
						$newInfo['cmp_bod_del_flag'] = DELETE_FLAG_NO;			//削除フラグ="未削除"
						$newInfo['cmp_bod_create_ip'] = $ip;					//作成IP
						$newInfo['cmp_bod_create_date'] = $date;				//作成日
						$newInfo['cmp_bod_update_ip'] = $ip;					//更新IP
						$newInfo['cmp_bod_update_date'] = $date;				//更新日
						$res = _DB_CreateInfo('tbl_company_board', $newInfo);
						if ($res === false) {
							$errorFlag = false;
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→【登録失敗】");
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_役員テーブル登録に失敗しました。_DB_CreateInfo('tbl_company_board', xxx) ", 1);
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_役員テーブル情報 = '".print_r($newInfo,true)."'", 1);
						} else {
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→【登録成功】");
						}
					}
				}

			} elseif (is_array($info['tbl_company_board'])) {
				foreach ($info['tbl_company_board'] as $key => $tblCompanyBoardInfo) {
					//削除フラグ="ON"は、登録しない。
					if (isset($tblCompanyBoardInfo['cmp_bod_del_flag']) && $tblCompanyBoardInfo['cmp_bod_del_flag'] == DELETE_FLAG_YES) {
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→削除フラグ=\"ON\"は、登録しない。");
						continue;
					}
					//以下の項目が全て未入力の場合、登録しない。
					$createFlag = false;
					foreach ($tblCompanyBoardInfo as $name => $value) {
						switch ($name) {
							case 'cmp_bod_company_id':		//会社ID
							case 'cmp_bod_no':				//役員No
							case 'cmp_bod_del_flag':		//削除フラグ
							case 'cmp_bod_create_ip':		//作成IP
							case 'cmp_bod_create_date':		//作成日
							case 'cmp_bod_update_ip':		//更新IP
							case 'cmp_bod_update_date':		//更新日
								break;
							default:
								//上記以外の項目の入力有無をチェックする。
								if (!_IsNull($value)) $createFlag = true;
								break;
						}
					}
					if (!$createFlag) {
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→必須項目が全て未入力の場合、登録しない。");
						continue;
					}

					_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→必須項目が一つでも入力有の場合、登録する。");


					_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.役員Noが設定済みか？");
					//役員Noが設定済みか？
					if (isset($tblCompanyBoardInfo['cmp_bod_no']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_no'])) {
						//設定済→更新
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→設定済→更新");

						$tblCompanyBoardInfo['cmp_bod_company_id'] = $companyId;			//会社ID
						$tblCompanyBoardInfo['cmp_bod_del_flag'] = DELETE_FLAG_NO;			//削除フラグ="未削除"
						$tblCompanyBoardInfo['cmp_bod_update_ip'] = $ip;					//更新IP
						$tblCompanyBoardInfo['cmp_bod_update_date'] = $date;				//更新日
						unset($tblCompanyBoardInfo['cmp_bod_create_ip']);					//作成IP
						unset($tblCompanyBoardInfo['cmp_bod_create_date']);					//作成日
						$res = _DB_SaveInfo('tbl_company_board', $tblCompanyBoardInfo);
						if ($res === false) {
							$errorFlag = false;
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→【更新失敗】");
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_役員テーブル更新に失敗しました。_DB_SaveInfo('tbl_company_board', xxx) ", 1);
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_役員テーブル情報 = '".print_r($tblCompanyBoardInfo,true)."'", 1);
						} else {
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→【更新成功】");
						}
					} else {
						//未設定→登録
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→未設定→登録");

						//役員Noを採番する。
						$condition4bodNo = array();
						$condition4bodNo['cmp_bod_company_id'] = $companyId;		//会社ID
						$cmpBodNo = _DB_GetNextNo('tbl_company_board', 'cmp_bod_no', $condition4bodNo, false);

						$tblCompanyBoardInfo['cmp_bod_company_id'] = $companyId;			//会社ID
						$tblCompanyBoardInfo['cmp_bod_no'] = $cmpBodNo;						//役員No
						$tblCompanyBoardInfo['cmp_bod_del_flag'] = DELETE_FLAG_NO;			//削除フラグ="未削除"
						$tblCompanyBoardInfo['cmp_bod_create_ip'] = $ip;					//作成IP
						$tblCompanyBoardInfo['cmp_bod_create_date'] = $date;				//作成日
						$tblCompanyBoardInfo['cmp_bod_update_ip'] = $ip;					//更新IP
						$tblCompanyBoardInfo['cmp_bod_update_date'] = $date;				//更新日
						$res = _DB_CreateInfo('tbl_company_board', $tblCompanyBoardInfo);
						if ($res === false) {
							$errorFlag = false;
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→【登録失敗】");
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_役員テーブル登録に失敗しました。_DB_CreateInfo('tbl_company_board', xxx) ", 1);
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_役員テーブル情報 = '".print_r($tblCompanyBoardInfo,true)."'", 1);
						} else {
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 3.→【登録成功】");
						}

						//登録情報を保存しておく。(使うかもしれないので。)
						$info['tbl_company_board'][$key] = $tblCompanyBoardInfo;
					}
				}
			}
		}

		//4.会社_発起人テーブルに登録する。
		_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.会社_発起人テーブル情報登録＆会社_発起人_法人役員テーブル情報登録");
		if (isset($info['tbl_company_promoter'])) {

			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→会社_発起人テーブル情報を一旦削除する。");
			$condition4del = array();
			$condition4del['cmp_prm_company_id'] = $companyId;//会社ID
			$res = _DB_DeleteInfo('tbl_company_promoter', $condition4del);
			if ($res === false) {
				$errorFlag = false;
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→【削除失敗】");
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社テーブル削除に失敗しました。_DB_DeleteInfo('tbl_company_promoter', xxx) ", 1);
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社テーブル情報 = '".print_r($condition4del,true)."'", 1);
			} else {
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→【削除成功】");
			}

			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→会社_発起人_法人役員テーブル情報を一旦削除する。");
			$condition4del = array();
			$condition4del['cmp_prm_cop_company_id'] = $companyId;//会社ID
			$res = _DB_DeleteInfo('tbl_company_promoter_corporation', $condition4del);
			if ($res === false) {
				$errorFlag = false;
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→【削除失敗】");
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_発起人_法人役員テーブル削除に失敗しました。_DB_DeleteInfo('tbl_company_promoter_corporation', xxx) ", 1);
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_発起人_法人役員テーブル情報 = '".print_r($condition4del,true)."'", 1);
			} else {
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→【削除成功】");
			}

			$prmNoList = array();

			if (is_array($info['tbl_company_promoter'])) {
				$prmNo = 0;
				foreach ($info['tbl_company_promoter'] as $key => $tblCompanyPromoterInfo) {
					$subPrmNoList = array();
					$subPrmNoList['old'] = $tblCompanyPromoterInfo['cmp_prm_no'];
					$subPrmNoList['new'] = '';

					//削除フラグ="ON"は、登録しない。
					if (isset($tblCompanyPromoterInfo['cmp_prm_del_flag']) && $tblCompanyPromoterInfo['cmp_prm_del_flag'] == DELETE_FLAG_YES) {
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→削除フラグ=\"ON\"は、登録しない。");

						$prmNoList[] = $subPrmNoList;
						continue;
					}
					//以下の項目が全て未入力の場合、登録しない。
					$createFlag = false;
					foreach ($tblCompanyPromoterInfo as $name => $value) {
						switch ($name) {
							case 'cmp_prm_company_id':		//会社ID
							case 'cmp_prm_no':				//発起人No
							case 'cmp_prm_del_flag':		//削除フラグ
							case 'cmp_prm_create_ip':		//作成IP
							case 'cmp_prm_create_date':		//作成日
							case 'cmp_prm_update_ip':		//更新IP
							case 'cmp_prm_update_date':		//更新日
								break;

							case 'director_info':			//取締役
							case 'inspector_info':			//監査役
								if (is_array($value)) {
									foreach ($value as $subKey => $subInfo) {
										foreach ($subInfo as $subName => $subValue) {
											switch ($subName) {
											default:
												//上記以外の項目の入力有無をチェックする。
												if (!_IsNull($subValue)) $createFlag = true;
												break;
											}
										}
									}
								}
								break;

							default:
								//上記以外の項目の入力有無をチェックする。
								if (!_IsNull($value)) $createFlag = true;
								break;
						}
					}
					if (!$createFlag) {
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→必須項目が全て未入力の場合、登録しない。");

						$prmNoList[] = $subPrmNoList;
						continue;
					}

					_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→必須項目が一つでも入力有の場合、登録する。");

					$prmNo++;
					$subPrmNoList['new'] = $prmNo;
					$prmNoList[] = $subPrmNoList;

					$tblCompanyPromoterInfo['cmp_prm_company_id'] = $companyId;			//会社ID
					$tblCompanyPromoterInfo['cmp_prm_no'] = $prmNo;						//発起人No
					$tblCompanyPromoterInfo['cmp_prm_business_execution_id'] = ((isset($tblCompanyPromoterInfo['cmp_prm_business_execution_id']) && !_IsNull($tblCompanyPromoterInfo['cmp_prm_business_execution_id']))?$tblCompanyPromoterInfo['cmp_prm_business_execution_id']:MST_BUSINESS_EXECUTION_ID_YES);			//業務執行ID
					$tblCompanyPromoterInfo['cmp_prm_del_flag'] = DELETE_FLAG_NO;		//削除フラグ="未削除"
					$tblCompanyPromoterInfo['cmp_prm_create_ip'] = $ip;					//作成IP
					$tblCompanyPromoterInfo['cmp_prm_create_date'] = $date;				//作成日
					$tblCompanyPromoterInfo['cmp_prm_update_ip'] = $ip;					//更新IP
					$tblCompanyPromoterInfo['cmp_prm_update_date'] = $date;				//更新日
					$res = _DB_CreateInfo('tbl_company_promoter', $tblCompanyPromoterInfo);
					if ($res === false) {
						$errorFlag = false;
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→【登録失敗】");
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_発起人テーブル登録に失敗しました。_DB_CreateInfo('tbl_company_promoter', xxx) ", 1);
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_発起人テーブル情報 = '".print_r($tblCompanyPromoterInfo,true)."'", 1);
					} else {
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→【登録成功】");


						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→会社_発起人_法人役員テーブル情報を登録する。");
						$postList = array(
							 array('key' => 'director_info', 'post_id' => MST_POST_ID_DIRECTOR, 'name' => '取締役')		//取締役
							,array('key' => 'inspector_info', 'post_id' => MST_POST_ID_INSPECTOR, 'name' => '監査役')	//監査役
						);

						foreach ($postList as $postInfo) {
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→".$postInfo['name']."を登録する。");
							//取締役を登録する。
							if (isset($tblCompanyPromoterInfo[$postInfo['key']]) && is_array($tblCompanyPromoterInfo[$postInfo['key']])) {
								$cmpPrmCopNo = 0;
								foreach ($tblCompanyPromoterInfo[$postInfo['key']] as $subKey => $corporationInfo) {
									//削除フラグ="ON"は、登録しない。
									if (isset($corporationInfo['cmp_prm_cop_del_flag']) && $corporationInfo['cmp_prm_cop_del_flag'] == DELETE_FLAG_YES) {
										_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→削除フラグ=\"ON\"は、登録しない。");
										continue;
									}
									//以下の項目が全て未入力の場合、登録しない。
									$createFlag = false;
									foreach ($corporationInfo as $name => $value) {
										switch ($name) {
											case 'cmp_prm_cop_company_id':		//会社ID
											case 'cmp_prm_cop_promoter_no':		//発起人No
											case 'cmp_prm_cop_post_id':			//役職ID
											case 'cmp_prm_cop_no':				//法人役員No
											case 'cmp_prm_cop_del_flag':		//削除フラグ
											case 'cmp_prm_cop_create_ip':		//作成IP
											case 'cmp_prm_cop_create_date':		//作成日
											case 'cmp_prm_cop_update_ip':		//更新IP
											case 'cmp_prm_cop_update_date':		//更新日
												break;
											default:
												//上記以外の項目の入力有無をチェックする。
												if (!_IsNull($value)) $createFlag = true;
												break;
										}
									}
									if (!$createFlag) {
										_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→必須項目が全て未入力の場合、登録しない。");
										continue;
									}

									_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→必須項目が一つでも入力有の場合、登録する。");

									$cmpPrmCopNo++;

									$corporationInfo['cmp_prm_cop_company_id'] = $companyId;			//会社ID
									$corporationInfo['cmp_prm_cop_promoter_no'] = $prmNo;				//発起人No
									$corporationInfo['cmp_prm_cop_post_id'] = $postInfo['post_id'];		//役職ID
									$corporationInfo['cmp_prm_cop_no'] = $cmpPrmCopNo;					//法人役員No
									$corporationInfo['cmp_prm_cop_del_flag'] = DELETE_FLAG_NO;			//削除フラグ
									$corporationInfo['cmp_prm_cop_create_ip'] = $ip;					//作成IP
									$corporationInfo['cmp_prm_cop_create_date'] = $date;				//作成日
									$corporationInfo['cmp_prm_cop_update_ip'] = $ip;					//更新IP
									$corporationInfo['cmp_prm_cop_update_date'] = $date;				//更新日
									$res = _DB_CreateInfo('tbl_company_promoter_corporation', $corporationInfo);
									if ($res === false) {
										$errorFlag = false;
										_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→【登録失敗】");
										_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_発起人_法人役員テーブル登録に失敗しました。_DB_CreateInfo('tbl_company_promoter_corporation', xxx) ", 1);
										_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_発起人_法人役員テーブル情報 = '".print_r($corporationInfo,true)."'", 1);
									} else {
										_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→【登録成功】");
									}

									//登録情報を保存しておく。(使うかもしれないので。)
									$tblCompanyPromoterInfo[$postInfo['key']][$subKey] = $corporationInfo;
								}
							}
						}
					}

					//登録情報を保存しておく。(使うかもしれないので。)
					$info['tbl_company_promoter'][$key] = $tblCompanyPromoterInfo;
				}
			}

			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→発起人Noの変更リスト = '".print_r($prmNoList, true)."'");

			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→会社_発起人_出資額テーブル情報の「発起人No」を更新する。");
			foreach ($prmNoList as $key => $prmNoInfo) {
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→旧発起人No = '".$prmNoInfo['old']."'");
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→新発起人No = '".$prmNoInfo['new']."'");

				if (_IsNull($prmNoInfo['old'])) {
					if (_IsNull($prmNoInfo['new'])) {
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→[無 ⇒ 無]→登録無し、次へ。");
						continue;
					} else {
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→[無 ⇒ 有]→新規登録、次へ。");
						continue;
					}
				} else {
					if (_IsNull($prmNoInfo['new'])) {
						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→[有 ⇒ 無]→【削除】");

						_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→会社_発起人_出資額テーブル情報を削除する。");
						$condition4del = array();
						$condition4del['cmp_prm_inv_company_id'] = $companyId;			//会社ID
						$condition4del['cmp_prm_inv_promoter_no'] = $prmNoInfo['old'];	//発起人No
						$res = _DB_DeleteInfo('tbl_company_promoter_investment', $condition4del);
						if ($res === false) {
							$errorFlag = false;
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→【削除失敗】");
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_発起人_出資額テーブル削除に失敗しました。_DB_DeleteInfo('tbl_company_promoter_investment', xxx) ", 1);
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_発起人_出資額テーブル情報 = '".print_r($condition4del,true)."'", 1);
						} else {
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→【削除成功】");
						}
					} else {
						if ($prmNoInfo['old'] == $prmNoInfo['new']) {
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→[有 ⇒ 有]→変更無し、次へ。");
							continue;
						} else {
							_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→[有 ⇒ 有]→【変更有り】");

							$condition4upd = array();
							$condition4upd['cmp_prm_inv_company_id'] = $companyId;						//会社ID
							$condition4upd['cmp_prm_inv_promoter_no'] = $prmNoInfo['old'];				//発起人No←検索条件用
							$condition4upd['pri_upd']['cmp_prm_inv_promoter_no'] = $prmNoInfo['new'];	//発起人No←更新用
							$condition4upd['cmp_prm_inv_update_ip'] = $ip;								//更新IP
							$condition4upd['cmp_prm_inv_update_date'] = $date;							//更新日
							$res = _DB_SaveInfo('tbl_company_promoter_investment', $condition4upd);
							if ($res === false) {
								$errorFlag = false;
								_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→【更新失敗】");
								_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_発起人_出資額テーブル更新に失敗しました。_DB_SaveInfo('tbl_company_promoter_investment', xxx) ", 1);
								_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_発起人_出資額テーブル情報 = '".print_r($condition4upd,true)."'", 1);
							} else {
								_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 4.→【更新成功】");
							}
						}
					}
				}

			}
		}

		//5.会社_発起人_出資額テーブルに登録する。
		_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 5.会社_発起人_出資額テーブル情報登録");
		if (isset($info['tbl_company_promoter_investment'])) {

			_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 5.→会社_発起人_出資額テーブル情報を一旦削除する。");
			$condition4del = array();
			$condition4del['cmp_prm_inv_company_id'] = $companyId;//会社ID
			$res = _DB_DeleteInfo('tbl_company_promoter_investment', $condition4del);
			if ($res === false) {
				$errorFlag = false;
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 5.→【削除失敗】");
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社テーブル削除に失敗しました。_DB_DeleteInfo('tbl_company_promoter_investment', xxx) ", 1);
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社テーブル情報 = '".print_r($condition4del,true)."'", 1);
			} else {
				_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 5.→【削除成功】");
			}

			if (is_array($info['tbl_company_promoter_investment'])) {
				foreach ($info['tbl_company_promoter_investment'] as $cId => $companyList) {
					foreach ($companyList as $pNo => $promoterList) {
						foreach ($promoterList as $tId => $typeList) {
							foreach ($typeList['investment_info'] as $iKey => $investmentInfo) {

								//削除フラグ="ON"は、登録しない。
								if (isset($investmentInfo['cmp_prm_inv_del_flag']) && $investmentInfo['cmp_prm_inv_del_flag'] == DELETE_FLAG_YES) {
									_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 5.→削除フラグ=\"ON\"は、登録しない。");
									continue;
								}
								//以下の項目が全て未入力の場合、登録しない。
								$createFlag = false;
								foreach ($investmentInfo as $name => $value) {
									switch ($name) {
										case 'cmp_prm_inv_company_id':				//会社ID
										case 'cmp_prm_inv_promoter_no':				//発起人No
										case 'cmp_prm_inv_no':						//出資額No
										case 'cmp_prm_inv_investment_type_id':		//出資タイプID
										case 'cmp_prm_inv_del_flag':				//削除フラグ
										case 'cmp_prm_inv_create_ip':				//作成IP
										case 'cmp_prm_inv_create_date':				//作成日
										case 'cmp_prm_inv_update_ip':				//更新IP
										case 'cmp_prm_inv_update_date':				//更新日
											break;
										default:
											//上記以外の項目の入力有無をチェックする。
											if (!_IsNull($value)) $createFlag = true;
											break;
									}
								}
								if (!$createFlag) {
									_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 5.→必須項目が全て未入力の場合、登録しない。");
									continue;
								}

								_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 5.→必須項目が一つでも入力有の場合、登録する。");

								//役員Noを採番する。
								$condition4invNo = array();
								$condition4invNo['cmp_prm_inv_company_id'] = $cId;				//会社ID
								$condition4invNo['cmp_prm_inv_promoter_no'] = $pNo;				//発起人No
								$cmpPrmInvNo = _DB_GetNextNo('tbl_company_promoter_investment', 'cmp_prm_inv_no', $condition4invNo, false);

								$investmentInfo['cmp_prm_inv_company_id'] = $cId;				//会社ID
								$investmentInfo['cmp_prm_inv_promoter_no'] = $pNo;				//発起人No
								$investmentInfo['cmp_prm_inv_no'] = $cmpPrmInvNo;				//発起人No
								$investmentInfo['cmp_prm_inv_investment_type_id'] = $tId;		//出資タイプID
								$investmentInfo['cmp_prm_inv_del_flag'] = DELETE_FLAG_NO;		//削除フラグ="未削除"
								$investmentInfo['cmp_prm_inv_create_ip'] = $ip;					//作成IP
								$investmentInfo['cmp_prm_inv_create_date'] = $date;				//作成日
								$investmentInfo['cmp_prm_inv_update_ip'] = $ip;					//更新IP
								$investmentInfo['cmp_prm_inv_update_date'] = $date;				//更新日
								$res = _DB_CreateInfo('tbl_company_promoter_investment', $investmentInfo);
								if ($res === false) {
									$errorFlag = false;
									_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 5.→【登録失敗】");
									_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_発起人_出資額テーブル登録に失敗しました。_DB_CreateInfo('tbl_company_promoter_investment', xxx) ", 1);
									_Log("[_CreateCompanyInfo] {株式会社設立情報登録} {ERROR} 会社_発起人_出資額テーブル情報 = '".print_r($investmentInfo,true)."'", 1);
								} else {
									_Log("[_CreateCompanyInfo] {株式会社設立情報登録} 5.→【登録成功】");
								}

								//登録情報を保存しておく。(使うかもしれないので。)
								$info['tbl_company_promoter_investment'][$cId][$pNo][$tId]['investment_info'][$iKey] = $investmentInfo;
							}
						}
					}
				}
			}
		}


	}

	_Log("[_CreateCompanyInfo] {株式会社設立情報登録} ============================================================ end");

	_Log("[_CreateCompanyInfo] 結果-エラー = '".$errorFlag."'");
	_Log("[_CreateCompanyInfo] 結果-会社ID = '".$companyId."'");
	_Log("[_CreateCompanyInfo] 結果-株式会社設立情報='".print_r($info,true)."'");

	if (!$errorFlag) $companyId = false;

	_Log("[_CreateCompanyInfo] 結果-返り値 = '".$companyId."'");

	if ($companyId !== false) {
		$condition = array();
		$condition['cmp_company_id'] = $companyId;
		$undeleteOnly = false;
		$tblCompanyInfo = _DB_GetInfo('tbl_company', $condition, $undeleteOnly, 'cmp_del_flag');
		if (!_IsNull($tblCompanyInfo)) {
			//編集対象の会社IDとして設定する。
			$_SESSION[SID_LOGIN_USER_COMPANY][$tblCompanyInfo['cmp_company_type_id']] = $companyId;
		
			_Log("[_CreateCompanyInfo] \$_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_CMP] = '".$_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_CMP]."'");
			_Log("[_CreateCompanyInfo] isset = '".isset($_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_CMP])."'");
		
			_Log("[_CreateCompanyInfo] \$_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_LLC] = '".$_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_LLC]."'");
			_Log("[_CreateCompanyInfo] isset = '".isset($_SESSION[SID_LOGIN_USER_COMPANY][MST_COMPANY_TYPE_ID_LLC])."'");
		}
	}

	_Log("[_CreateCompanyInfo] end.");

	return $companyId;

}


/**
 * 株式会社設立情報を取得する。
 *
 * @param	int   	$companyId		会社ID
 * @param	boolean	$undeleteOnly	未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @return	mixed	株式会社設立情報{null:取得できなかった場合}
 * @access  public
 * @since   3.2.0
 */
function _GetCompanyInfo($companyId, $undeleteOnly = true) {

	_Log("[_GetCompanyInfo] start.");

	_Log("[_GetCompanyInfo] (param) 会社ID = '".$companyId."'");
	_Log("[_GetCompanyInfo] (param) 未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象} = '".$undeleteOnly."'");

	if (_IsNull($companyId)) {
		_Log("[_GetCompanyInfo] CompanyId is null.");
		_Log("[_GetCompanyInfo] end.");
		return null;
	}


	//株式会社設立情報を取得する。
	_Log("[_GetCompanyInfo] {株式会社設立情報取得} ============================================================ start");


	//1.会社テーブルを検索する。
	_Log("[_GetCompanyInfo] {株式会社設立情報取得} 1.会社テーブル情報取得");
	$condition = array();
	$condition['cmp_company_id'] = $companyId;
	$tblCompanyInfo = _DB_GetInfo('tbl_company', $condition, $undeleteOnly, 'cmp_del_flag');
	if (_IsNull($tblCompanyInfo)) {
		_Log("[_GetCompanyInfo] _DB_GetInfo('tbl_company', \$condition, \$undeleteOnly) is null.");
		_Log("[_GetCompanyInfo] end.");
		return null;
	}

	//2.会社_目的テーブルを検索する。
	_Log("[_GetCompanyInfo] {株式会社設立情報取得} 2.会社_目的テーブル情報取得");
	$condition = array();
	$condition['cmp_pps_company_id'] = $companyId;
	$order = "cmp_pps_no";//ソート条件=目的Noの昇順
	$tblCompanyPurposeList = _DB_GetList('tbl_company_purpose', $condition, true, $order, 'cmp_pps_del_flag');

	//3.会社_役員テーブルを検索する。
	_Log("[_GetCompanyInfo] {株式会社設立情報取得} 3.会社_役員テーブル情報取得");
	$condition = array();
	$condition['cmp_bod_company_id'] = $companyId;
	$order = "cmp_bod_no";//ソート条件=役員Noの昇順
	$tblCompanyBoardList = _DB_GetList('tbl_company_board', $condition, true, $order, 'cmp_bod_del_flag');

	//会社_役員テーブル情報を役職マスタの表示順の順番に並び替える。
	if (!_IsNull($tblCompanyBoardList)) {
		//3-1.役職マスタ
		_Log("[_GetCompanyInfo] {株式会社設立情報取得} 3-1.役職マスタ情報取得");
		$condition = null;
		$order = null;
		$order .= "lpad(SHOW_ORDER,10,'0')";//ソート条件=表示順の昇順
		$order .= ",id";//ソート条件=IDの昇順
		$mstPostList = _DB_GetList('mst_post', $condition, false, $order);

		if (!_IsNull($mstPostList)) {
			$bufList = array();
			foreach ($mstPostList as $mKey => $mstPostInfo) {
				foreach ($tblCompanyBoardList as $tKey => $tblCompanyBoardInfo) {
					if ($mstPostInfo['id'] == $tblCompanyBoardInfo['cmp_bod_post_id']) {
						$bufList[] = $tblCompanyBoardInfo;
						unset($tblCompanyBoardList[$tKey]);
					}
				}
			}
			//残りをセットする。役職IDが未設定の場合など。
			foreach ($tblCompanyBoardList as $tKey => $tblCompanyBoardInfo) {
				$bufList[] = $tblCompanyBoardInfo;
				unset($tblCompanyBoardList[$tKey]);
			}

			$tblCompanyBoardList = $bufList;
		}
	}

	//4.会社_発起人テーブルを検索する。
	_Log("[_GetCompanyInfo] {株式会社設立情報取得} 4.会社_発起人テーブル情報取得＆会社_発起人_法人役員テーブル情報取得");
	$condition = array();
	$condition['cmp_prm_company_id'] = $companyId;
	$order = "cmp_prm_no";//ソート条件=発起人Noの昇順
	$tblCompanyPromoterList = _DB_GetList('tbl_company_promoter', $condition, true, $order, 'cmp_prm_del_flag');
	if (!_IsNull($tblCompanyPromoterList)) {
		foreach ($tblCompanyPromoterList as $pKey => $tblCompanyPromoterInfo) {
			//会社_発起人_法人役員テーブルを検索する。
			//取締役を検索する。
			$condition = array();
			$condition['cmp_prm_cop_company_id'] = $tblCompanyPromoterInfo['cmp_prm_company_id'];	//会社ID
			$condition['cmp_prm_cop_promoter_no'] = $tblCompanyPromoterInfo['cmp_prm_no'];			//発起人No
			$condition['cmp_prm_cop_post_id'] = MST_POST_ID_DIRECTOR;								//役職ID="取締役"
			$order = "cmp_prm_cop_no";//ソート条件=法人役員Noの昇順
			$tblCompanyPromoterCorporationList = _DB_GetList('tbl_company_promoter_corporation', $condition, true, $order, 'cmp_prm_cop_del_flag');
			$tblCompanyPromoterInfo['director_info'] = $tblCompanyPromoterCorporationList;

			//監査役を検索する。
			$condition = array();
			$condition['cmp_prm_cop_company_id'] = $tblCompanyPromoterInfo['cmp_prm_company_id'];	//会社ID
			$condition['cmp_prm_cop_promoter_no'] = $tblCompanyPromoterInfo['cmp_prm_no'];			//発起人No
			$condition['cmp_prm_cop_post_id'] = MST_POST_ID_INSPECTOR;								//役職ID="監査役"
			$order = "cmp_prm_cop_no";//ソート条件=法人役員Noの昇順
			$tblCompanyPromoterCorporationList = _DB_GetList('tbl_company_promoter_corporation', $condition, true, $order, 'cmp_prm_cop_del_flag');
			$tblCompanyPromoterInfo['inspector_info'] = $tblCompanyPromoterCorporationList;

			$tblCompanyPromoterList[$pKey] = $tblCompanyPromoterInfo;
		}
	}

	//5.会社_発起人_出資額テーブルを検索する。
	_Log("[_GetCompanyInfo] {株式会社設立情報取得} 5.会社_発起人_出資額テーブル情報取得");
	$condition = array();
	$condition['cmp_prm_inv_company_id'] = $companyId;
	$order = null;
	$order .= "cmp_prm_inv_promoter_no";//ソート条件=発起人Noの昇順
	$order .= ",cmp_prm_inv_no";//ソート条件=出資額Noの昇順
	$tblCompanyPromoterInvestmentList = _DB_GetList('tbl_company_promoter_investment', $condition, true, $order, 'cmp_prm_inv_del_flag');
	//配列を多次元に詰め替える。
	if (!_IsNull($tblCompanyPromoterInvestmentList)) {
		$bufList = array();
		foreach ($tblCompanyPromoterInvestmentList as $iKey => $tblCompanyPromoterInvestmentInfo) {
			//会社ID
			$cId = $tblCompanyPromoterInvestmentInfo['cmp_prm_inv_company_id'];
			//発起人No
			$pNo = $tblCompanyPromoterInvestmentInfo['cmp_prm_inv_promoter_no'];
			//出資額No
			//$no = $tblCompanyPromoterInvestmentInfo['cmp_prm_inv_no'];
			//出資タイプID
			$tId = $tblCompanyPromoterInvestmentInfo['cmp_prm_inv_investment_type_id'];

			$bufList[$cId][$pNo][$tId]['investment_info'][] = $tblCompanyPromoterInvestmentInfo;
		}

		$tblCompanyPromoterInvestmentList = $bufList;
	}


	//配列に設定する。
	$resList = array();
	$resList['tbl_company'] = $tblCompanyInfo;												//1.会社テーブル
	$resList['tbl_company_purpose']['purpose_info'] = $tblCompanyPurposeList;				//2.会社_目的テーブル
	$resList['tbl_company_board'] = $tblCompanyBoardList;									//3.会社_役員テーブル
	$resList['tbl_company_promoter'] = $tblCompanyPromoterList;								//4.会社_発起人テーブル
	$resList['tbl_company_promoter_investment'] = $tblCompanyPromoterInvestmentList;		//5.会社_発起人_出資額テーブル


	_Log("[_GetCompanyInfo] {株式会社設立情報取得} 結果 = '".print_r($resList,true)."'");
	_Log("[_GetCompanyInfo] {株式会社設立情報取得} ============================================================ end");

	_Log("[_GetCompanyInfo] end.");
	return $resList;
}
/* end   ------------------------------------------株式会社設立情報関連------------------------------------------ end   */


?>
