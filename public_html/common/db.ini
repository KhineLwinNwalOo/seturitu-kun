<?php
/*
 * [新★会社設立.JP ツール]
 * DB関連ファイル
 *
 * 更新履歴：2008/12/01	d.ishikawa	新規作成
 *
 */

include_once(dirname(__FILE__)."/constants.ini");
include_once(dirname(__FILE__)."/constants_db.ini");
include_once(dirname(__FILE__)."/util.ini");
include_once(dirname(__FILE__)."/log.ini");

/**
 * データベースを開く
 * 引き数  なし
 * 戻り値  LinkID
 */
function _DB_Open() {

	_Log("[_DB_Open] HOST_NAME='".HOST_NAME."'/DB_NAME='".DB_NAME."'/DB_USER='".DB_USER."'/DB_PASSWORD='".DB_PASSWORD."'");

    //DB接続
    $cid = mysql_connect( HOST_NAME, DB_USER, DB_PASSWORD ) or die( "Failed to connect to 'HOST_NAME'---".mysql_error() );

    //DB選択
    mysql_select_db( DB_NAME, $cid ) or die ( "Failed to select database 'DB_NAME'" );

    return $cid;
}


/**
 * データベースを開く
 * 引き数  なし
 * 戻り値  LinkID
 */
function _DB_OpenByParameter($host_name, $db_name, $db_user, $db_password) {

	_Log("[_DB_OpenByParameter] HOST_NAME='".$host_name."'/DB_NAME='".$db_name."'/DB_USER='".$db_user."'/DB_PASSWORD='".$db_password."'");

    //DB接続
    $cid = mysql_connect($host_name, $db_user, $db_password) or die( "Failed to connect to 'HOST_NAME'---".mysql_error() );

    //DB選択
    mysql_select_db($db_name, $cid) or die ( "Failed to select database 'DB_NAME'" );

    return $cid;
}

/**
 * データベースを閉じる
 * 引き数  $cid:LinkID
 * 戻り値  なし
 */
function _DB_Close($cid) {
    mysql_close( $cid ) or die( "Failed to close database 'DB_NAME'" );
}


/**
 * テーブル情報を取得する。
 *
 * @param	string  $tablename	テーブル名
 * @return	array	テーブル情報(取得できなかった場合はnull。)
 * @access  public
 * @since   3.2.0
 */
function _DB_GetTableInfo($tableName) {

	_Log("[_DB_GetTableInfo] start.");

    _Log("[_DB_GetTableInfo] (param) テーブル名='".$tableName."'");

	if (_IsNull($tableName)) {
    	_Log("[_DB_GetTableInfo] Table Name is Null.");
    	_Log("[_DB_GetTableInfo] end.");
		return null;
	}

	//SQLを作成する。
	$sql = "show table status like '".mysql_real_escape_string($tableName)."'";

	_Log("[_DB_GetTableInfo] sql='".$sql."'", 2);

	//SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	$list = null;
	$count = null;
	if ($result === false) {
    	_Log("[_DB_GetTableInfo] mysql_error='".mysql_error()."'", 1);
    	_Log("[_DB_GetTableInfo] mysql_errno='".mysql_errno()."'", 1);
    	_Log("[_DB_GetTableInfo] SQL='".$sql."'", 1);
	} else {
		$count = mysql_num_rows($result);
		//検索結果を配列に格納
		$list = mysql_fetch_array($result, MYSQL_ASSOC);

		if ($count == 0) $list = null;
	}

    _Log("[_DB_GetTableInfo] 結果(テーブル情報件数)='".$count."'");
    _Log("[_DB_GetTableInfo] 結果(テーブル情報)='".print_r($list,true)."'");
    _Log("[_DB_GetTableInfo] end.");

	return $list;
}



/**
 * テーブルのフィールド情報を取得する。
 *
 * @param	string  $tablename	テーブル名
 * @return	array	フィールド情報(取得できなかった場合はnull。)
 * @access  public
 * @since   3.2.0
 */
function _DB_GetColumnsInfo($tableName) {

	_Log("[_DB_GetColumnsInfo] start.");

    _Log("[_DB_GetColumnsInfo] (param) テーブル名='".$tableName."'");

	if (_IsNull($tableName)) {
    	_Log("[_DB_GetColumnsInfo] Table Name is Null.");
    	_Log("[_DB_GetColumnsInfo] end.");
		return null;
	}

	//SQLを作成する。
	$sql = "show columns from ".mysql_real_escape_string($tableName);

	_Log("[_DB_GetColumnsInfo] sql='".$sql."'", 2);

	//SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	$list = null;
	$count = null;
	if ($result === false) {
//    	_Log("[_DB_GetColumnsInfo] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_DB_GetColumnsInfo] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_DB_GetColumnsInfo] SQL='".$sql."'", 1);
    	_Log("[_DB_GetColumnsInfo] mysql_error='".mysql_error()."'");
    	_Log("[_DB_GetColumnsInfo] mysql_errno='".mysql_errno()."'");
    	_Log("[_DB_GetColumnsInfo] SQL='".$sql."'");
	} else {
		$count = mysql_num_rows($result);
		$list = array();
		//検索結果を配列に格納
		while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
			//サイズを取得する。
			$size = preg_replace('/^(.*)\(([0-9]+)\)(.*)$/', '${2}', $line['Type']);
			//半角数字チェック
			if (!_IsHalfSizeNumeric($size)) $size = null;
			$line['Size'] = $size;
			if (_IsNull($size)) {
				if ($line['Type'] == 'text') {
					//text型の場合
					$line['Size'] = 65535;
				}
			}

			//タイプを取得する。
			$type = preg_replace('/^(.*)\(([0-9]+)\)(.*)$/', '${1}', $line['Type']);
			$line['TypeOnly'] = $type;


			$list[$line['Field']] = $line;
		}
		if (count($list) == 0) 	$list = null;
	}

    _Log("[_DB_GetColumnsInfo] 結果(フィールド情報件数)='".$count."'");
    _Log("[_DB_GetColumnsInfo] 結果(フィールド情報)='".print_r($list,true)."'");
    _Log("[_DB_GetColumnsInfo] end.");

	return $list;
}


/**
 * 情報を登録する。
 *
 * @param	string  $tableName				テーブル名
 * @param	mixed	$info					登録情報
 * @return	boolean/int	登録できたか？{false:失敗/採番されたオーダーID:成功}
 * @access  public
 * @since
 */
function _DB_CreateInfo($tableName, $info) {

	_Log("[_DB_CreateInfo] start.");


    _Log("[_DB_CreateInfo] (param) テーブル名 = '".$tableName."'");
    _Log("[_DB_CreateInfo] (param) 登録情報 = '".print_r($info,true)."'");

	if (_IsNull($info)) {
    	_Log("[_DB_CreateInfo] Info is Null.");
    	_Log("[_DB_CreateInfo] end.");
		return false;
	}

	$columnsInfo = _DB_GetColumnsInfo($tableName);
	if (_IsNull($columnsInfo)) {
    	_Log("[_DB_CreateInfo] Table doesn't exist.");
    	_Log("[_DB_CreateInfo] end.");
		return false;
	}

	//SQLを作成する。
	$into = "";
	$values = "";
	foreach ($columnsInfo as $key => $col) {
		if ($col['Extra'] == 'auto_increment') continue;

		switch ($col['Type']) {
			case 'datetime':
				//if (isset($info[$col['Field']]) || is_null($info[$col['Field']])) {
				if (array_key_exists($col['Field'], $info)) {
					if (!_IsNull($into)) $into .= "\n,";
					if (!_IsNull($values)) $values .= "\n,";

					$into .= $col['Field'];

					if (_IsNull($info[$col['Field']])) {
						$values .= "now()";
					} else {
						$values .= "'".mysql_real_escape_string($info[$col['Field']])."'";
					}
				}
				break;
			default:
				//if (isset($info[$col['Field']]) || is_null($info[$col['Field']])) {
				if (array_key_exists($col['Field'], $info)) {
					if (!_IsNull($into)) $into .= "\n,";
					if (!_IsNull($values)) $values .= "\n,";

					$into .= $col['Field'];

					if (_IsNull($info[$col['Field']])) {
						$values .= "null";
					} else {
						$values .= "'".mysql_real_escape_string($info[$col['Field']])."'";
					}
				}
				break;
		}

	}

	$sql = "\n insert into ".$tableName." (";
	$sql .= "\n".$into;
	$sql .= "\n ) values (";
	$sql .= "\n".$values;
	$sql .= "\n )";

	_Log("[_DB_CreateInfo] sql = '".$sql."'", 2);

    //SQL実行
	$result = mysql_query($sql) or die("Query failed-->".$sql." Error-->".mysql_error());
	$newId = mysql_insert_id();

	_Log("[_DB_CreateInfo] 結果(INSERT) = '".$result."'");
	_Log("[_DB_CreateInfo] NEW ID = '".$newId."'");

	if ($result === false) {
		$newId = false;
    	_Log("[_DB_CreateInfo] mysql_error = '".mysql_error()."'", 1);
    	_Log("[_DB_CreateInfo] mysql_errno = '".mysql_errno()."'", 1);
    	_Log("[_DB_CreateInfo] SQL = '".$sql."'", 1);
	}
	_Log("[_DB_CreateInfo] end.");

	return $newId;

}

/**
 * 情報を更新する。
 *
 * @param	string  $tableName				テーブル名
 * @param	mixed	$info					更新情報
 * @return	boolean	更新できたか？{true:成功/false:失敗}
 * @access  public
 * @since
 */
function _DB_SaveInfo($tableName, $info) {

	_Log("[_DB_SaveInfo] start.");


    _Log("[_DB_SaveInfo] (param) テーブル名 = '".$tableName."'");
    _Log("[_DB_SaveInfo] (param) 更新情報 = '".print_r($info,true)."'");

	if (_IsNull($info)) {
    	_Log("[_DB_SaveInfo] Info is Null.");
    	_Log("[_DB_SaveInfo] end.");
		return false;
	}

	$columnsInfo = _DB_GetColumnsInfo($tableName);
	if (_IsNull($columnsInfo)) {
    	_Log("[_DB_SaveInfo] Table doesn't exist.");
    	_Log("[_DB_SaveInfo] end.");
		return false;
	}

	//SQLを作成する。
	$set = "";
	$where = "1=1";
	$priFlag = false;//(2008/12/06:主キーが1つでも有れば更新可にする。)
	foreach ($columnsInfo as $key => $col) {
		if ($key == 'create_ip') continue;
		if ($key == 'create_date') continue;

		if ($col['Key'] == 'PRI') {
//v1
//			if (!isset($info[$col['Field']])) {
//				_Log("[_DB_SaveInfo] 主キーが更新情報に設定されていない。(isset) Field = '".$col['Field']."'");
//				_Log("[_DB_SaveInfo] end.");
//				return false;
//			}
//			if (is_null($info[$col['Field']])) {
//				_Log("[_DB_SaveInfo] 主キーが更新情報に設定されていない。(is_null) Field = '".$col['Field']."'");
//				_Log("[_DB_SaveInfo] end.");
//				return false;
//			}

//v2
//			$whereFlag = true;
//			if (!array_key_exists($col['Field'], $info)) {
//				$whereFlag = false;
//			}
//			if (_IsNull($info[$col['Field']])) {
//				$whereFlag = false;
//			}
//			if ($whereFlag) {
//				$priFlag = true;
//				$where .= "\n and ".$col['Field']." = '".mysql_real_escape_string($info[$col['Field']])."'";
//			}

//v3
			//検索情報が指定されている場合、検索条件を設定する。
			if (array_key_exists($col['Field'], $info)) {
				if (is_null($info[$col['Field']])) {
					$where .= "\n and ".$col['Field']." = null";
					$priFlag = true;
				} elseif (is_array($info[$col['Field']])) {
					$buf = null;
					foreach ($info[$col['Field']] as $value) {
						if (!_IsNull($buf)) $buf .= ",";
						switch ($col['TypeOnly']) {
							case 'int':
							case 'bigint':
								if (_IsNull($value)) {
									$buf .= "null";
								} else {
									$buf .= "".mysql_real_escape_string($value)."";
								}
								break;
							default:
								$buf .= "'".mysql_real_escape_string($value)."'";
								break;
						}
					}
					if (!_IsNull($buf)) {
						$where .= "\n and ".$col['Field']." in (".$buf.")";
						$priFlag = true;
					}
				} else {
					switch ($col['TypeOnly']) {
						case 'int':
						case 'bigint':
							if (_IsNull($info[$col['Field']])) {
								$where .= "\n and ".$col['Field']." = null";
								$priFlag = true;
							} else {
								$where .= "\n and ".$col['Field']." = ".mysql_real_escape_string($info[$col['Field']])."";
								$priFlag = true;
							}
							break;
						default:
							$where .= "\n and ".$col['Field']." = '".mysql_real_escape_string($info[$col['Field']])."'";
							$priFlag = true;
							break;
					}
				}
			}


			//主キーを更新する場合
			if (isset($info['pri_upd'])) {
				if (!array_key_exists($col['Field'], $info['pri_upd'])) {
					continue;
				}

				if (!_IsNull($set)) $set .= "\n,";

				$set .= " ".$col['Field']." = ";

				switch ($col['Type']) {
					case 'datetime':
						if (_IsNull($info['pri_upd'][$col['Field']])) {
							$set .= "now()";
						} else {
							$set .= "'".mysql_real_escape_string($info['pri_upd'][$col['Field']])."'";
						}
						break;
					default:
						if (_IsNull($info['pri_upd'][$col['Field']])) {
							$set .= "null";
						} else {
							$set .= "'".mysql_real_escape_string($info['pri_upd'][$col['Field']])."'";
						}
						break;
				}
			}

		} else {

			if (!array_key_exists($col['Field'], $info)) {
				continue;
			}

			if (!_IsNull($set)) $set .= "\n,";

			$set .= " ".$col['Field']." = ";

			switch ($col['Type']) {
				case 'datetime':
					//if (isset($info[$col['Field']]) || is_null($info[$col['Field']])) {
						if (_IsNull($info[$col['Field']])) {
							$set .= "now()";
						} else {
							$set .= "'".mysql_real_escape_string($info[$col['Field']])."'";
						}
					//}
					break;
				default:
					//if (isset($info[$col['Field']]) || is_null($info[$col['Field']])) {
						if (_IsNull($info[$col['Field']])) {
							$set .= "null";
						} else {
							$set .= "'".mysql_real_escape_string($info[$col['Field']])."'";
						}
					//}
					break;
			}
		}

	}

	if (!$priFlag) {
		_Log("[_DB_SaveInfo] 主キーが更新情報に一つも設定されていない。");
		_Log("[_DB_SaveInfo] end.");
		return false;
	}

	$sql = "\n update ".$tableName." set";
	$sql .= "\n ".$set;
	$sql .= "\n where";
	$sql .= "\n ".$where;

	_Log("[_DB_SaveInfo] sql = '".$sql."'", 2);

    //SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	_Log("[_DB_SaveInfo] 結果(UPDATE) = '".$result."'");

	if ($result === false) {
    	_Log("[_DB_SaveInfo] mysql_error = '".mysql_error()."'", 1);
    	_Log("[_DB_SaveInfo] mysql_errno = '".mysql_errno()."'", 1);
    	_Log("[_DB_SaveInfo] SQL = '".$sql."'", 1);
	}
	_Log("[_DB_SaveInfo] end.");

	return $result;

}


/**
 * 情報を削除する。指定した条件のレコードを削除する。
 *
 * @param	string  $tableName				テーブル名
 * @param	mixed	$info					検索情報
 * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @return	boolean	更新できたか？{true:成功/false:失敗}
 * @access  public
 * @since
 */
function _DB_DeleteInfo($tableName, $info) {

	_Log("[_DB_DeleteInfo] start.");


    _Log("[_DB_DeleteInfo] (param) テーブル名 = '".$tableName."'");
    _Log("[_DB_DeleteInfo] (param) 検索情報 = '".print_r($info,true)."'");

	if (_IsNull($info)) {
    	_Log("[_DB_DeleteInfo] Info is Null.");
    	_Log("[_DB_DeleteInfo] end.");
		return false;
	}

	$columnsInfo = _DB_GetColumnsInfo($tableName);
	if (_IsNull($columnsInfo)) {
    	_Log("[_DB_DeleteInfo] Table doesn't exist.");
    	_Log("[_DB_DeleteInfo] end.");
		return false;
	}

	//SQLを作成する。
	$where= " 1=1";
	foreach ($columnsInfo as $key => $col) {

		_Log("[_DB_DeleteInfo] \$col['Field'] = '".$col['Field']."'");
		_Log("[_DB_DeleteInfo] \$info[\$col['Field'] = '".$info[$col['Field']]."'");
		_Log("[_DB_DeleteInfo] isset(\$info[\$col['Field']]) = '".isset($info[$col['Field']])."'");
		_Log("[_DB_DeleteInfo] is_null(\$info[\$col['Field']]) = '".is_null($info[$col['Field']])."'");
		_Log("[_DB_DeleteInfo] array_key_exists (\$col['Field'], \$info) = '".array_key_exists ($col['Field'], $info)."'");


		if (array_key_exists($col['Field'], $info)) {
			if (is_null($info[$col['Field']])) {
				$where .= "\n and ".$col['Field']." = null";
			} else {
				if (preg_match('/^int.+$/', $col['Type'])) {
					if (_IsNull($info[$col['Field']])) {
						$where .= "\n and ".$col['Field']." = null";
					} else {
						$where .= "\n and ".$col['Field']." = ".mysql_real_escape_string($info[$col['Field']])."";
					}
				} else {
					$where .= "\n and ".$col['Field']." = '".mysql_real_escape_string($info[$col['Field']])."'";
				}
			}
		}
	}



	//SQLを作成する。
	$sql = "\n delete from ";
	$sql .= "\n ".$tableName;
	$sql .= "\n where";
	$sql .= "\n".$where;

	_Log("[_DB_DeleteInfo] sql = '".$sql."'", 2);

    //SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	_Log("[_DB_DeleteInfo] 結果(DELETE) = '".$result."'");

	if ($result === false) {
    	_Log("[_DB_DeleteInfo] mysql_error = '".mysql_error()."'", 1);
    	_Log("[_DB_DeleteInfo] mysql_errno = '".mysql_errno()."'", 1);
    	_Log("[_DB_DeleteInfo] SQL = '".$sql."'", 1);
	}
	_Log("[_DB_DeleteInfo] end.");

	return $result;
}



/**
 * 情報を削除する。全レコードを削除する。
 *
 * @param	string  $tableName				テーブル名
 * @return	boolean	更新できたか？{true:成功/false:失敗}
 * @access  public
 * @since
 */
function _DB_TruncateInfo($tableName) {

	_Log("[_DB_TruncateInfo] start.");

    _Log("[_DB_TruncateInfo] (param) テーブル名 = '".$tableName."'");


	if (_IsNull($tableName)) {
    	_Log("[_DB_DeleteInfo] TableName is Null.");
    	_Log("[_DB_DeleteInfo] end.");
		return false;
	}

	//SQLを作成する。
	$sql = "\n truncate table ";
	$sql .= "\n ".$tableName;

	_Log("[_DB_TruncateInfo] sql = '".$sql."'", 2);

    //SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	_Log("[_DB_TruncateInfo] 結果(TRUNCATE) = '".$result."'");

	if ($result === false) {
    	_Log("[_DB_TruncateInfo] mysql_error = '".mysql_error()."'", 1);
    	_Log("[_DB_TruncateInfo] mysql_errno = '".mysql_errno()."'", 1);
    	_Log("[_DB_TruncateInfo] SQL = '".$sql."'", 1);
	}
	_Log("[_DB_TruncateInfo] end.");

	return $result;
}




/**
 * 情報を取得する。主キーを条件として1レコード取得する。
 *
 * @param	string		$tableName				テーブル名
 * @param	mixed		$info					検索情報
 * @param	boolean		$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @param	string		$delFlagFieldName		削除フラグフィールド名
 * @return	array	情報の配列{null:情報無し}
 * @access  public
 * @since
 */
function _DB_GetInfo($tableName, $info, $undeleteOnly = true, $delFlagFieldName = 'del_flag') {

	_Log("[_DB_GetInfo] start.");


    _Log("[_DB_GetInfo] (param) テーブル名 = '".$tableName."'");
    _Log("[_DB_GetInfo] (param) 検索情報 = '".print_r($info,true)."'");
    _Log("[_DB_GetInfo] (param) 未削除データのみ取得するか？ = '".$undeleteOnly."'");
    _Log("[_DB_GetInfo] (param) 削除フラグフィールド名 = '".$delFlagFieldName."'");

	if (_IsNull($info)) {
    	_Log("[_DB_GetInfo] Info is Null.");
    	_Log("[_DB_GetInfo] end.");
		return false;
	}

	$columnsInfo = _DB_GetColumnsInfo($tableName);
	if (_IsNull($columnsInfo)) {
    	_Log("[_DB_GetInfo] Table doesn't exist.");
    	_Log("[_DB_GetInfo] end.");
		return false;
	}

	//SQLを作成する。
	$where= " 1=1";
	foreach ($columnsInfo as $key => $col) {
		if ($col['Key'] != 'PRI') continue;

		if (!isset($info[$col['Field']])) {
	    	_Log("[_DB_GetInfo] 主キーが検索条件に設定されていない。(isset) Field = '".$col['Field']."'");
	    	_Log("[_DB_GetInfo] end.");
			return null;
		}
		if (is_null($info[$col['Field']])) {
	    	_Log("[_DB_GetInfo] 主キーが検索条件に設定されていない。(is_null) Field = '".$col['Field']."'");
	    	_Log("[_DB_GetInfo] end.");
			return null;
		}

		$where .= "\n and ".$col['Field']." = '".mysql_real_escape_string($info[$col['Field']])."'";

	}

	if ($undeleteOnly) {
		//削除フラグがある場合、削除フラグも条件に追加する。
		if (isset($columnsInfo[$delFlagFieldName])) {
			$where .= "\n and ".$delFlagFieldName." = ".DELETE_FLAG_NO."";
		}
	}

	$sql = "\n select";
	$sql .= "\n *";
	$sql .= "\n from";
	$sql .= "\n ".$tableName;
	$sql .= "\n where";
	$sql .= "\n".$where;

	_Log("[_DB_GetInfo] sql = '".$sql."'", 2);

    //SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
	if ($result === false) {
    	$line = false;
    	_Log("[_DB_GetInfo] mysql_error = '".mysql_error()."'", 1);
    	_Log("[_DB_GetInfo] mysql_errno = '".mysql_errno()."'", 1);
    	_Log("[_DB_GetInfo] SQL = '".$sql."'", 1);
	} else {
		$line = mysql_fetch_array($result, MYSQL_ASSOC);
		$count = mysql_num_rows($result);

		_Log("[_DB_GetInfo] count(\$line)='".count($line)."'");
		_Log("[_DB_GetInfo] \$line='".print_r($line,true)."'");
		_Log("[_DB_GetInfo] \$count='".$count."'");

		if ($count == 0) $line = null;

	}

	return $line;
}


/**
 * 情報を取得する。削除フラグのみを条件として全レコード取得する。
 *
 * @param	string  $tableName				テーブル名
 * @param	mixed	$info					検索情報
 * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @param	string	$order					ソート条件
 * @param	string	$delFlagFieldName		削除フラグフィールド名
 * @param	string	$keyFieldName			配列のキーにするフィールド名
 * @return	array	情報の配列{null:情報無し}
 * @access  public
 * @since
 */
function _DB_GetList($tableName, $info = null, $undeleteOnly = true, $order = null, $delFlagFieldName = 'del_flag', $keyFieldName = null) {

	_Log("[_DB_GetList] start.");


    _Log("[_DB_GetList] (param) テーブル名 = '".$tableName."'");
    _Log("[_DB_GetList] (param) 検索情報 = '".print_r($info,true)."'");
    _Log("[_DB_GetList] (param) 未削除データのみ取得するか？ = '".$undeleteOnly."'");
    _Log("[_DB_GetList] (param) ソート条件 = '".$order."'");
    _Log("[_DB_GetList] (param) 削除フラグフィールド名 = '".$delFlagFieldName."'");
    _Log("[_DB_GetList] (param) 配列のキーにするフィールド名 = '".$keyFieldName."'");

	$keyList = null;
	if (!is_null($info) && is_array($info)) {
		$keyList = array_keys($info);
		_Log("[_DB_GetList] (param) 検索情報(キーのみ) = '".print_r($keyList,true)."'");
		_Log("[_DB_GetList] (param) 検索情報(キーのみ)is_array = '".is_array($keyList)."'");
		_Log("[_DB_GetList] (param) 検索情報(キーのみ)is_null = '".is_null($keyList)."'");
	}

	$columnsInfo = _DB_GetColumnsInfo($tableName);
	if (_IsNull($columnsInfo)) {
    	_Log("[_DB_GetList] Table doesn't exist.");
    	_Log("[_DB_GetList] end.");
		return false;
	}

	//SQLを作成する。
	$where= " 1=1";

	$bufOrder = "";
	$select = "";
	foreach ($columnsInfo as $key => $col) {
		//ソート順は、主キーの昇順とする。
		if ($col['Key'] == 'PRI') {
			if (!_IsNull($bufOrder)) $bufOrder .= "\n,";
			$bufOrder .= $col['Field'];
		}

		switch ($col['Type']) {
			case 'datetime':
				//日付項目の場合、フォーマットを追加する。
				$select .= "\n,date_format(".$col['Field'].",'%Y-%m-%d %H:%i:%s') ".$col['Field']."_yyyymmddhhmmss";		//YYYY/MM/DD hh:mm:ss
				$select .= "\n,date_format(".$col['Field'].",'%Y-%m-%d') ".$col['Field']."_yyyymmdd";						//YYYY/MM/DD
				$select .= "\n,date_format(".$col['Field'].",'%y-%m-%d') ".$col['Field']."_yymmdd";							//YY/MM/DD
				$select .= "\n,date_format(".$col['Field'].",'%Y/%m/%d %H:%i:%s') ".$col['Field']."_yyyymmddhhmmss_2";		//YYYY/MM/DD hh:mm:ss
				$select .= "\n,date_format(".$col['Field'].",'%Y/%m/%d') ".$col['Field']."_yyyymmdd_2";						//YYYY/MM/DD
				$select .= "\n,date_format(".$col['Field'].",'%y/%m/%d') ".$col['Field']."_yymmdd_2";						//YY/MM/DD

				break;
		}

//		_Log("[_DB_GetList] array_key_exists('".$col['Field']."') = '".array_key_exists($col['Field'], $info)."'");
//		_Log("[_DB_GetList] in_array('".$col['Field']."') = '".in_array($col['Field'], $keyList)."'");

		//検索情報が指定されている場合、検索条件を設定する。
//		if (array_key_exists($col['Field'], $info)) {
		if (is_array($keyList)) {
			if (in_array($col['Field'], $keyList)) {
				if (is_null($info[$col['Field']])) {
					$where .= "\n and ".$col['Field']." = null";
				} elseif (is_array($info[$col['Field']])) {
					$buf = null;
					foreach ($info[$col['Field']] as $value) {
						if (!_IsNull($buf)) $buf .= ",";
						switch ($col['TypeOnly']) {
							case 'int':
							case 'bigint':
								if (_IsNull($value)) {
									$buf .= "null";
								} else {
									$buf .= "".mysql_real_escape_string($value)."";
								}
								break;
							default:
								$buf .= "'".mysql_real_escape_string($value)."'";
								break;
						}
					}
					if (!_IsNull($buf)) {
						$where .= "\n and ".$col['Field']." in (".$buf.")";
					}
				} else {
					switch ($col['TypeOnly']) {
						case 'int':
						case 'bigint':
							if (_IsNull($info[$col['Field']])) {
								$where .= "\n and ".$col['Field']." = null";
							} else {
								$where .= "\n and ".$col['Field']." = ".mysql_real_escape_string($info[$col['Field']])."";
							}
							break;
						default:
							$where .= "\n and ".$col['Field']." = '".mysql_real_escape_string($info[$col['Field']])."'";
							break;
					}
				}
			}
		}
	}

	if ($undeleteOnly) {
		//削除フラグがある場合、削除フラグも条件に追加する。
		if (isset($columnsInfo[$delFlagFieldName])) {
			$where .= "\n and ".$delFlagFieldName." = ".DELETE_FLAG_NO."";
		}
	}

	$sql = "\n select";
	$sql .= "\n *";
	$sql .= "\n ".$select;
	$sql .= "\n from";
	$sql .= "\n ".$tableName;
	$sql .= "\n where";
	$sql .= "\n ".$where;

	if (!_IsNull($order)) {
		$sql .= "\n order by";
		$sql .= "\n ".$order;
	} else {
		if (!_IsNull($bufOrder)) {
			$sql .= "\n order by";
			$sql .= "\n ".$bufOrder;
		}
	}


	_Log("[_DB_GetList] sql = '".$sql."'", 2);

    //SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	$list = null;
	$count = null;
	if ($result === false) {
    	_Log("[_DB_GetList] mysql_error='".mysql_error()."'", 1);
    	_Log("[_DB_GetList] mysql_errno='".mysql_errno()."'", 1);
    	_Log("[_DB_GetList] SQL='".$sql."'", 1);
	} else {
		$count = mysql_num_rows($result);
		$list = array();
		//検索結果を配列に格納
		while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
			if (_IsNull($keyFieldName)) {
				$list[] = $line;
			} else {
				$list[$line[$keyFieldName]] = $line;
			}
		}
		if (count($list) == 0) 	$list = null;
	}

    _Log("[_DB_GetList] 結果(レコード件数)='".$count."'");
    _Log("[_DB_GetList] 結果(テーブル情報)='".print_r($list,true)."'");
    _Log("[_DB_GetList] end.");

	return $list;
}


/**
 * 情報を取得する。削除フラグのみを条件として全レコード取得する。
 * 指定したキー、値の連想配列を返す。
 *
 * @param	string  $tableName				テーブル名
 * @param	string	$valueId				値用ID
 * @param	string	$keyId					キー値用ID{null:キーは、0からの連番}
 * @param	mixed	$info					検索情報
 * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @param	string	$order					ソート条件
 * @param	string	$delFlagFieldName		削除フラグフィールド名
 * @return	array	情報の配列{null:情報無し}
 * @access  public
 * @since
 */
function _DB_GetListByAssociative($tableName, $valueId = 'name', $keyId = null, $info = null, $undeleteOnly = true, $order = null, $delFlagFieldName = 'del_flag') {

	_Log("[_DB_GetListByAssociative] start.");


    _Log("[_DB_GetListByAssociative] (param) テーブル名 = '".$tableName."'");
    _Log("[_DB_GetListByAssociative] (param) 値用ID = '".$valueId."'");
    _Log("[_DB_GetListByAssociative] (param) キー値用ID = '".$keyId."'");
    _Log("[_DB_GetListByAssociative] (param) 検索情報 = '".print_r($info,true)."'");
    _Log("[_DB_GetListByAssociative] (param) 未削除データのみ取得するか？ = '".$undeleteOnly."'");

	$bufList = _DB_GetList($tableName, $info, $undeleteOnly, $order, $delFlagFieldName);
	$list = null;
	if (!_IsNull($bufList)) {
		$list = array();
		foreach ($bufList as $key => $value) {
			if (_IsNull($keyId)) {
				$list[] = $value[$valueId];
			} else {
				$list[$value[$keyId]] = $value[$valueId];
			}
		}
	}

    _Log("[_DB_GetListByAssociative] 結果='".print_r($list,true)."'");
    _Log("[_DB_GetListByAssociative] end.");

	return $list;
}


/**
 * 指定されたフィールドの値を採番する。
 *
 * @param	string  $tableName				テーブル名
 * @param	string  $fieldName				フィールド名
 * @param	mixed	$info					検索情報
 * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @return	array	情報の配列{null:情報無し}
 * @access  public
 * @since
 */
function _DB_GetNextNo($tableName, $fieldName, $info = null, $undeleteOnly = true) {

	_Log("[_DB_GetNextNo] start.");


    _Log("[_DB_GetNextNo] (param) テーブル名 = '".$tableName."'");
    _Log("[_DB_GetNextNo] (param) フィールド名 = '".$fieldName."'");
    _Log("[_DB_GetNextNo] (param) 検索情報 = '".print_r($info,true)."'");
    _Log("[_DB_GetNextNo] (param) 未削除データのみ取得するか？ = '".$undeleteOnly."'");


	$columnsInfo = _DB_GetColumnsInfo($tableName);
	if (_IsNull($columnsInfo)) {
    	_Log("[_DB_GetNextNo] Table doesn't exist.");
    	_Log("[_DB_GetNextNo] end.");
		return false;
	}

	if (_IsNull($fieldName)) {
    	_Log("[_DB_GetNextNo] Field is null.");
    	_Log("[_DB_GetNextNo] end.");
		return false;
	}

	//SQLを作成する。
	$where= " 1=1";
	foreach ($columnsInfo as $key => $col) {
		//検索情報が指定されている場合、検索条件を設定する。
		if (array_key_exists($col['Field'], $info)) {
			if (is_null($info[$col['Field']])) {
				$where .= "\n and ".$col['Field']." = null";
			} else {
				switch ($col['TypeOnly']) {
					case 'int':
					case 'bigint':
						if (_IsNull($info[$col['Field']])) {
							$where .= "\n and ".$col['Field']." = null";
						} else {
							$where .= "\n and ".$col['Field']." = ".mysql_real_escape_string($info[$col['Field']])."";
						}
						break;
					default:
						$where .= "\n and ".$col['Field']." = '".mysql_real_escape_string($info[$col['Field']])."'";
						break;
				}
			}
		}

	}

	if ($undeleteOnly) {
		//削除フラグがある場合、削除フラグも条件に追加する。
		if (isset($columnsInfo['del_flag'])) {
			$where .= "\n and del_flag = ".DELETE_FLAG_NO."";
		}
	}

	$sql = "\n select";
	$sql .= "\n max(".$fieldName.") max_no";
	$sql .= "\n from";
	$sql .= "\n ".$tableName;
	$sql .= "\n where";
	$sql .= "\n ".$where;

	_Log("[_DB_GetNextNo] sql = '".$sql."'", 2);

    //SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	$nextNo = false;
	if ($result === false) {
    	_Log("[_DB_GetNextNo] mysql_error = '".mysql_error()."'", 1);
    	_Log("[_DB_GetNextNo] mysql_errno = '".mysql_errno()."'", 1);
    	_Log("[_DB_GetNextNo] SQL = '".$sql."'", 1);
	} else {
		$line = mysql_fetch_array($result, MYSQL_ASSOC);

		$maxNo = $line['max_no'];
		if (_IsNull($maxNo)) {
			$nextNo = 1;
		} else {
			$nextNo = $maxNo + 1;
		}

		_Log("[_DB_GetNextNo] \$line = '".print_r($line,true)."'");
		_Log("[_DB_GetNextNo] 現在の最大値 = '".$maxNo."'");
		_Log("[_DB_GetNextNo] 次の値 = '".$nextNo."'");
	}

	return $nextNo;
}

/**
 * "名称"＋"未削除・削除済"を作成する。
 * 引き数	$name		:名称
 * 			$delFlag	:削除フラグ
 * 戻り値  	編集した文字列
 */
function _FormatName2($name, $delFlag) {
	//"名称"＋"未削除・削除済"を設定する。
	if ($delFlag == DELETE_FLAG_YES) {
		$format2 = DELETE_FLAG_YES_NAME_FORMAT_2;
		$name2 = DELETE_FLAG_YES_NAME_2;
	} else {
		$format2 = DELETE_FLAG_NO_NAME_FORMAT_2;
		$name2 = DELETE_FLAG_NO_NAME_2;
	}
	return $name.sprintf($format2, $name2);
}

/* start -----------------------------------------------マスタ関連----------------------------------------------- start */
/**
 * マスタを検索する。
 * 引き数	$mst			：マスタ名
 * 			$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * 戻り値  	マスタ情報配列
 */
function _GetMasterList($mst, $undeleteOnly = true) {

	if ($mst == "") return null;

	//SQLを作成する。
	$sql .= "\n select";
	$sql .= "\n		*";
	$sql .= "\n from";
	$sql .= "\n	".$mst;

	if ($undeleteOnly) $sql .= "\n where	DEL_FLAG = ".DELETE_FLAG_NO;

	$sql .= "\n order by";
	$sql .= "\n  lpad(SHOW_ORDER,10,'0')";
	$sql .= "\n ,ID";


	_Log("[_GetMasterList] sql='".$sql."'", 2);

	//SQL実行
	$result = mysql_query($sql) or die("Query failed-->".$sql);

	$resultList = array();
	//検索結果を配列に格納
	while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {

		//"名称"＋"未削除・削除済"を設定する。
		$line['name_del_2'] = _FormatName2($line['name'], $line['del_flag']);

		$resultList[$line['id']] = $line;
	}

	_Log("[_GetMasterList] count(\$resultList)='".count($resultList)."'");
	_Log("[_GetMasterList] \$resultList='".print_r($resultList,true)."'");

	if (count($resultList)==0) $resultList = null;


	return $resultList;
}

/**
 * 指定したIDに関連するマスタ情報を取得する。
 * 引き数	$mst			:マスタ名
 * 			$id				:ID
 * 			$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * 戻り値  	マスタ情報
 */
function _GetMasterInfo($mst, $id, $undeleteOnly = true) {

	if (_IsNull($mst)) return null;
	if (_IsNull($id)) return null;

	//SQLを作成する。
	$sql = "\n select";
	$sql .= "\n 	*";
	$sql .= "\n from ";
	$sql .= "\n 	".$mst;
	$sql .= "\n where";
	$sql .= "\n		ID = ".mysql_real_escape_string($id)."";

	if ($undeleteOnly) $sql .= "\n  and	DEL_FLAG = ".DELETE_FLAG_NO;

	_Log("[_GetMasterInfo] sql='".$sql."'", 2);

	//SQL実行
	$result = mysql_query($sql) or die("Query failed-->".$sql);

	$line = mysql_fetch_array($result, MYSQL_ASSOC);

	_Log("[_GetMasterInfo] count(\$line)='".count($line)."'");
	_Log("[_GetMasterInfo] \$line='".print_r($line,true)."'");

	if (count($line) == 1) $line = null;

	return $line;
}

/**
 * 指定したIDに関連するマスタ情報の指定したフィールドの値を取得する。
 * 引き数	$mst			:マスタ名
 * 			$id				:ID
 * 			$name			:取得対象フィールド名
 * 			$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * 戻り値  	マスタ情報
 */
function _GetMasterValue($mst, $id, $name = 'name', $undeleteOnly = true) {
	$info = _GetMasterInfo($mst, $id, $undeleteOnly);
	if (_IsNull($info)) return null;
	return $info[$name];
}

/* end   -----------------------------------------------マスタ関連----------------------------------------------- end   */



///// ↑使用    ↓未使用


/* start ---------------------------------------------管理者テーブル--------------------------------------------- start */
/**
 * 管理者情報を検索する。
 *
 * @param	mixed   $condition				検索条件
 * @param	string	$order					ソート条件
 * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @param	int		$activePage				表示するページ
 * @param	int		$showNumberOfOnePage	1ページの表示件数
 * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
 * @return	array	予約可能日情報(取得できなかった場合はnull。)
 * @access  public
 * @since   3.2.0
 */
function _GetTblManager($condition = null, $order = null, $undeleteOnly = true, $activePage = 1, $showNumberOfOnePage = null, $countOnly = false) {

	_Log("[_GetTblManager] start.");

    _Log("[_GetTblManager] (param) 検索条件='".print_r($condition,true)."'");
    _Log("[_GetTblManager] (param) ソート条件='".$order."'");
    _Log("[_GetTblManager] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
    _Log("[_GetTblManager] (param) 表示するページ='".$activePage."'");
    _Log("[_GetTblManager] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
    _Log("[_GetTblManager] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");


	//SQLを作成する。
	$sql = "";
	$sql .= "\n select";
	$sql .= "\n  t_mng.*";

	$sql .= "\n from";
	$sql .= "\n 	tbl_manager t_mng";

	$sql .= "\n where 1=1";


	//検索条件を設定する。

	//削除フラグ
	if ($undeleteOnly) $sql .= "\n and	t_mng.mng_del_flag = ".DELETE_FLAG_NO;

	//アカウント
	if (isset($condition['mng_account']) && !_IsNull($condition['mng_account'])) {
		$sql .= "\n and	t_mng.mng_account = '".mysql_real_escape_string($condition['mng_account'])."'";
	}
	//パスワード
	if (isset($condition['mng_pass']) && !_IsNull($condition['mng_pass'])) {
		$sql .= "\n and	t_mng.mng_pass = '".mysql_real_escape_string($condition['mng_pass'])."'";
	}


	if (_IsNull($order)) {
		$order = "\n  t_mng.mng_manager_id";
	}

	$sql .= "\n order by";
	$sql .= " ".$order;

	//検索件数のみ場合、以下の条件は不要
	if (!$countOnly) {
		//全件の場合、以下の条件は不要
		if (!_IsNull($showNumberOfOnePage)) {
			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
		}
	}

	_Log("[_GetTblManager] sql='".$sql."'", 2);

	//SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	$list = null;
	$count = null;
	if ($result === false) {
    	_Log("[_GetTblManager] mysql_error='".mysql_error()."'", 1);
    	_Log("[_GetTblManager] mysql_errno='".mysql_errno()."'", 1);
    	_Log("[_GetTblManager] SQL='".$sql."'", 1);
	} else {
		$count = mysql_num_rows($result);
		if (!$countOnly) {
			$list = array();
			//検索結果を配列に格納
			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
				$list[$line['mng_manager_id']] = $line;
			}
			if (count($list) == 0) 	$list = null;
		}
	}

    _Log("[_GetTblManager] 結果(管理者情報件数)='".$count."'");
    _Log("[_GetTblManager] 結果(管理者情報)='".print_r($list,true)."'");
    _Log("[_GetTblManager] end.");

	if ($countOnly) {
		return $count;
	} else {
		return $list;
	}

}

/* end   ---------------------------------------------管理者テーブル--------------------------------------------- end   */


/* start -----------------------------------------------問合せ関連----------------------------------------------- start */
/**
 * 問合せ情報を作成する。
 *
 * @param	mixed   $info		問合せ情報
 * @return	int		問合せID{false:失敗した場合}
 * @access  public
 * @since
 */
function _CreateInquiryInfo(&$info) {

	_Log("[_CreateInquiryInfo] start.");

    _Log("[_CreateInquiryInfo] (param) 問合せ情報='".print_r($info,true)."'");

	//IPアドレスを設定する。
	$ip = $_SERVER["REMOTE_ADDR"];
	$date = null;


//	//メール本文から登録の場合、IP、登録日を設定する。
//	if (isset($info['from_mail']['mail_create_ip']) && !_IsNull($info['from_mail']['mail_create_ip'])) {
//		$ip = $info['from_mail']['mail_create_ip'];
//	}
//	if (isset($info['from_mail']['mail_create_date']) && !_IsNull($info['from_mail']['mail_create_date'])) {
//		$date = $info['from_mail']['mail_create_date'];
//	}



	//問合せ情報を登録する。
	_Log("[_CreateInquiryInfo] {問合せ情報登録} ============================================================ start");

	//1-1.顧客テーブルに登録する。
	_Log("[_CreateInquiryInfo] {問合せ情報登録} 1-1.顧客テーブル情報登録");
	$info['tbl_user']['usr_fax_flag'] = ((isset($info['tbl_user']['usr_fax_flag']) && !_IsNull($info['tbl_user']['usr_fax_flag']))?$info['tbl_user']['usr_fax_flag']:FAX_FLAG_NO);		//FAX有無
	$info['tbl_user']['usr_del_flag'] = ((isset($info['tbl_user']['usr_del_flag']) && !_IsNull($info['tbl_user']['usr_del_flag']))?$info['tbl_user']['usr_del_flag']:DELETE_FLAG_NO);	//削除フラグ
	$info['tbl_user']['usr_create_ip'] = $ip;			//作成IP
	$info['tbl_user']['usr_create_date'] = $date;		//作成日
	$info['tbl_user']['usr_update_ip'] = $ip;			//更新IP
	$info['tbl_user']['usr_update_date'] = $date;		//更新日
	$userId = _DB_CreateInfo('tbl_user', $info['tbl_user']);
	if ($userId === false) {
		$userId = null;
		_Log("[_CreateInquiryInfo] {問合せ情報登録} 1-1.→【失敗】");
		_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 顧客テーブル登録に失敗しました。_DB_CreateInfo('tbl_user', xxx) ", 1);
		_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 顧客テーブル情報 = '".print_r($info['tbl_user'],true)."'", 1);
//		_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} ※顧客_連絡時間テーブルへの登録は、顧客IDが無いため行いません。", 1);
//		_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 顧客_連絡時間テーブル情報 = '".print_r($info['tbl_user_contact_time'],true)."'", 1);
		_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} ※問合せテーブルへの登録は、顧客ID無しで登録します。", 1);
	} else {
		_Log("[_CreateInquiryInfo] {問合せ情報登録} 1-1.→【成功】");

		_Log("[_CreateInquiryInfo] {問合せ情報登録} 1-2.顧客_xxxテーブル情報登録→顧客関連のテーブル無し(2008/05/30現在)");
//		//1-2.顧客_連絡時間テーブルに登録する。
//		_Log("[_CreateInquiryInfo] 2.顧客_連絡時間テーブル情報登録");
//		if (isset($info['tbl_user_contact_time']['usr_ctm_contact_time_id'])) {
//			foreach ($info['tbl_user_contact_time']['usr_ctm_contact_time_id'] as $key => $usrCtmContactTimeId) {
//				$tblUserContactTimeInfo = array();
//				$tblUserContactTimeInfo['usr_ctm_user_id'] = $userId;							//顧客ID
//				$tblUserContactTimeInfo['usr_ctm_contact_time_id'] = $usrCtmContactTimeId;	//連絡時間ID
//				$tblUserContactTimeInfo['usr_ctm_create_ip'] = $ip;							//作成IP
//				$tblUserContactTimeInfo['usr_ctm_create_date'] = null;						//作成日
//				$tblUserContactTimeInfo['usr_ctm_update_ip'] = $ip;							//更新IP
//				$tblUserContactTimeInfo['usr_ctm_update_date'] = null;						//更新日
//
//				//登録情報を保存しておく。(使うかもしれないので)
//				$info['tbl_user_contact_time'][] = $tblUserContactTimeInfo;
//
//				$res = _DB_CreateInfo('tbl_user_contact_time', $tblUserContactTimeInfo);
//				if ($res === false) {
//					_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 顧客_連絡時間テーブル登録に失敗しました。_DB_CreateInfo('tbl_user_contact_time', xxx) ", 1);
//					_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 顧客_連絡時間テーブル情報 = '".print_r($tblUserContactTimeInfo,true)."'", 1);
//				} else {
//					_Log("[_CreateInquiryInfo] {問合せ情報登録} 2.→【成功】");
//				}
//			}
//		}
	}

	//2-1.会社テーブルに登録する。
	_Log("[_CreateInquiryInfo] {問合せ情報登録} 2-1.会社テーブル情報登録");
	$info['tbl_company']['cmp_move_flag'] = ((isset($info['tbl_company']['cmp_move_flag']) && !_IsNull($info['tbl_company']['cmp_move_flag']))?$info['tbl_company']['cmp_move_flag']:MOVE_FLAG_NO);	//移転・引越しフラグ
	$info['tbl_company']['cmp_del_flag'] = ((isset($info['tbl_company']['cmp_del_flag']) && !_IsNull($info['tbl_company']['cmp_del_flag']))?$info['tbl_company']['cmp_del_flag']:DELETE_FLAG_NO);	//削除フラグ
	$info['tbl_company']['cmp_create_ip'] = $ip;			//作成IP
	$info['tbl_company']['cmp_create_date'] = $date;		//作成日
	$info['tbl_company']['cmp_update_ip'] = $ip;			//更新IP
	$info['tbl_company']['cmp_update_date'] = $date;		//更新日
	$companyId = _DB_CreateInfo('tbl_company', $info['tbl_company']);
	if ($companyId === false) {
		$companyId = null;
		_Log("[_CreateInquiryInfo] {問合せ情報登録} 2-1.→【失敗】");
		_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 会社テーブル登録に失敗しました。_DB_CreateInfo('tbl_company', xxx) ", 1);
		_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 会社テーブル情報 = '".print_r($info['tbl_company'],true)."'", 1);
		_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} ※会社_xxxテーブルへの登録は、会社IDが無いため行いません。", 1);
		_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} ※問合せテーブルへの登録は、会社ID無しで登録します。", 1);
	} else {
		_Log("[_CreateInquiryInfo] {問合せ情報登録} 2-1.→【成功】");

		//2-2.会社_役員テーブルに登録する。
		_Log("[_CreateInquiryInfo] {問合せ情報登録} 2-2.会社_役員テーブル情報登録");
		if (isset($info['tbl_company_board']['board_info'])) {
			if (is_array($info['tbl_company_board']['board_info'])) {
				$cmpBodNo = 0;
				foreach ($info['tbl_company_board']['board_info'] as $key => $tblCompanyBoardInfo) {
					//削除フラグ="ON"は、登録しない。
					if (isset($tblCompanyBoardInfo['cmp_bod_del_flag']) && $tblCompanyBoardInfo['cmp_bod_del_flag'] == DELETE_FLAG_YES) {
						_Log("[_CreateItemInfo] {問合せ情報登録} 2-2.→削除フラグ=\"ON\"は、登録しない。");
						continue;
					}
					//以下の項目が全て未入力の場合、登録しない。
					$createFlag = false;
					//役職ID
					if (isset($tblCompanyBoardInfo['cmp_bod_post_id']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_post_id'])) $createFlag = true;
					//役員名前
					if (isset($tblCompanyBoardInfo['cmp_bod_name']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_name'])) $createFlag = true;
					//役員名前(ふりがな)
					if (isset($tblCompanyBoardInfo['cmp_bod_name_kana']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_name_kana'])) $createFlag = true;
					//役員住所(郵便番号1)
					if (isset($tblCompanyBoardInfo['cmp_bod_zip1']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_zip1'])) $createFlag = true;
					//役員住所(郵便番号2)
					if (isset($tblCompanyBoardInfo['cmp_bod_zip2']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_zip2'])) $createFlag = true;
					//役員住所(都道府県)
					if (isset($tblCompanyBoardInfo['cmp_bod_pref_id']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_pref_id'])) $createFlag = true;
					//役員住所(市町村番地)
					if (isset($tblCompanyBoardInfo['cmp_bod_address1']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_address1'])) $createFlag = true;
					//役員住所(マンション等)
					if (isset($tblCompanyBoardInfo['cmp_bod_address2']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_address2'])) $createFlag = true;
					//生年月日(年)
					if (isset($tblCompanyBoardInfo['cmp_bod_birth_year']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_birth_year'])) $createFlag = true;
					//生年月日(月)
					if (isset($tblCompanyBoardInfo['cmp_bod_birth_month']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_birth_month'])) $createFlag = true;
					//生年月日(日)
					if (isset($tblCompanyBoardInfo['cmp_bod_birth_day']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_birth_day'])) $createFlag = true;
					//国籍ID
					if (isset($tblCompanyBoardInfo['cmp_bod_nationality_id']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_nationality_id'])) $createFlag = true;
					if (!$createFlag) {
						_Log("[_CreateItemInfo] {問合せ情報登録} 2-2.→必須項目が全て未入力の場合、登録しない。");
						continue;
					}

					$cmpBodNo++;
					$tblCompanyBoardInfo['cmp_bod_company_id'] = $companyId;										//会社ID
					$tblCompanyBoardInfo['cmp_bod_no'] = $cmpBodNo;													//役員No
					//$tblCompanyBoardInfo['cmp_bod_post_id'] = null;												//役職ID
					//$tblCompanyBoardInfo['cmp_bod_name'] = null;													//役員名前
					//$tblCompanyBoardInfo['cmp_bod_name_kana'] = null;												//役員名前(ふりがな)
					$tblCompanyBoardInfo['cmp_bod_del_flag'] = DELETE_FLAG_NO;										//削除フラグ="未削除"
					$tblCompanyBoardInfo['cmp_bod_create_ip'] = $ip;												//作成IP
					$tblCompanyBoardInfo['cmp_bod_create_date'] = $date;											//作成日
					$tblCompanyBoardInfo['cmp_bod_update_ip'] = $ip;												//更新IP
					$tblCompanyBoardInfo['cmp_bod_update_date'] = $date;											//更新日

					//登録情報を保存しておく。(使うかもしれないので。)
					$info['tbl_company_board']['board_info'][$key] = $tblCompanyBoardInfo;

					$res = _DB_CreateInfo('tbl_company_board', $tblCompanyBoardInfo);
					if ($res === false) {
						_Log("[_CreateInquiryInfo] {問合せ情報登録} 2-2.→【失敗】");
						_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 会社_役員テーブル登録に失敗しました。_DB_CreateInfo('tbl_company_board', xxx) ", 1);
						_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 会社_役員テーブル情報 = '".print_r($tblCompanyBoardInfo,true)."'", 1);
					} else {
						_Log("[_CreateInquiryInfo] {問合せ情報登録} 2-2.→【成功】");
					}
				}
			}
		}

		//2-3.会社_出資金額テーブルに登録する。
		_Log("[_CreateInquiryInfo] {問合せ情報登録} 2-3.会社_出資金額テーブル情報登録");
		if (isset($info['tbl_company_investment']['investment_info'])) {
			if (is_array($info['tbl_company_investment']['investment_info'])) {
				$cmpInvNo = 0;
				foreach ($info['tbl_company_investment']['investment_info'] as $key => $tblCompanyInvestmentInfo) {
					//削除フラグ="ON"は、登録しない。
					if (isset($tblCompanyInvestmentInfo['cmp_inv_del_flag']) && $tblCompanyInvestmentInfo['cmp_inv_del_flag'] == DELETE_FLAG_YES) {
						_Log("[_CreateItemInfo] {問合せ情報登録} 2-3.→削除フラグ=\"ON\"は、登録しない。");
						continue;
					}
					//以下の項目が全て未入力の場合、登録しない。
					$createFlag = false;
					//出資者名前
					if (isset($tblCompanyInvestmentInfo['cmp_inv_name']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_name'])) $createFlag = true;
					//出資者住所(郵便番号1)
					if (isset($tblCompanyInvestmentInfo['cmp_inv_zip1']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_zip1'])) $createFlag = true;
					//出資者住所(郵便番号2)
					if (isset($tblCompanyInvestmentInfo['cmp_inv_zip2']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_zip2'])) $createFlag = true;
					//出資者住所(都道府県)
					if (isset($tblCompanyInvestmentInfo['cmp_inv_pref_id']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_pref_id'])) $createFlag = true;
					//出資者住所(市町村番地)
					if (isset($tblCompanyInvestmentInfo['cmp_inv_address1']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_address1'])) $createFlag = true;
					//出資者住所(マンション等)
					if (isset($tblCompanyInvestmentInfo['cmp_inv_address2']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_address2'])) $createFlag = true;
					//株数
					if (isset($tblCompanyInvestmentInfo['cmp_inv_stock_num']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_stock_num'])) $createFlag = true;
					//出資金額
					if (isset($tblCompanyInvestmentInfo['cmp_inv_investment']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_investment'])) $createFlag = true;
					if (!$createFlag) {
						_Log("[_CreateItemInfo] {問合せ情報登録} 2-3.→必須項目が全て未入力の場合、登録しない。");
						continue;
					}

					$cmpInvNo++;
					$tblCompanyInvestmentInfo['cmp_inv_company_id'] = $companyId;									//会社ID
					$tblCompanyInvestmentInfo['cmp_inv_no'] = $cmpInvNo;											//出資金No
					//$tblCompanyInvestmentInfo['cmp_inv_name'] = null;												//出資者名前
					//$tblCompanyInvestmentInfo['cmp_inv_name_kana'] = null;										//出資者名前(ふりがな)
					//$tblCompanyInvestmentInfo['cmp_inv_investment'] = null;										//出資金額
					$tblCompanyInvestmentInfo['cmp_inv_del_flag'] = DELETE_FLAG_NO;									//削除フラグ="未削除"
					$tblCompanyInvestmentInfo['cmp_inv_create_ip'] = $ip;											//作成IP
					$tblCompanyInvestmentInfo['cmp_inv_create_date'] = $date;										//作成日
					$tblCompanyInvestmentInfo['cmp_inv_update_ip'] = $ip;											//更新IP
					$tblCompanyInvestmentInfo['cmp_inv_update_date'] = $date;										//更新日

					//登録情報を保存しておく。(使うかもしれないので。)
					$info['tbl_company_investment']['investment_info'][$key] = $tblCompanyInvestmentInfo;

					$res = _DB_CreateInfo('tbl_company_investment', $tblCompanyInvestmentInfo);
					if ($res === false) {
						_Log("[_CreateInquiryInfo] {問合せ情報登録} 2-3.→【失敗】");
						_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 会社_出資金額テーブル登録に失敗しました。_DB_CreateInfo('tbl_company_investment', xxx) ", 1);
						_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 会社_出資金額テーブル情報 = '".print_r($tblCompanyInvestmentInfo,true)."'", 1);
					} else {
						_Log("[_CreateInquiryInfo] {問合せ情報登録} 2-3.→【成功】");
					}
				}
			}
		}

		//2-4.会社_目的テーブルに登録する。
		_Log("[_CreateInquiryInfo] {問合せ情報登録} 2-4.会社_目的テーブル情報登録");
		if (isset($info['tbl_company_purpose']['purpose_info'])) {
			if (is_array($info['tbl_company_purpose']['purpose_info'])) {
				$cmpPpsNo = 0;
				foreach ($info['tbl_company_purpose']['purpose_info'] as $key => $tblCompanyPurposeInfo) {
					//削除フラグ="ON"は、登録しない。
					if (isset($tblCompanyPurposeInfo['cmp_pps_del_flag']) && $tblCompanyPurposeInfo['cmp_pps_del_flag'] == DELETE_FLAG_YES) {
						_Log("[_CreateItemInfo] {問合せ情報登録} 2-4.→削除フラグ=\"ON\"は、登録しない。");
						continue;
					}
					//以下の項目が全て未入力の場合、登録しない。
					$createFlag = false;
					//目的
					if (isset($tblCompanyPurposeInfo['cmp_pps_purpose']) && !_IsNull($tblCompanyPurposeInfo['cmp_pps_purpose'])) $createFlag = true;
					if (!$createFlag) {
						_Log("[_CreateItemInfo] {問合せ情報登録} 2-4.→必須項目が全て未入力の場合、登録しない。");
						continue;
					}

					$cmpPpsNo++;
					$tblCompanyPurposeInfo['cmp_pps_company_id'] = $companyId;										//会社ID
					$tblCompanyPurposeInfo['cmp_pps_no'] = $cmpPpsNo;												//目的No
					//$tblCompanyPurposeInfo['cmp_pps_purpose'] = null;												//目的
					$tblCompanyPurposeInfo['cmp_pps_del_flag'] = DELETE_FLAG_NO;									//削除フラグ="未削除"
					$tblCompanyPurposeInfo['cmp_pps_create_ip'] = $ip;												//作成IP
					$tblCompanyPurposeInfo['cmp_pps_create_date'] = $date;											//作成日
					$tblCompanyPurposeInfo['cmp_pps_update_ip'] = $ip;												//更新IP
					$tblCompanyPurposeInfo['cmp_pps_update_date'] = $date;											//更新日

					//登録情報を保存しておく。(使うかもしれないので。)
					$info['tbl_company_purpose']['purpose_info'][$key] = $tblCompanyPurposeInfo;

					$res = _DB_CreateInfo('tbl_company_purpose', $tblCompanyPurposeInfo);
					if ($res === false) {
						_Log("[_CreateInquiryInfo] {問合せ情報登録} 2-4.→【失敗】");
						_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 会社_目的テーブル登録に失敗しました。_DB_CreateInfo('tbl_company_purpose', xxx) ", 1);
						_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 会社_目的テーブル情報 = '".print_r($tblCompanyPurposeInfo,true)."'", 1);
					} else {
						_Log("[_CreateInquiryInfo] {問合せ情報登録} 2-4.→【成功】");
					}
				}
			}
		}
	}


	//3-1.問合せテーブルに登録する。
	_Log("[_CreateInquiryInfo] {問合せ情報登録} 3-1.問合せテーブル情報登録");

	//備考
	//日付置換文字列が入力されている場合、日付に置換する。
	$info['tbl_inquiry']['inq_note'] = str_replace(INQUIRY_NOTE_DATE_REPLACE, date(INQUIRY_NOTE_DATE_FORMAT), $info['tbl_inquiry']['inq_note']);

	$info['tbl_inquiry']['inq_del_flag'] = ((isset($info['tbl_inquiry']['inq_del_flag']) && !_IsNull($info['tbl_inquiry']['inq_del_flag']))?$info['tbl_inquiry']['inq_del_flag']:DELETE_FLAG_NO);	//削除フラグ
	$info['tbl_inquiry']['inq_user_id'] = $userId;			//顧客ID
	$info['tbl_inquiry']['inq_company_id'] = $companyId;	//会社ID
	$info['tbl_inquiry']['inq_create_ip'] = $ip;			//作成IP
	$info['tbl_inquiry']['inq_create_date'] = $date;		//作成日
	$info['tbl_inquiry']['inq_update_ip'] = $ip;			//更新IP
	$info['tbl_inquiry']['inq_update_date'] = $date;		//更新日
	$inquiryId = _DB_CreateInfo('tbl_inquiry', $info['tbl_inquiry']);
	if ($inquiryId === false) {
		$inquiryId = null;
		_Log("[_CreateInquiryInfo] {問合せ情報登録} 3-1.→【失敗】");
		_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 問合せテーブル登録に失敗しました。_DB_CreateInfo('tbl_inquiry', xxx) ", 1);
		_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 問合せテーブル情報 = '".print_r($info['tbl_inquiry'],true)."'", 1);
		_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} ※問合せ_xxxテーブルへの登録は、問合せIDが無いため行いません。", 1);
	} else {
		_Log("[_CreateInquiryInfo] {問合せ情報登録} 3-1.→【成功】");

		//3-2.問合せ_状況テーブルに登録する。
		_Log("[_CreateInquiryInfo] {問合せ情報登録} 3-2.問合せ_状況テーブル情報登録");


		$statusId = null;

		//問合せタイプ_設立コース_状況IDの設定の有無？
		if (isset($info['tbl_inquiry']['inq_sts_inquiry_type_course_status_id']) && !_IsNull($info['tbl_inquiry']['inq_sts_inquiry_type_course_status_id'])) {
			//有る場合(管理画面からの登録の場合)

			$statusId = $info['tbl_inquiry']['inq_sts_inquiry_type_course_status_id'];
			_Log("[_CreateInquiryInfo] {問合せ情報登録} 3-2.問合せテーブル.問合せタイプ_設立コースID = '".$info['tbl_inquiry']['inq_inquiry_type_course_id']."' に対応した状況(選択した状況) = '".$statusId."'");
		} else {
			//無い場合(問合せフォームからの登録の場合)

			//問合せテーブル.問合せタイプ_設立コースIDに対応した状況を取得する。
			//問合せタイプ_設立コース_状況マスタを検索する。
			//検索条件を設定する。
			$condition4Status = array();
			$condition4Status['inquiry_type_course_id'] = $info['tbl_inquiry']['inq_inquiry_type_course_id'];
			//ソート条件を設定する。→表示順の1番最初を登録する。
			$order .= "lpad(show_order,10,'0')";		//表示順の昇順
			$order .= ",id";							//idの昇順
			$statusList = _DB_GetList('mst_inquiry_type_course_status', $condition4Status, true, $order);

			$statusId = $statusList[0]['id'];
			_Log("[_CreateInquiryInfo] {問合せ情報登録} 3-2.問合せテーブル.問合せタイプ_設立コースID = '".$info['tbl_inquiry']['inq_inquiry_type_course_id']."' に対応した状況(1番最初状況) = '".$statusId."'('".$statusList[0]['name']."')");
		}

		$info['tbl_inquiry_status']['inq_sts_inquiry_id'] = $inquiryId;									//問合せID
		$info['tbl_inquiry_status']['inq_sts_no'] = 1;													//No
		$info['tbl_inquiry_status']['inq_sts_inquiry_type_course_status_id'] = $statusId;				//問合せタイプ_設立コース_状況ID="1番最初状況"
		$info['tbl_inquiry_status']['inq_sts_latest_flag'] = LATEST_FLAG_YES;							//最新フラグ="最新状況"
		$info['tbl_inquiry_status']['inq_sts_del_flag'] = DELETE_FLAG_NO;								//削除フラグ="未削除"
		$info['tbl_inquiry_status']['inq_sts_create_ip'] = $ip;											//作成IP
		$info['tbl_inquiry_status']['inq_sts_create_date'] = $date;										//作成日
		$info['tbl_inquiry_status']['inq_sts_update_ip'] = $ip;											//更新IP
		$info['tbl_inquiry_status']['inq_sts_update_date'] = $date;										//更新日
		$res = _DB_CreateInfo('tbl_inquiry_status', $info['tbl_inquiry_status']);
		if ($res === false) {
			_Log("[_CreateInquiryInfo] {問合せ情報登録} 3-2.→【失敗】");
			_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 問合せ_状況テーブル登録に失敗しました。_DB_CreateInfo('tbl_inquiry_status', xxx) ", 1);
			_Log("[_CreateInquiryInfo] {問合せ情報登録} {ERROR} 問合せ_状況テーブル情報 = '".print_r($info['tbl_inquiry_status'],true)."'", 1);
		} else {
			_Log("[_CreateInquiryInfo] {問合せ情報登録} 3-2.→【成功】");
		}

	}

	_Log("[_CreateInquiryInfo] {問合せ情報登録} ============================================================ end");

	_Log("[_CreateInquiryInfo] 結果-問合せID = '".$inquiryId."'");
	_Log("[_CreateInquiryInfo] 結果-問合せ情報='".print_r($info,true)."'");

	_Log("[_CreateInquiryInfo] end.");

	return $inquiryId;

}

/**
 * 問合せ情報を更新する。
 *
 * @param	mixed   $info		問合せ情報
 * @return	int		問合せID{false:失敗した場合}
 * @access  public
 * @since   3.2.0
 */
function _SaveInquiryInfo(&$info) {

	_Log("[_SaveInquiryInfo] start.");

    _Log("[_SaveInquiryInfo] (param) 問合せ情報='".print_r($info,true)."'");

	//IPアドレスを設定する。
	$ip = $_SERVER["REMOTE_ADDR"];
	$date = null;

	$inquiryId = false;
	$userId = null;
	$companyId = null;

	//問合せ情報を更新する。
	_Log("[_SaveInquiryInfo] {問合せ情報更新} ============================================================ start");

	//1-1.顧客テーブルを更新する。
	_Log("[_SaveInquiryInfo] {問合せ情報更新} 1-1.顧客テーブル情報更新");
	$info['tbl_user']['usr_fax_flag'] = ((isset($info['tbl_user']['usr_fax_flag']) && !_IsNull($info['tbl_user']['usr_fax_flag']))?$info['tbl_user']['usr_fax_flag']:FAX_FLAG_NO);		//FAX有無
	$info['tbl_user']['usr_del_flag'] = ((isset($info['tbl_user']['usr_del_flag']) && !_IsNull($info['tbl_user']['usr_del_flag']))?$info['tbl_user']['usr_del_flag']:DELETE_FLAG_NO);	//削除フラグ
	$info['tbl_user']['usr_update_ip'] = $ip;			//更新IP
	$info['tbl_user']['usr_update_date'] = $date;		//更新日
	unset($info['tbl_user']['usr_create_ip']);			//作成IP
	unset($info['tbl_user']['usr_create_date']);		//作成日
	$res = _DB_SaveInfo('tbl_user', $info['tbl_user']);
	if ($res === false) {
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 1-1.→【失敗】");
    	_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 顧客テーブル更新に失敗しました。_DB_SaveInfo('tbl_user', xxx) ", 1);
    	_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 顧客テーブル情報 = '".print_r($info['tbl_user'],true)."'", 1);
	} else {
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 1-1.→【成功】");
	}

	//ユーザーIDを設定する。
	$userId = $info['tbl_user']['usr_user_id'];

	_Log("[_SaveInquiryInfo] {問合せ情報更新} 1-2.顧客_xxxテーブル情報更新→顧客関連のテーブル無し(2008/05/30現在)");
//	//2.顧客_連絡時間テーブルを更新する。(削除→登録)
//	_Log("[_SaveInquiryInfo] 2.顧客_連絡時間テーブル情報更新");
//	//削除する。
//	$condition = array();
//	$condition['usr_ctm_user_id'] = $userId;//ユーザーID
//	$res = _DB_DeleteInfo('tbl_user_contact_time', $condition);
//	if ($res === false) {
//    	_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 顧客_連絡時間テーブル削除に失敗しました。_DB_DeleteInfo('tbl_user_contact_time', xxx) ", 1);
//    	_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 削除条件 = '".print_r($condition,true)."'", 1);
//	} else {
//		_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-1.→【削除成功】");
//	}
//	//登録する。
//	if (isset($info['tbl_user_contact_time']['usr_ctm_contact_time_id'])) {
//		foreach ($info['tbl_user_contact_time']['usr_ctm_contact_time_id'] as $key => $usrCtmContactTimeId) {
//			$tblUserContactTimeInfo = array();
//			$tblUserContactTimeInfo['usr_ctm_user_id'] = $userId;							//顧客ID
//			$tblUserContactTimeInfo['usr_ctm_contact_time_id'] = $usrCtmContactTimeId;	//連絡時間ID
//			$tblUserContactTimeInfo['usr_ctm_create_ip'] = $ip;							//作成IP
//			$tblUserContactTimeInfo['usr_ctm_create_date'] = null;						//作成日
//			$tblUserContactTimeInfo['usr_ctm_update_ip'] = $ip;							//更新IP
//			$tblUserContactTimeInfo['usr_ctm_update_date'] = null;						//更新日
//
//			//登録情報を保存しておく。(使うかもしれないので)
//			$info['tbl_user_contact_time'][] = $tblUserContactTimeInfo;
//
//			$res = _DB_CreateInfo('tbl_user_contact_time', $tblUserContactTimeInfo);
//			if ($res === false) {
//		    	_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 顧客_連絡時間テーブル登録に失敗しました。_DB_CreateInfo('tbl_user_contact_time', xxx) ", 1);
//		    	_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 顧客_連絡時間テーブル情報 = '".print_r($tblUserContactTimeInfo,true)."'", 1);
//			} else {
//				_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-2.→【登録成功】");
//			}
//		}
//	}

	//2-1.会社テーブルを更新する。
	_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-1.会社テーブル情報更新");
	$info['tbl_company']['cmp_move_flag'] = ((isset($info['tbl_company']['cmp_move_flag']) && !_IsNull($info['tbl_company']['cmp_move_flag']))?$info['tbl_company']['cmp_move_flag']:MOVE_FLAG_NO);	//移転・引越しフラグ
	$info['tbl_company']['cmp_del_flag'] = ((isset($info['tbl_company']['cmp_del_flag']) && !_IsNull($info['tbl_company']['cmp_del_flag']))?$info['tbl_company']['cmp_del_flag']:DELETE_FLAG_NO);	//削除フラグ
	$info['tbl_company']['cmp_update_ip'] = $ip;			//更新IP
	$info['tbl_company']['cmp_update_date'] = $date;		//更新日
	unset($info['tbl_company']['cmp_create_ip']);			//作成IP
	unset($info['tbl_company']['cmp_create_date']);			//作成日
	$res = _DB_SaveInfo('tbl_company', $info['tbl_company']);
	if ($res === false) {
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-1.→【失敗】");
		_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 会社テーブル更新に失敗しました。_DB_SaveInfo('tbl_company', xxx) ", 1);
		_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 会社テーブル情報 = '".print_r($info['tbl_company'],true)."'", 1);
	} else {
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-1.→【成功】");
	}

	//会社IDを設定する。
	$companyId = $info['tbl_company']['cmp_company_id'];

	//2-2.会社_役員テーブルを更新する。
	_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-2.会社_役員テーブル情報更新");
	_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-2.→会社_役員テーブル情報を一旦削除する。");
	$condition4del = array();
	$condition4del['cmp_bod_company_id'] = $companyId;//会社ID
	$res = _DB_DeleteInfo('tbl_company_board', $condition4del);
	if ($res === false) {
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-2.→【削除失敗】");
    	_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 会社_役員テーブル削除に失敗しました。_DB_DeleteInfo('tbl_company_board', xxx) ", 1);
    	_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 削除条件 = '".print_r($condition4del,true)."'", 1);
	} else {
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-2.→【削除成功】");
	}
	if (isset($info['tbl_company_board']['board_info'])) {
		if (is_array($info['tbl_company_board']['board_info'])) {
			$cmpBodNo = 0;
			foreach ($info['tbl_company_board']['board_info'] as $key => $tblCompanyBoardInfo) {
				//削除フラグ="ON"は、登録しない。
				if (isset($tblCompanyBoardInfo['cmp_bod_del_flag']) && $tblCompanyBoardInfo['cmp_bod_del_flag'] == DELETE_FLAG_YES) {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-2.→削除フラグ=\"ON\"は、登録しない。");
					continue;
				}
				//以下の項目が全て未入力の場合、登録しない。
				$createFlag = false;
				//役職ID
				if (isset($tblCompanyBoardInfo['cmp_bod_post_id']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_post_id'])) $createFlag = true;
				//役員名前
				if (isset($tblCompanyBoardInfo['cmp_bod_name']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_name'])) $createFlag = true;
				//役員名前(ふりがな)
				if (isset($tblCompanyBoardInfo['cmp_bod_name_kana']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_name_kana'])) $createFlag = true;
				//役員住所(郵便番号1)
				if (isset($tblCompanyBoardInfo['cmp_bod_zip1']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_zip1'])) $createFlag = true;
				//役員住所(郵便番号2)
				if (isset($tblCompanyBoardInfo['cmp_bod_zip2']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_zip2'])) $createFlag = true;
				//役員住所(都道府県)
				if (isset($tblCompanyBoardInfo['cmp_bod_pref_id']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_pref_id'])) $createFlag = true;
				//役員住所(市町村番地)
				if (isset($tblCompanyBoardInfo['cmp_bod_address1']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_address1'])) $createFlag = true;
				//役員住所(マンション等)
				if (isset($tblCompanyBoardInfo['cmp_bod_address2']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_address2'])) $createFlag = true;
				//生年月日(年)
				if (isset($tblCompanyBoardInfo['cmp_bod_birth_year']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_birth_year'])) $createFlag = true;
				//生年月日(月)
				if (isset($tblCompanyBoardInfo['cmp_bod_birth_month']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_birth_month'])) $createFlag = true;
				//生年月日(日)
				if (isset($tblCompanyBoardInfo['cmp_bod_birth_day']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_birth_day'])) $createFlag = true;
				//国籍ID
				if (isset($tblCompanyBoardInfo['cmp_bod_nationality_id']) && !_IsNull($tblCompanyBoardInfo['cmp_bod_nationality_id'])) $createFlag = true;
				if (!$createFlag) {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-2.→必須項目が全て未入力の場合、登録しない。");
					continue;
				}

				$cmpBodNo++;
				$tblCompanyBoardInfo['cmp_bod_company_id'] = $companyId;										//会社ID
				$tblCompanyBoardInfo['cmp_bod_no'] = $cmpBodNo;													//役員No
				//$tblCompanyBoardInfo['cmp_bod_post_id'] = null;												//役職ID
				//$tblCompanyBoardInfo['cmp_bod_name'] = null;													//役員名前
				//$tblCompanyBoardInfo['cmp_bod_name_kana'] = null;												//役員名前(ふりがな)
				$tblCompanyBoardInfo['cmp_bod_del_flag'] = DELETE_FLAG_NO;										//削除フラグ="未削除"
				$tblCompanyBoardInfo['cmp_bod_create_ip'] = $ip;												//作成IP
				$tblCompanyBoardInfo['cmp_bod_create_date'] = $date;											//作成日
				$tblCompanyBoardInfo['cmp_bod_update_ip'] = $ip;												//更新IP
				$tblCompanyBoardInfo['cmp_bod_update_date'] = $date;											//更新日

				//登録情報を保存しておく。(使うかもしれないので。)
				$info['tbl_company_board']['board_info'][$key] = $tblCompanyBoardInfo;

				$res = _DB_CreateInfo('tbl_company_board', $tblCompanyBoardInfo);
				if ($res === false) {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-2.→【失敗】");
					_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 会社_役員テーブル登録に失敗しました。_DB_CreateInfo('tbl_company_board', xxx) ", 1);
					_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 会社_役員テーブル情報 = '".print_r($tblCompanyBoardInfo,true)."'", 1);
				} else {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-2.→【成功】");
				}
			}
		}
	}

	//2-3.会社_出資金額テーブルを更新する。
	_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-3.会社_出資金額テーブル情報更新");
	_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-3.→会社_出資金額テーブル情報を一旦削除する。");
	$condition4del = array();
	$condition4del['cmp_inv_company_id'] = $companyId;//会社ID
	$res = _DB_DeleteInfo('tbl_company_investment', $condition4del);
	if ($res === false) {
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-3.→【削除失敗】");
    	_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 会社_出資金額テーブル削除に失敗しました。_DB_DeleteInfo('tbl_company_investment', xxx) ", 1);
    	_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 削除条件 = '".print_r($condition4del,true)."'", 1);
	} else {
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-3.→【削除成功】");
	}
	if (isset($info['tbl_company_investment']['investment_info'])) {
		if (is_array($info['tbl_company_investment']['investment_info'])) {
			$cmpInvNo = 0;
			foreach ($info['tbl_company_investment']['investment_info'] as $key => $tblCompanyInvestmentInfo) {
				//削除フラグ="ON"は、登録しない。
				if (isset($tblCompanyInvestmentInfo['cmp_inv_del_flag']) && $tblCompanyInvestmentInfo['cmp_inv_del_flag'] == DELETE_FLAG_YES) {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-3.→削除フラグ=\"ON\"は、登録しない。");
					continue;
				}
				//以下の項目が全て未入力の場合、登録しない。
				$createFlag = false;
				//出資者名前
				if (isset($tblCompanyInvestmentInfo['cmp_inv_name']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_name'])) $createFlag = true;
				//出資者住所(郵便番号1)
				if (isset($tblCompanyInvestmentInfo['cmp_inv_zip1']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_zip1'])) $createFlag = true;
				//出資者住所(郵便番号2)
				if (isset($tblCompanyInvestmentInfo['cmp_inv_zip2']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_zip2'])) $createFlag = true;
				//出資者住所(都道府県)
				if (isset($tblCompanyInvestmentInfo['cmp_inv_pref_id']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_pref_id'])) $createFlag = true;
				//出資者住所(市町村番地)
				if (isset($tblCompanyInvestmentInfo['cmp_inv_address1']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_address1'])) $createFlag = true;
				//出資者住所(マンション等)
				if (isset($tblCompanyInvestmentInfo['cmp_inv_address2']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_address2'])) $createFlag = true;
				//株数
				if (isset($tblCompanyInvestmentInfo['cmp_inv_stock_num']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_stock_num'])) $createFlag = true;
				//出資金額
				if (isset($tblCompanyInvestmentInfo['cmp_inv_investment']) && !_IsNull($tblCompanyInvestmentInfo['cmp_inv_investment'])) $createFlag = true;
				if (!$createFlag) {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-3.→必須項目が全て未入力の場合、登録しない。");
					continue;
				}

				$cmpInvNo++;
				$tblCompanyInvestmentInfo['cmp_inv_company_id'] = $companyId;									//会社ID
				$tblCompanyInvestmentInfo['cmp_inv_no'] = $cmpInvNo;											//出資金No
				//$tblCompanyInvestmentInfo['cmp_inv_name'] = null;												//出資者名前
				//$tblCompanyInvestmentInfo['cmp_inv_name_kana'] = null;										//出資者名前(ふりがな)
				//$tblCompanyInvestmentInfo['cmp_inv_investment'] = null;										//出資金額
				$tblCompanyInvestmentInfo['cmp_inv_del_flag'] = DELETE_FLAG_NO;									//削除フラグ="未削除"
				$tblCompanyInvestmentInfo['cmp_inv_create_ip'] = $ip;											//作成IP
				$tblCompanyInvestmentInfo['cmp_inv_create_date'] = $date;										//作成日
				$tblCompanyInvestmentInfo['cmp_inv_update_ip'] = $ip;											//更新IP
				$tblCompanyInvestmentInfo['cmp_inv_update_date'] = $date;										//更新日

				//登録情報を保存しておく。(使うかもしれないので。)
				$info['tbl_company_investment']['investment_info'][$key] = $tblCompanyInvestmentInfo;

				$res = _DB_CreateInfo('tbl_company_investment', $tblCompanyInvestmentInfo);
				if ($res === false) {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-3.→【失敗】");
					_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 会社_出資金額テーブル登録に失敗しました。_DB_CreateInfo('tbl_company_investment', xxx) ", 1);
					_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 会社_出資金額テーブル情報 = '".print_r($tblCompanyInvestmentInfo,true)."'", 1);
				} else {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-3.→【成功】");
				}
			}
		}
	}

	//2-4.会社_目的テーブルを更新する。
	_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-4.会社_目的テーブル情報更新");
	_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-4.→会社_目的テーブル情報を一旦削除する。");
	$condition4del = array();
	$condition4del['cmp_pps_company_id'] = $companyId;//会社ID
	$res = _DB_DeleteInfo('tbl_company_purpose', $condition4del);
	if ($res === false) {
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-4.→【削除失敗】");
    	_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 会社_目的テーブル削除に失敗しました。_DB_DeleteInfo('tbl_company_purpose', xxx) ", 1);
    	_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 削除条件 = '".print_r($condition4del,true)."'", 1);
	} else {
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-4.→【削除成功】");
	}
	if (isset($info['tbl_company_purpose']['purpose_info'])) {
		if (is_array($info['tbl_company_purpose']['purpose_info'])) {
			$cmpPpsNo = 0;
			foreach ($info['tbl_company_purpose']['purpose_info'] as $key => $tblCompanyPurposeInfo) {
				//削除フラグ="ON"は、登録しない。
				if (isset($tblCompanyPurposeInfo['cmp_pps_del_flag']) && $tblCompanyPurposeInfo['cmp_pps_del_flag'] == DELETE_FLAG_YES) {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-4.→削除フラグ=\"ON\"は、登録しない。");
					continue;
				}
				//以下の項目が全て未入力の場合、登録しない。
				$createFlag = false;
				//目的
				if (isset($tblCompanyPurposeInfo['cmp_pps_purpose']) && !_IsNull($tblCompanyPurposeInfo['cmp_pps_purpose'])) $createFlag = true;
				if (!$createFlag) {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-4.→必須項目が全て未入力の場合、登録しない。");
					continue;
				}

				$cmpPpsNo++;
				$tblCompanyPurposeInfo['cmp_pps_company_id'] = $companyId;										//会社ID
				$tblCompanyPurposeInfo['cmp_pps_no'] = $cmpPpsNo;												//目的No
				//$tblCompanyPurposeInfo['cmp_pps_purpose'] = null;												//目的
				$tblCompanyPurposeInfo['cmp_pps_del_flag'] = DELETE_FLAG_NO;									//削除フラグ="未削除"
				$tblCompanyPurposeInfo['cmp_pps_create_ip'] = $ip;												//作成IP
				$tblCompanyPurposeInfo['cmp_pps_create_date'] = $date;											//作成日
				$tblCompanyPurposeInfo['cmp_pps_update_ip'] = $ip;												//更新IP
				$tblCompanyPurposeInfo['cmp_pps_update_date'] = $date;											//更新日

				//登録情報を保存しておく。(使うかもしれないので。)
				$info['tbl_company_purpose']['purpose_info'][$key] = $tblCompanyPurposeInfo;

				$res = _DB_CreateInfo('tbl_company_purpose', $tblCompanyPurposeInfo);
				if ($res === false) {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-4.→【失敗】");
					_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 会社_目的テーブル登録に失敗しました。_DB_CreateInfo('tbl_company_purpose', xxx) ", 1);
					_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 会社_目的テーブル情報 = '".print_r($tblCompanyPurposeInfo,true)."'", 1);
				} else {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 2-4.→【成功】");
				}
			}
		}
	}



	//3-1.問合せテーブルを更新する。
	_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-1.問合せテーブル情報更新");

	//備考
	//日付置換文字列が入力されている場合、日付に置換する。
	$info['tbl_inquiry']['inq_note'] = str_replace(INQUIRY_NOTE_DATE_REPLACE, date(INQUIRY_NOTE_DATE_FORMAT), $info['tbl_inquiry']['inq_note']);

	$info['tbl_inquiry']['inq_del_flag'] = ((isset($info['tbl_inquiry']['inq_del_flag']) && !_IsNull($info['tbl_inquiry']['inq_del_flag']))?$info['tbl_inquiry']['inq_del_flag']:DELETE_FLAG_NO);		//削除フラグ
	$info['tbl_inquiry']['inq_update_ip'] = $ip;			//更新IP
	$info['tbl_inquiry']['inq_update_date'] = $date;		//更新日
	unset($info['tbl_inquiry']['inq_create_ip']);			//作成IP
	unset($info['tbl_inquiry']['inq_create_date']);			//作成日
	$res = _DB_SaveInfo('tbl_inquiry', $info['tbl_inquiry']);
	if ($res === false) {
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-1.→【失敗】");
		_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 問合せテーブル更新に失敗しました。_DB_SaveInfo('tbl_inquiry', xxx) ", 1);
		_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 問合せテーブル情報 = '".print_r($info['tbl_inquiry'],true)."'", 1);
	} else {
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-1.→【成功】");

		$inquiryId = $info['tbl_inquiry']['inq_inquiry_id'];


		//3-2.問合せ_状況テーブルを更新する。
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2.問合せ_状況テーブル情報更新");


		$newStatusId = $info['tbl_inquiry']['inq_sts_inquiry_type_course_status_id'];
		$oldStatusId = null;
		$oldInquiryStatusInfo = null;

		//最新フラグ="最新状況"の問合せ_状況テーブルを検索する。
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-1.問合せ_状況テーブル情報取得(最新フラグ=\"最新状況\")");
		$condition4Latest = array();
		$condition4Latest['inq_sts_inquiry_id'] = $inquiryId;
		$condition4Latest['inq_sts_latest_flag'] = LATEST_FLAG_YES;	//最新フラグ="最新状況"
		$order = "inq_sts_no desc";//ソート条件=Noの降順
		$tblInquiryStatusList4Latest = _DB_GetList('tbl_inquiry_status', $condition4Latest, false, $order, 'inq_sts_del_flag');
		if (!_IsNull($tblInquiryStatusList4Latest)) {
			$oldInquiryStatusInfo = $tblInquiryStatusList4Latest[0];
			$oldStatusId = $oldInquiryStatusInfo['inq_sts_inquiry_type_course_status_id'];
		}

		_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-1.変更前の状況 = '".$oldStatusId."'");
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-1.変更後の状況 = '".$newStatusId."'");
		_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-1.状況の変更有無");
		if ($newStatusId == $oldStatusId) {
			//状況に変更がなかった場合
			_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-1.→無し");
		} else {
			//状況に変更があった場合
			_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-1.→有");

			//現在、最新フラグ="最新状況"の情報を更新する。
			_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-2.現在、最新フラグ=\"最新状況\"の情報を更新する。");

			if (_IsNull($oldInquiryStatusInfo)) {
				_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-2.→現在の情報無→更新しない。");
			} else {
				_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-2.→現在の情報有→更新する。");
				$oldInquiryStatusInfo['inq_sts_latest_flag'] = LATEST_FLAG_NO;		//最新フラグ="過去状況"
				$oldInquiryStatusInfo['inq_sts_update_ip'] = $ip;					//更新IP
				$oldInquiryStatusInfo['inq_sts_update_date'] = $date;				//更新日
				unset($oldInquiryStatusInfo['inq_sts_create_ip']);					//作成IP
				unset($oldInquiryStatusInfo['inq_sts_create_date']);				//作成日
				$res = _DB_SaveInfo('tbl_inquiry_status', $oldInquiryStatusInfo);
				if ($res === false) {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-2.→【失敗】");
					_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 問合せ_状況テーブル更新に失敗しました。_DB_SaveInfo('tbl_inquiry_status', xxx) ", 1);
					_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 問合せ_状況テーブル情報 = '".print_r($oldInquiryStatusInfo,true)."'", 1);
				} else {
					_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-2.→【成功】");
				}
			}

			//新規登録する。
			_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-3.新規登録する。");
			$condition4next = array();
			$condition4next['inq_sts_inquiry_id'] = $inquiryId;
			$nextNo = _DB_GetNextNo('tbl_inquiry_status', 'inq_sts_no', $condition4next, false);

			$newInquiryStatusInfo = array();
			$newInquiryStatusInfo['inq_sts_inquiry_id'] = $inquiryId;								//問合せID
			$newInquiryStatusInfo['inq_sts_no'] = $nextNo;											//No
			$newInquiryStatusInfo['inq_sts_inquiry_type_course_status_id'] = $newStatusId;			//問合せタイプ_設立コース_状況ID
			$newInquiryStatusInfo['inq_sts_latest_flag'] = LATEST_FLAG_YES;							//最新フラグ="最新状況"
			$newInquiryStatusInfo['inq_sts_del_flag'] = DELETE_FLAG_NO;								//削除フラグ="未削除"
			$newInquiryStatusInfo['inq_sts_create_ip'] = $ip;										//作成IP
			$newInquiryStatusInfo['inq_sts_create_date'] = $date;									//作成日
			$newInquiryStatusInfo['inq_sts_update_ip'] = $ip;										//更新IP
			$newInquiryStatusInfo['inq_sts_update_date'] = $date;									//更新日
			$res = _DB_CreateInfo('tbl_inquiry_status', $newInquiryStatusInfo);
			if ($res === false) {
				_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-3.→【失敗】");
				_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 問合せ_状況テーブル更新に失敗しました。_DB_CreateInfo('tbl_inquiry_status', xxx) ", 1);
				_Log("[_SaveInquiryInfo] {問合せ情報更新} {ERROR} 問合せ_状況テーブル情報 = '".print_r($newInquiryStatusInfo,true)."'", 1);
			} else {
				_Log("[_SaveInquiryInfo] {問合せ情報更新} 3-2-3.→【成功】");
			}
		}

	}

	_Log("[_SaveInquiryInfo] {問合せ情報更新} ============================================================ end");

	_Log("[_SaveInquiryInfo] 結果 = '".$inquiryId."'");
    _Log("[_SaveInquiryInfo] end.");

	return $inquiryId;

}


/**
 * 問合せ情報を取得する。
 *
 * @param	int   	$inquiryId		問合せID
 * @param	boolean	$undeleteOnly	未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @return	mixed	問合せ情報{null:取得できなかった場合}
 * @access  public
 * @since   3.2.0
 */
function _GetInquiryInfo($inquiryId, $undeleteOnly = true) {

	_Log("[_GetInquiryInfo] start.");

    _Log("[_GetInquiryInfo] (param) 問合せID = '".$inquiryId."'");
    _Log("[_GetInquiryInfo] (param) 未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象} = '".$undeleteOnly."'");

    if (_IsNull($inquiryId)) {
    	_Log("[_GetInquiryInfo] InquiryId is null.");
    	_Log("[_GetInquiryInfo] end.");
		return null;
    }


	//問合せ情報を取得する。
	_Log("[_GetInquiryInfo] {問合せ情報取得} ============================================================ start");


	//1.問合せテーブルを検索する。
	_Log("[_GetInquiryInfo] {問合せ情報取得} 1.問合せテーブル情報取得");
	$condition = array();
	$condition['inq_inquiry_id'] = $inquiryId;
	$tblInquiryInfo = _DB_GetInfo('tbl_inquiry', $condition, $undeleteOnly, 'inq_del_flag');
	if (_IsNull($tblInquiryInfo)) {
    	_Log("[_GetInquiryInfo] _DB_GetInfo('tbl_inquiry', \$condition, \$undeleteOnly) is null.");
    	_Log("[_GetInquiryInfo] end.");
		return null;
	}

	//2.問合せ_状況テーブルを検索する。
	_Log("[_GetInquiryInfo] {問合せ情報取得} 2.問合せ_状況テーブル情報取得");
	$condition = array();
	$condition['inq_sts_inquiry_id'] = $inquiryId;
	$order = "inq_sts_no desc";//ソート条件=Noの降順
	$tblInquiryStatusList = _DB_GetList('tbl_inquiry_status', $condition, false, $order, 'inq_sts_del_flag');

	//最新フラグ="最新状況"の問合せ_状況テーブルを検索する。
	_Log("[_GetInquiryInfo] {問合せ情報取得} 2-1.問合せ_状況テーブル情報取得(最新フラグ=\"最新状況\")");
	$condition = array();
	$condition['inq_sts_inquiry_id'] = $inquiryId;
	$condition['inq_sts_latest_flag'] = LATEST_FLAG_YES;	//最新フラグ="最新状況"
	$order = "inq_sts_no desc";//ソート条件=Noの降順
	$tblInquiryStatusList4Latest = _DB_GetList('tbl_inquiry_status', $condition, false, $order, 'inq_sts_del_flag');
	if (!_IsNull($tblInquiryStatusList4Latest)) {
		//最新フラグ="最新状況"の状況を問合せテーブル情報に追加する。
		$tblInquiryInfo['inq_sts_inquiry_type_course_status_id'] = $tblInquiryStatusList4Latest[0]['inq_sts_inquiry_type_course_status_id'];
	}

	//3.顧客テーブルを検索する。
	_Log("[_GetInquiryInfo] {問合せ情報取得} 3.顧客テーブル情報取得");
	$condition = array();
	$condition['usr_user_id'] = $tblInquiryInfo['inq_user_id'];
	$tblUserInfo = _DB_GetInfo('tbl_user', $condition, false, 'usr_del_flag');

	//4.会社テーブルを検索する。
	_Log("[_GetInquiryInfo] {問合せ情報取得} 4.会社テーブル情報取得");
	$condition = array();
	$condition['cmp_company_id'] = $tblInquiryInfo['inq_company_id'];
	$tblCompanyInfo = _DB_GetInfo('tbl_company', $condition, false, 'cmp_del_flag');

	//5.会社_役員テーブルを検索する。
	_Log("[_GetInquiryInfo] {問合せ情報取得} 5.会社_役員テーブル情報取得");
	$condition = array();
	$condition['cmp_bod_company_id'] = $tblInquiryInfo['inq_company_id'];
	$order = "cmp_bod_no";//ソート条件=役員Noの昇順
	$tblCompanyBoardList = _DB_GetList('tbl_company_board', $condition, false, $order, 'cmp_bod_del_flag');

	//6.会社_出資金額テーブルを検索する。
	_Log("[_GetInquiryInfo] {問合せ情報取得} 6.会社_出資金額テーブル情報取得");
	$condition = array();
	$condition['cmp_inv_company_id'] = $tblInquiryInfo['inq_company_id'];
	$order = "cmp_inv_no";//ソート条件=出資金Noの昇順
	$tblCompanyInvestmentList = _DB_GetList('tbl_company_investment', $condition, false, $order, 'cmp_inv_del_flag');

	//7.会社_目的テーブルを検索する。
	_Log("[_GetInquiryInfo] {問合せ情報取得} 7.会社_目的テーブル情報取得");
	$condition = array();
	$condition['cmp_pps_company_id'] = $tblInquiryInfo['inq_company_id'];
	$order = "cmp_pps_no";//ソート条件=目的Noの昇順
	$tblCompanyPurposeList = _DB_GetList('tbl_company_purpose', $condition, false, $order, 'cmp_pps_del_flag');


	//配列に設定する。
	$resList = array();
	$resList['tbl_inquiry'] = $tblInquiryInfo;												//1.問合せテーブル
	$resList['tbl_inquiry_status'] = $tblInquiryStatusList;									//2.問合せ_状況テーブル
	$resList['tbl_user'] = $tblUserInfo;													//3.顧客テーブル
	$resList['tbl_company'] = $tblCompanyInfo;												//4.会社テーブル
	$resList['tbl_company_board']['board_info'] = $tblCompanyBoardList;						//5.会社_役員テーブル
	$resList['tbl_company_investment']['investment_info'] = $tblCompanyInvestmentList;		//6.会社_出資金額テーブル
	$resList['tbl_company_purpose']['purpose_info'] = $tblCompanyPurposeList;				//7.会社_目的テーブル


	_Log("[_GetInquiryInfo] {問合せ情報取得} 結果 = '".print_r($resList,true)."'");
	_Log("[_GetInquiryInfo] {問合せ情報取得} ============================================================ end");

	_Log("[_GetInquiryInfo] end.");
	return $resList;
}


/**
 * 問合せ情報を検索する。
 *
 * @param	mixed   $condition				検索条件
 * @param	string	$order					ソート条件
 * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
 * @param	int		$activePage				表示するページ
 * @param	int		$showNumberOfOnePage	1ページの表示件数
 * @param	int		$returnMode				返り値配列の格納モード{1:通常(添字0~Nの1次元配列)/2:問合せID毎([問合せID]の1次元配列)}
 * @return	array	予約可能日情報(取得できなかった場合はnull。)
 * @access  public
 * @since   3.2.0
 */
function _GetInquiry($condition = null, $order = null, $undeleteOnly = true, $countOnly = false, $activePage = 1, $showNumberOfOnePage = null, $returnMode = 1) {

	_Log("[_GetInquiry] start.");

    _Log("[_GetInquiry] (param) 検索条件='".print_r($condition,true)."'");
    _Log("[_GetInquiry] (param) ソート条件='".$order."'");
    _Log("[_GetInquiry] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
    _Log("[_GetInquiry] (param) 表示するページ='".$activePage."'");
    _Log("[_GetInquiry] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
    _Log("[_GetInquiry] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
    _Log("[_GetInquiry] (param) 返り値配列の格納モード{1:通常(添字0~Nの1次元配列)/2:問合せID毎([問合せID]の1次元配列)}='".$returnMode."'");

	//SQLを作成する。
	$sql = "";
	$sql .= "\n select";
	$sql .= "\n   t_inq.*";																						//問合せテーブル
	$sql .= "\n  ,t_inq_sts.*";																					//問合せ_状況テーブル
	$sql .= "\n  ,t_usr.*";																						//顧客テーブル
	$sql .= "\n  ,t_cmp.*";																						//会社テーブル
//	$sql .= "\n  ,t_XXX.*";																						//士業テーブル

	$sql .= "\n  ,m_inq_typ.name inq_inquiry_type_name";														//問合せタイプ名
	$sql .= "\n  ,m_inq_typ_crs.name inq_inquiry_type_course_name";												//問合せタイプ_設立コース名
	$sql .= "\n  ,m_inq_typ_crs_sts.name inq_sts_inquiry_type_course_status_name";								//問合せタイプ_設立コース_状況名

	$sql .= "\n  ,date_format(t_inq.inq_create_date,'%Y-%m-%d %H:%i:%s') inq_create_date_yyyymmddhhmmss";		//作成日YYYY/MM/DD hh:mm:ss
	$sql .= "\n  ,date_format(t_inq.inq_create_date,'%Y-%m-%d') inq_create_date_yyyymmdd";						//作成日YYYY/MM/DD
	$sql .= "\n  ,date_format(t_inq.inq_create_date,'%y-%m-%d') inq_create_date_yymmdd";						//作成日YY/MM/DD
	$sql .= "\n  ,date_format(t_inq.inq_update_date,'%Y-%m-%d %H:%i:%s') inq_update_date_yyyymmddhhmmss";		//更新日YYYY/MM/DD hh:mm:ss
	$sql .= "\n  ,date_format(t_inq.inq_update_date,'%Y-%m-%d') inq_update_date_yyyymmdd";						//更新日YYYY/MM/DD
	$sql .= "\n  ,date_format(t_inq.inq_update_date,'%y-%m-%d') inq_update_date_yymmdd";						//更新日YY/MM/DD


//	$sql .= "\n  ,if(t_inq.iuq_status_id=".MST_STATUS_ID_NON_COPE.",0,1) order_status";				//状況="未対応"を上位に表示するため。

	$sql .= "\n from";
	$sql .= "\n 	tbl_inquiry t_inq";																									//問合せテーブル
	$sql .= "\n 		left outer join tbl_inquiry_status t_inq_sts on t_inq.inq_inquiry_id = t_inq_sts.inq_sts_inquiry_id";			//問合せ_状況テーブル
	$sql .= "\n 													and t_inq_sts.inq_sts_latest_flag = ".LATEST_FLAG_YES;				//最新フラグ="最新状況"

	$sql .= "\n 		left outer join tbl_user t_usr on t_inq.inq_user_id = t_usr.usr_user_id";										//顧客テーブル
	$sql .= "\n 		left outer join tbl_company t_cmp on t_inq.inq_company_id = t_cmp.cmp_company_id";								//会社テーブル
//	$sql .= "\n 		left outer join tbl_XXX t_XXX on t_inq.inq_justice_id = t_XXX.XXX";												//士業テーブル

	$sql .= "\n 		left outer join mst_inquiry_type m_inq_typ on t_inq.inq_inquiry_type_id = m_inq_typ.id";															//問合せタイプマスタ
	$sql .= "\n 		left outer join mst_inquiry_type_course m_inq_typ_crs on t_inq.inq_inquiry_type_course_id = m_inq_typ_crs.id";										//問合せタイプ_設立コースマスタ
	$sql .= "\n 		left outer join mst_inquiry_type_course_status m_inq_typ_crs_sts on t_inq_sts.inq_sts_inquiry_type_course_status_id = m_inq_typ_crs_sts.id";		//問合せタイプ_設立コース_状況マスタ



	//検索条件を設定する。
	$sql .= "\n where";

	//第2検索条件を追加する。通常の検索条件(第1)とor条件で設定する。→where (第1検索条件) or (第2検索条件)
	if (isset($condition['or'])) {
		$sql .= "\n (";
	}

	$sql .= "\n 1=1";


	//問合せテーブルの条件------------------------
	//問合せID
	if (isset($condition['inq_inquiry_id'])) {
		$buf = null;
		switch (gettype($condition['inq_inquiry_id'])) {
			case 'array':
				foreach ($condition['inq_inquiry_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['inq_inquiry_id'])) {
					$buf .= mysql_real_escape_string($condition['inq_inquiry_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and	t_inq.inq_inquiry_id in (".$buf.")";
		}
	}

	//削除フラグ
	if (isset($condition['inq_del_flag'])) {
		$buf = null;
		switch (gettype($condition['inq_del_flag'])) {
			case 'array':
				foreach ($condition['inq_del_flag'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['inq_del_flag'])) {
					$buf .= mysql_real_escape_string($condition['inq_del_flag']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and	t_inq.inq_del_flag in (".$buf.")";
		}
	}

	//問合せタイプID
	if (isset($condition['inq_inquiry_type_id'])) {
		$buf = null;
		switch (gettype($condition['inq_inquiry_type_id'])) {
			case 'array':
				foreach ($condition['inq_inquiry_type_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['inq_inquiry_type_id'])) {
					$buf .= mysql_real_escape_string($condition['inq_inquiry_type_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and	t_inq.inq_inquiry_type_id in (".$buf.")";
		}
	}

	//問合せタイプ_設立コースID
	if (isset($condition['inq_inquiry_type_course_id'])) {
		$buf = null;
		switch (gettype($condition['inq_inquiry_type_course_id'])) {
			case 'array':
				foreach ($condition['inq_inquiry_type_course_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['inq_inquiry_type_course_id'])) {
					$buf .= mysql_real_escape_string($condition['inq_inquiry_type_course_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and	t_inq.inq_inquiry_type_course_id in (".$buf.")";
		}
	}

	//顧客ID
	if (isset($condition['inq_user_id'])) {
		$buf = null;
		switch (gettype($condition['inq_user_id'])) {
			case 'array':
				foreach ($condition['inq_user_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['inq_user_id'])) {
					$buf .= mysql_real_escape_string($condition['inq_user_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and	t_inq.inq_user_id in (".$buf.")";
		}
	}

	//会社ID
	if (isset($condition['inq_company_id'])) {
		$buf = null;
		switch (gettype($condition['inq_company_id'])) {
			case 'array':
				foreach ($condition['inq_company_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['inq_company_id'])) {
					$buf .= mysql_real_escape_string($condition['inq_company_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and	t_inq.inq_company_id in (".$buf.")";
		}
	}

	//士業ID
	if (isset($condition['inq_justice_id'])) {
		$buf = null;
		switch (gettype($condition['inq_justice_id'])) {
			case 'array':
				foreach ($condition['inq_justice_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['inq_justice_id'])) {
					$buf .= mysql_real_escape_string($condition['inq_justice_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and	t_inq.inq_justice_id in (".$buf.")";
		}
	}

	//作成日
	$ymd = "";
	//作成日From(年)
	if (isset($condition['inq_create_date_year_from']) && !_IsNull($condition['inq_create_date_year_from'])) {
		//作成日From(月)
		if (isset($condition['inq_create_date_month_from']) && !_IsNull($condition['inq_create_date_month_from'])) {
			//作成日From(日)
			if (isset($condition['inq_create_date_day_from']) && !_IsNull($condition['inq_create_date_day_from'])) {
				$ymd = sprintf("%04d%02d%02d", $condition['inq_create_date_year_from'], $condition['inq_create_date_month_from'], $condition['inq_create_date_day_from']);
			} else {
				$ymd = sprintf("%04d%02d%02d", $condition['inq_create_date_year_from'], $condition['inq_create_date_month_from'], 1);
			}
		} else {
			$ymd = sprintf("%04d%02d%02d", $condition['inq_create_date_year_from'], 1, 1);
		}
	}
	if (!_IsNull($ymd)) {
		$sql .= "\n and	date_format(t_inq.inq_create_date,'%Y%m%d') >= '".mysql_real_escape_string($ymd)."'";
	}

	$ymd = "";
	//作成日To(年)
	if (isset($condition['inq_create_date_year_to']) && !_IsNull($condition['inq_create_date_year_to'])) {
		//作成日To(月)
		if (isset($condition['inq_create_date_month_to']) && !_IsNull($condition['inq_create_date_month_to'])) {
			//作成日To(日)
			if (isset($condition['inq_create_date_day_to']) && !_IsNull($condition['inq_create_date_day_to'])) {
				$ymd = sprintf("%04d%02d%02d", $condition['inq_create_date_year_to'], $condition['inq_create_date_month_to'], $condition['inq_create_date_day_to']);
			} else {
				$ymd = sprintf("%04d%02d%02d", $condition['inq_create_date_year_to'], $condition['inq_create_date_month_to'], 31);
			}
		} else {
			$ymd = sprintf("%04d%02d%02d", $condition['inq_create_date_year_to'], 12, 31);
		}
	}
	if (!_IsNull($ymd)) {
		$sql .= "\n and	date_format(t_inq.inq_create_date,'%Y%m%d') <= '".mysql_real_escape_string($ymd)."'";
	}

	//備考
	if (isset($condition['inq_note']) && !_IsNull($condition['inq_note'])) {
		$sql .= "\n and	t_inq.inq_note like '%".mysql_real_escape_string($condition['inq_note'])."%'";
	}


	//問合せ_状況テーブルの条件------------------------
	//問合せタイプ_設立コース_状況ID
	if (isset($condition['inq_sts_inquiry_type_course_status_id'])) {
		$buf = null;
		switch (gettype($condition['inq_sts_inquiry_type_course_status_id'])) {
			case 'array':
				foreach ($condition['inq_sts_inquiry_type_course_status_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['inq_sts_inquiry_type_course_status_id'])) {
					$buf .= mysql_real_escape_string($condition['inq_sts_inquiry_type_course_status_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and	t_inq_sts.inq_sts_inquiry_type_course_status_id in (".$buf.")";
		}
	}


	//顧客テーブルの条件------------------------
	//名前
	if (isset($condition['usr_name']) && !_IsNull($condition['usr_name'])) {
		$sql .= "\n and	t_usr.usr_name like '%".mysql_real_escape_string($condition['usr_name'])."%'";
	}

	//E-Mail
	if (isset($condition['usr_e_mail']) && !_IsNull($condition['usr_e_mail'])) {
		$sql .= "\n and	t_usr.usr_e_mail like '%".mysql_real_escape_string($condition['usr_e_mail'])."%'";
	}




	//第2検索条件を追加する。通常の検索条件(第1)とor条件で設定する。→where (第1検索条件) or (第2検索条件)
	if (isset($condition['or'])) {
		$sql .= "\n )";
		$sql .= "\n or";
		$sql .= "\n (";
		$sql .= "\n 1=1";

		//問合せテーブルの条件------------------------
		//削除フラグ
		if (isset($condition['or']['inq_del_flag'])) {
			$buf = null;
			switch (gettype($condition['or']['inq_del_flag'])) {
				case 'array':
					foreach ($condition['or']['inq_del_flag'] as $value) {
						if (!_IsNull($value)) {
							if (!_IsNull($buf)) $buf .= ",";
							$buf .= mysql_real_escape_string($value);
						}
					}
					break;
				default:
					if (!_IsNull($condition['or']['inq_del_flag'])) {
						$buf .= mysql_real_escape_string($condition['or']['inq_del_flag']);
					}
					break;
			}
			if (!_IsNull($buf)) {
				$sql .= "\n and	t_inq.inq_del_flag in (".$buf.")";
			}
		}

		//問合せ_状況テーブルの条件------------------------
		//問合せタイプ_設立コース_状況ID
		if (isset($condition['or']['inq_sts_inquiry_type_course_status_id'])) {
			$buf = null;
			switch (gettype($condition['or']['inq_sts_inquiry_type_course_status_id'])) {
				case 'array':
					foreach ($condition['or']['inq_sts_inquiry_type_course_status_id'] as $value) {
						if (!_IsNull($value)) {
							if (!_IsNull($buf)) $buf .= ",";
							$buf .= mysql_real_escape_string($value);
						}
					}
					break;
				default:
					if (!_IsNull($condition['or']['inq_sts_inquiry_type_course_status_id'])) {
						$buf .= mysql_real_escape_string($condition['or']['inq_sts_inquiry_type_course_status_id']);
					}
					break;
			}
			if (!_IsNull($buf)) {
				$sql .= "\n and	t_inq_sts.inq_sts_inquiry_type_course_status_id in (".$buf.")";
			}
		}

		$sql .= "\n )";
	}


	if (_IsNull($order)) {
		$order .= "\n  t_inq.inq_create_date desc";		//問合せテーブル.作成日(降順)
		$order .= "\n ,t_inq.inq_inquiry_id desc";		//問合せテーブル.問合せID(降順)
	}

	$sql .= "\n order by";
	$sql .= " ".$order;


	//検索件数のみ場合、以下の条件は不要
	if (!$countOnly) {
		//全件の場合、以下の条件は不要
		if (!_IsNull($showNumberOfOnePage)) {
			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
		}
	}

	_Log("[_GetInquiry] sql='".$sql."'", 2);

	//SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	$list = null;
	$count = null;
	if ($result === false) {
    	_Log("[_GetInquiry] mysql_error='".mysql_error()."'", 1);
    	_Log("[_GetInquiry] mysql_errno='".mysql_errno()."'", 1);
    	_Log("[_GetInquiry] SQL='".$sql."'", 1);
	} else {
		$count = mysql_num_rows($result);
		if (!$countOnly) {
			$list = array();

			//検索結果を配列に格納
			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
				switch ($returnMode) {
					case 2:
						$list[$line['inq_inquiry_id']] = $line;
						break;
					default:
						$list[] = $line;
						break;
				}
			}
			if (count($list) == 0) 	$list = null;
		}
	}

    _Log("[_GetInquiry] 結果(問合せ情報件数)='".$count."'");
    _Log("[_GetInquiry] 結果(問合せ情報)='".print_r($list,true)."'");
    _Log("[_GetInquiry] end.");

	if ($countOnly) {
		return $count;
	} else {
		return $list;
	}

}


/* end   -----------------------------------------------問合せ関連----------------------------------------------- end   */


/* start ------------------------------------------------商品関連------------------------------------------------ start */
/**
 * 商品情報を作成する。
 *
 * @param	mixed   $info		商品情報
 * @return	int		問合せID{false:失敗した場合}
 * @access  public
 * @since   3.2.0
 */
function _CreateItemInfo(&$info) {

	_Log("[_CreateItemInfo] start.");

    _Log("[_CreateItemInfo] (param) 商品情報='".print_r($info,true)."'");

	//IPアドレスを設定する。
	$ip = $_SERVER["REMOTE_ADDR"];
	$date = null;



	//商品情報を登録する。
	_Log("[_CreateItemInfo] {商品情報登録} ============================================================ start");

	//1.商品テーブルに登録する。
	_Log("[_CreateItemInfo] {商品情報登録} 1.商品テーブル情報登録");


	//備考
	//日付置換文字列が入力されている場合、日付に置換する。
	$info['tbl_item']['itm_note'] = str_replace(INQUIRY_NOTE_DATE_REPLACE, date(INQUIRY_NOTE_DATE_FORMAT), $info['tbl_item']['itm_note']);

	$info['tbl_item']['itm_show_flag'] = ((isset($info['tbl_item']['itm_show_flag']) && !_IsNull($info['tbl_item']['itm_show_flag']))?$info['tbl_item']['itm_show_flag']:SHOW_FLAG_YES);	//掲載フラグ
	$info['tbl_item']['itm_del_flag'] = ((isset($info['tbl_item']['itm_del_flag']) && !_IsNull($info['tbl_item']['itm_del_flag']))?$info['tbl_item']['itm_del_flag']:DELETE_FLAG_NO);		//削除フラグ
	$info['tbl_item']['itm_create_ip'] = $ip;			//作成IP
	$info['tbl_item']['itm_create_date'] = $date;		//作成日
	$info['tbl_item']['itm_update_ip'] = $ip;			//更新IP
	$info['tbl_item']['itm_update_date'] = $date;		//更新日
	$itemId = _DB_CreateInfo('tbl_item', $info['tbl_item']);
	if ($itemId === false) {
    	_Log("[_CreateItemInfo] {商品情報登録} {ERROR} 商品テーブル登録に失敗しました。_DB_CreateInfo('tbl_item', xxx) ", 1);
    	_Log("[_CreateItemInfo] {商品情報登録} {ERROR} 商品テーブル情報 = '".print_r($info['tbl_item'],true)."'", 1);
    	_Log("[_CreateItemInfo] {商品情報登録} {ERROR} ※商品関連テーブル(商品_XXXXテーブル)への登録は、商品ID無いため行いません。", 1);
	} else {
		_Log("[_CreateItemInfo] {商品情報登録} 1.→【成功】");


		//2.商品_目的テーブルに登録する。
		_Log("[_CreateItemInfo] {商品情報登録} 2.商品_目的テーブル情報登録");
		if (isset($info['tbl_item_purpose']['itm_pps_purpose_id'])) {
			foreach ($info['tbl_item_purpose']['itm_pps_purpose_id'] as $pKey => $itmPpsPurposeId) {
				$bufInfo = array();
				$bufInfo['itm_pps_item_id'] = $itemId;					//商品ID
				$bufInfo['itm_pps_purpose_id'] = $itmPpsPurposeId;		//目的ID
				$bufInfo['itm_pps_del_flag'] = DELETE_FLAG_NO;			//削除フラグ
				$bufInfo['itm_pps_create_ip'] = $ip;					//作成IP
				$bufInfo['itm_pps_create_date'] = $date;				//作成日
				$bufInfo['itm_pps_update_ip'] = $ip;					//更新IP
				$bufInfo['itm_pps_update_date'] = $date;				//更新日
				$res = _DB_CreateInfo('tbl_item_purpose', $bufInfo);
				if ($res === false) {
					_Log("[_CreateItemInfo] {商品情報登録} {ERROR} 商品_目的テーブル登録に失敗しました。_DB_CreateInfo('tbl_item_purpose', xxx) ", 1);
					_Log("[_CreateItemInfo] {商品情報登録} {ERROR} 商品_目的テーブル情報 = '".print_r($bufInfo,true)."'", 1);
				} else {
					_Log("[_CreateItemInfo] {商品情報登録} 2.→【成功】");
				}
			}
		}

		//3.商品_イベントテーブルに登録する。
		_Log("[_CreateItemInfo] {商品情報登録} 3.商品_イベントテーブル情報登録");
		if (isset($info['tbl_item_event']['itm_evt_event_id'])) {
			foreach ($info['tbl_item_event']['itm_evt_event_id'] as $eKey => $itmEvtEventId) {
				$bufInfo = array();
				$bufInfo['itm_evt_item_id'] = $itemId;					//商品ID
				$bufInfo['itm_evt_event_id'] = $itmEvtEventId;			//イベントID
				$bufInfo['itm_evt_del_flag'] = DELETE_FLAG_NO;			//削除フラグ
				$bufInfo['itm_evt_create_ip'] = $ip;					//作成IP
				$bufInfo['itm_evt_create_date'] = $date;				//作成日
				$bufInfo['itm_evt_update_ip'] = $ip;					//更新IP
				$bufInfo['itm_evt_update_date'] = $date;				//更新日
				$res = _DB_CreateInfo('tbl_item_event', $bufInfo);
				if ($res === false) {
					_Log("[_CreateItemInfo] {商品情報登録} {ERROR} 商品_イベントテーブル登録に失敗しました。_DB_CreateInfo('tbl_item_event', xxx) ", 1);
					_Log("[_CreateItemInfo] {商品情報登録} {ERROR} 商品_イベントテーブル情報 = '".print_r($bufInfo,true)."'", 1);
				} else {
					_Log("[_CreateItemInfo] {商品情報登録} 3.→【成功】");
				}
			}
		}

		//4.商品_詳細テーブルに登録する。
		_Log("[_CreateItemInfo] {商品情報登録} 4.商品_詳細テーブル情報登録");
		if (isset($info['tbl_item_details'])) {

			$itmDtlNo = 0;
			foreach ($info['tbl_item_details'] as $dKey => $tblItemDetailsInfo) {
				//削除フラグ="ON"は、登録しない。
				if (isset($tblItemDetailsInfo['itm_dtl_del_flag']) && $tblItemDetailsInfo['itm_dtl_del_flag'] == DELETE_FLAG_YES) {
					_Log("[_CreateItemInfo] {商品情報登録} 4.→削除フラグ=\"ON\"は、登録しない。");
					continue;
				}
				//以下の項目が全て未入力の場合、登録しない。
				$createFlag = false;
				//入力項目タイプID
				if (isset($tblItemDetailsInfo['itm_dtl_input_type_id']) && !_IsNull($tblItemDetailsInfo['itm_dtl_input_type_id'])) $createFlag = true;
				//入力項目必須ID
				if (isset($tblItemDetailsInfo['itm_dtl_input_required_id']) && !_IsNull($tblItemDetailsInfo['itm_dtl_input_required_id'])) $createFlag = true;
				//タイトル
				if (isset($tblItemDetailsInfo['itm_dtl_title']) && !_IsNull($tblItemDetailsInfo['itm_dtl_title'])) $createFlag = true;
				if (!$createFlag) {
					_Log("[_CreateItemInfo] {商品情報登録} 4.→必須項目が全て未入力の場合、登録しない。");
					continue;
				}
				$itmDtlNo++;

				$tblItemDetailsInfo['itm_dtl_item_id'] = $itemId;					//商品ID
				$tblItemDetailsInfo['itm_dtl_no'] = $itmDtlNo;						//No
				$tblItemDetailsInfo['itm_dtl_del_flag'] = DELETE_FLAG_NO;			//削除フラグ
				$tblItemDetailsInfo['itm_dtl_create_ip'] = $ip;						//作成IP
				$tblItemDetailsInfo['itm_dtl_create_date'] = $date;					//作成日
				$tblItemDetailsInfo['itm_dtl_update_ip'] = $ip;						//更新IP
				$tblItemDetailsInfo['itm_dtl_update_date'] = $date;					//更新日
				$res = _DB_CreateInfo('tbl_item_details', $tblItemDetailsInfo);
				if ($res === false) {
					_Log("[_CreateItemInfo] {商品情報登録} {ERROR} 商品_詳細テーブル登録に失敗しました。_DB_CreateInfo('tbl_item_details', xxx) ", 1);
					_Log("[_CreateItemInfo] {商品情報登録} {ERROR} 商品_詳細テーブル情報 = '".print_r($tblItemDetailsInfo,true)."'", 1);
					_Log("[_CreateItemInfo] {商品情報登録} {ERROR} ※商品_詳細関連テーブル(商品_詳細_XXXXテーブル)への登録は、No無いため行いません。", 1);
				} else {
					_Log("[_CreateItemInfo] {商品情報登録} 4.→【成功】");

					//4-1.商品_詳細_値テーブルに登録する。
					_Log("[_CreateItemInfo] {商品情報登録} 4-1.商品_詳細_値テーブル情報登録");
					if (isset($tblItemDetailsInfo['tbl_item_details_value'])) {
						$itmDtlValNo = 0;
						foreach ($tblItemDetailsInfo['tbl_item_details_value'] as $dvKey => $tblItemDetailsValueInfo) {
							//削除フラグ="ON"は、登録しない。
							if (isset($tblItemDetailsValueInfo['itm_dtl_val_del_flag']) && $tblItemDetailsValueInfo['itm_dtl_val_del_flag'] == DELETE_FLAG_YES) {
								_Log("[_CreateItemInfo] {商品情報登録} 4-1.→削除フラグ=\"ON\"は、登録しない。");
								continue;
							}
							//以下の項目が全て未入力の場合、登録しない。
							$createFlag = false;
							//値
							if (isset($tblItemDetailsValueInfo['itm_dtl_val_value']) && !_IsNull($tblItemDetailsValueInfo['itm_dtl_val_value'])) $createFlag = true;
							if (!$createFlag) {
								_Log("[_CreateItemInfo] {商品情報登録} 4-1.→必須項目が全て未入力の場合、登録しない。");
								continue;
							}

							$itmDtlValNo++;

							$tblItemDetailsValueInfo['itm_dtl_val_item_id'] = $itemId;					//商品ID
							$tblItemDetailsValueInfo['itm_dtl_val_details_no'] = $itmDtlNo;				//詳細No
							$tblItemDetailsValueInfo['itm_dtl_val_no'] = $itmDtlValNo;					//No
							$tblItemDetailsValueInfo['itm_dtl_val_del_flag'] = DELETE_FLAG_NO;			//削除フラグ
							$tblItemDetailsValueInfo['itm_dtl_val_create_ip'] = $ip;					//作成IP
							$tblItemDetailsValueInfo['itm_dtl_val_create_date'] = $date;				//作成日
							$tblItemDetailsValueInfo['itm_dtl_val_update_ip'] = $ip;					//更新IP
							$tblItemDetailsValueInfo['itm_dtl_val_update_date'] = $date;				//更新日
							$res = _DB_CreateInfo('tbl_item_details_value', $tblItemDetailsValueInfo);
							if ($res === false) {
								_Log("[_CreateItemInfo] {商品情報登録} {ERROR} 商品_詳細_値テーブル登録に失敗しました。_DB_CreateInfo('tbl_item_details_value', xxx) ", 1);
								_Log("[_CreateItemInfo] {商品情報登録} {ERROR} 商品_詳細_値テーブル情報 = '".print_r($tblItemDetailsValueInfo,true)."'", 1);
							} else {
								_Log("[_CreateItemInfo] {商品情報登録} 4-1.→【成功】");
							}
						}
					}
				}
			}
		}


		//5.商品_画像テーブルに登録する。
		_Log("[_CreateItemInfo] {商品情報登録} 5.商品_画像テーブル情報登録");
		if (isset($info['tbl_item_image'])) {

			$itmImgNo = 0;
			foreach ($info['tbl_item_image'] as $iKey => $tblItemImageInfo) {

				$bufInfo = array();
				//削除フラグ="ON"は、空データを登録する。
				if (isset($tblItemImageInfo['itm_img_del_flag']) && $tblItemImageInfo['itm_img_del_flag'] == DELETE_FLAG_YES) {
					_Log("[_CreateItemInfo] {商品情報登録} 5.→削除フラグ=\"ON\"は、空データを登録する。");
				} else {
					$bufInfo = $tblItemImageInfo;
				}

				$itmImgNo++;

				$bufInfo['itm_img_item_id'] = $itemId;				//商品ID
				$bufInfo['itm_img_no'] = $itmImgNo;					//No
				$bufInfo['itm_img_del_flag'] = DELETE_FLAG_NO;		//削除フラグ
				$bufInfo['itm_img_create_ip'] = $ip;				//作成IP
				$bufInfo['itm_img_create_date'] = $date;			//作成日
				$bufInfo['itm_img_update_ip'] = $ip;				//更新IP
				$bufInfo['itm_img_update_date'] = $date;			//更新日
				$res = _DB_CreateInfo('tbl_item_image', $bufInfo);
				if ($res === false) {
					_Log("[_CreateItemInfo] {商品情報登録} {ERROR} 商品_画像テーブル登録に失敗しました。_DB_CreateInfo('tbl_item_image', xxx) ", 1);
					_Log("[_CreateItemInfo] {商品情報登録} {ERROR} 商品_画像テーブル情報 = '".print_r($bufInfo,true)."'", 1);
				} else {
					_Log("[_CreateItemInfo] {商品情報登録} 5.→【成功】");
				}
			}
		}
	}

	_Log("[_CreateItemInfo] {商品情報登録} ============================================================ end");

	_Log("[_CreateItemInfo] 結果-商品ID = '".$itemId."'");
	_Log("[_CreateItemInfo] 結果-商品情報='".print_r($info,true)."'");

	_Log("[_CreateItemInfo] end.");

	return $itemId;

}


/**
 * 商品情報を更新する。
 *
 * @param	mixed   $info		商品情報
 * @return	int		商品ID{false:失敗した場合}
 * @access  public
 * @since   3.2.0
 */
function _SaveItemInfo(&$info) {

	_Log("[_SaveItemInfo] start.");

    _Log("[_SaveItemInfo] (param) 商品情報='".print_r($info,true)."'");

	//IPアドレスを設定する。
	$ip = $_SERVER["REMOTE_ADDR"];
	$date = null;

	$itemId = false;

	//商品情報を登録する。
	_Log("[_SaveItemInfo] {商品情報更新} ============================================================ start");

	//1.商品テーブルを更新する。
	_Log("[_SaveItemInfo] {商品情報更新} 1.商品テーブル情報更新");

	//備考
	//日付置換文字列が入力されている場合、日付に置換する。
	$info['tbl_item']['itm_note'] = str_replace(INQUIRY_NOTE_DATE_REPLACE, date(INQUIRY_NOTE_DATE_FORMAT), $info['tbl_item']['itm_note']);

	$info['tbl_item']['itm_show_flag'] = ((isset($info['tbl_item']['itm_show_flag']) && !_IsNull($info['tbl_item']['itm_show_flag']))?$info['tbl_item']['itm_show_flag']:SHOW_FLAG_YES);	//掲載フラグ
	$info['tbl_item']['itm_del_flag'] = ((isset($info['tbl_item']['itm_del_flag']) && !_IsNull($info['tbl_item']['itm_del_flag']))?$info['tbl_item']['itm_del_flag']:DELETE_FLAG_NO);		//削除フラグ
	$info['tbl_item']['itm_update_ip'] = $ip;				//更新IP
	$info['tbl_item']['itm_update_date'] = $date;			//更新日
	unset($info['tbl_item']['itm_create_ip']);				//作成IP
	unset($info['tbl_item']['itm_create_date']);			//作成日
	$res = _DB_SaveInfo('tbl_item', $info['tbl_item']);
	if ($res === false) {
    	_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品テーブル更新に失敗しました。_DB_SaveInfo('tbl_item', xxx) ", 1);
    	_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品テーブル情報 = '".print_r($info['tbl_item'],true)."'", 1);
	} else {
		_Log("[_SaveItemInfo] {商品情報更新} 1.→【成功】");
	}

	//商品IDを設定する。
	$itemId = $info['tbl_item']['itm_item_id'];


	//2.商品_目的テーブルを更新する。(削除→登録)
	_Log("[_SaveItemInfo] {商品情報更新} 2.商品_目的テーブル情報更新");
	//削除する。
	$condition = array();
	$condition['itm_pps_item_id'] = $itemId;//商品ID
	$res = _DB_DeleteInfo('tbl_item_purpose', $condition);
	if ($res === false) {
    	_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_目的テーブル削除に失敗しました。_DB_DeleteInfo('tbl_item_purpose', xxx) ", 1);
    	_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 削除条件 = '".print_r($condition,true)."'", 1);
	} else {
		_Log("[_SaveItemInfo] {商品情報更新} 2-1.→【削除成功】");
	}
	//登録する。
	if (isset($info['tbl_item_purpose']['itm_pps_purpose_id'])) {
		foreach ($info['tbl_item_purpose']['itm_pps_purpose_id'] as $pKey => $itmPpsPurposeId) {
			$bufInfo = array();
			$bufInfo['itm_pps_item_id'] = $itemId;					//商品ID
			$bufInfo['itm_pps_purpose_id'] = $itmPpsPurposeId;		//目的ID
			$bufInfo['itm_pps_del_flag'] = DELETE_FLAG_NO;			//削除フラグ
			$bufInfo['itm_pps_create_ip'] = $ip;					//作成IP
			$bufInfo['itm_pps_create_date'] = $date;				//作成日
			$bufInfo['itm_pps_update_ip'] = $ip;					//更新IP
			$bufInfo['itm_pps_update_date'] = $date;				//更新日
			$res = _DB_CreateInfo('tbl_item_purpose', $bufInfo);
			if ($res === false) {
				_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_目的テーブル更新に失敗しました。_DB_CreateInfo('tbl_item_purpose', xxx) ", 1);
				_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_目的テーブル情報 = '".print_r($bufInfo,true)."'", 1);
			} else {
				_Log("[_SaveItemInfo] {商品情報更新} 2-2.→【登録成功】");
			}
		}
	}

	//3.商品_イベントテーブルを更新する。(削除→登録)
	_Log("[_SaveItemInfo] {商品情報更新} 3.商品_イベントテーブル情報更新");
	//削除する。
	$condition = array();
	$condition['itm_evt_item_id'] = $itemId;//商品ID
	$res = _DB_DeleteInfo('tbl_item_event', $condition);
	if ($res === false) {
    	_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_イベントテーブル削除に失敗しました。_DB_DeleteInfo('tbl_item_event', xxx) ", 1);
    	_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 削除条件 = '".print_r($condition,true)."'", 1);
	} else {
		_Log("[_SaveItemInfo] {商品情報更新} 3-1.→【削除成功】");
	}
	//登録する。
	if (isset($info['tbl_item_event']['itm_evt_event_id'])) {
		foreach ($info['tbl_item_event']['itm_evt_event_id'] as $eKey => $itmEvtEventId) {
			$bufInfo = array();
			$bufInfo['itm_evt_item_id'] = $itemId;					//商品ID
			$bufInfo['itm_evt_event_id'] = $itmEvtEventId;			//イベントID
			$bufInfo['itm_evt_del_flag'] = DELETE_FLAG_NO;			//削除フラグ
			$bufInfo['itm_evt_create_ip'] = $ip;					//作成IP
			$bufInfo['itm_evt_create_date'] = $date;				//作成日
			$bufInfo['itm_evt_update_ip'] = $ip;					//更新IP
			$bufInfo['itm_evt_update_date'] = $date;				//更新日
			$res = _DB_CreateInfo('tbl_item_event', $bufInfo);
			if ($res === false) {
				_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_イベントテーブル更新に失敗しました。_DB_CreateInfo('tbl_item_event', xxx) ", 1);
				_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_イベントテーブル情報 = '".print_r($bufInfo,true)."'", 1);
			} else {
				_Log("[_SaveItemInfo] {商品情報更新} 3-2.→【登録成功】");
			}
		}
	}


	//4.商品_詳細テーブルを更新する。(削除→登録)
	_Log("[_SaveItemInfo] {商品情報更新} 4.商品_詳細テーブル情報更新");
	//削除する。
	$condition = array();
	$condition['itm_dtl_item_id'] = $itemId;//商品ID
	$res = _DB_DeleteInfo('tbl_item_details', $condition);
	if ($res === false) {
    	_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_詳細テーブル削除に失敗しました。_DB_DeleteInfo('tbl_item_details', xxx) ", 1);
    	_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 削除条件 = '".print_r($condition,true)."'", 1);
	} else {
		_Log("[_SaveItemInfo] {商品情報更新} 4(del).→【削除成功】");
	}
	$condition = array();
	$condition['itm_dtl_val_item_id'] = $itemId;//商品ID
	$res = _DB_DeleteInfo('tbl_item_details_value', $condition);
	if ($res === false) {
    	_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_詳細_値テーブル削除に失敗しました。_DB_DeleteInfo('tbl_item_details_value', xxx) ", 1);
    	_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 削除条件 = '".print_r($condition,true)."'", 1);
	} else {
		_Log("[_SaveItemInfo] {商品情報更新} 4-1(del).→【削除成功】");
	}
	//登録する。
	if (isset($info['tbl_item_details'])) {

		$itmDtlNo = 0;
		foreach ($info['tbl_item_details'] as $dKey => $tblItemDetailsInfo) {
			//削除フラグ="ON"は、登録しない。
			if (isset($tblItemDetailsInfo['itm_dtl_del_flag']) && $tblItemDetailsInfo['itm_dtl_del_flag'] == DELETE_FLAG_YES) {
				_Log("[_SaveItemInfo] {商品情報更新} 4.→削除フラグ=\"ON\"は、登録しない。");
				continue;
			}
			//以下の項目が全て未入力の場合、登録しない。
			$createFlag = false;
			//入力項目タイプID
			if (isset($tblItemDetailsInfo['itm_dtl_input_type_id']) && !_IsNull($tblItemDetailsInfo['itm_dtl_input_type_id'])) $createFlag = true;
			//入力項目必須ID
			if (isset($tblItemDetailsInfo['itm_dtl_input_required_id']) && !_IsNull($tblItemDetailsInfo['itm_dtl_input_required_id'])) $createFlag = true;
			//タイトル
			if (isset($tblItemDetailsInfo['itm_dtl_title']) && !_IsNull($tblItemDetailsInfo['itm_dtl_title'])) $createFlag = true;
			if (!$createFlag) {
				_Log("[_SaveItemInfo] {商品情報更新} 4.→必須項目が全て未入力の場合、登録しない。");
				continue;
			}
			$itmDtlNo++;

			$tblItemDetailsInfo['itm_dtl_item_id'] = $itemId;					//商品ID
			$tblItemDetailsInfo['itm_dtl_no'] = $itmDtlNo;						//No
			$tblItemDetailsInfo['itm_dtl_del_flag'] = DELETE_FLAG_NO;			//削除フラグ
			$tblItemDetailsInfo['itm_dtl_create_ip'] = $ip;						//作成IP
			$tblItemDetailsInfo['itm_dtl_create_date'] = $date;					//作成日
			$tblItemDetailsInfo['itm_dtl_update_ip'] = $ip;						//更新IP
			$tblItemDetailsInfo['itm_dtl_update_date'] = $date;					//更新日
			$res = _DB_CreateInfo('tbl_item_details', $tblItemDetailsInfo);
			if ($res === false) {
				_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_詳細テーブル更新に失敗しました。_DB_CreateInfo('tbl_item_details', xxx) ", 1);
				_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_詳細テーブル情報 = '".print_r($tblItemDetailsInfo,true)."'", 1);
				_Log("[_SaveItemInfo] {商品情報更新} {ERROR} ※商品_詳細関連テーブル(商品_詳細_XXXXテーブル)への更新は、No無いため行いません。", 1);
			} else {
				_Log("[_SaveItemInfo] {商品情報更新} 4.→【登録成功】");

				//4-1.商品_詳細_値テーブルを更新する。
				_Log("[_SaveItemInfo] {商品情報更新} 4-1.商品_詳細_値テーブル情報更新");
				if (isset($tblItemDetailsInfo['tbl_item_details_value'])) {
					$itmDtlValNo = 0;
					foreach ($tblItemDetailsInfo['tbl_item_details_value'] as $dvKey => $tblItemDetailsValueInfo) {
						//削除フラグ="ON"は、登録しない。
						if (isset($tblItemDetailsValueInfo['itm_dtl_val_del_flag']) && $tblItemDetailsValueInfo['itm_dtl_val_del_flag'] == DELETE_FLAG_YES) {
							_Log("[_SaveItemInfo] {商品情報更新} 4-1.→削除フラグ=\"ON\"は、登録しない。");
							continue;
						}
						//以下の項目が全て未入力の場合、登録しない。
						$createFlag = false;
						//値
						if (isset($tblItemDetailsValueInfo['itm_dtl_val_value']) && !_IsNull($tblItemDetailsValueInfo['itm_dtl_val_value'])) $createFlag = true;
						if (!$createFlag) {
							_Log("[_SaveItemInfo] {商品情報更新} 4-1.→必須項目が全て未入力の場合、登録しない。");
							continue;
						}

						//価格の全角数字は、半角数字に変換する。
						$tblItemDetailsValueInfo['itm_dtl_val_price'] = mb_convert_kana($tblItemDetailsValueInfo['itm_dtl_val_price'], 'n');

						$itmDtlValNo++;

						$tblItemDetailsValueInfo['itm_dtl_val_item_id'] = $itemId;					//商品ID
						$tblItemDetailsValueInfo['itm_dtl_val_details_no'] = $itmDtlNo;				//詳細No
						$tblItemDetailsValueInfo['itm_dtl_val_no'] = $itmDtlValNo;					//No
						$tblItemDetailsValueInfo['itm_dtl_val_del_flag'] = DELETE_FLAG_NO;			//削除フラグ
						$tblItemDetailsValueInfo['itm_dtl_val_create_ip'] = $ip;					//作成IP
						$tblItemDetailsValueInfo['itm_dtl_val_create_date'] = $date;				//作成日
						$tblItemDetailsValueInfo['itm_dtl_val_update_ip'] = $ip;					//更新IP
						$tblItemDetailsValueInfo['itm_dtl_val_update_date'] = $date;				//更新日
						$res = _DB_CreateInfo('tbl_item_details_value', $tblItemDetailsValueInfo);
						if ($res === false) {
							_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_詳細_値テーブル更新に失敗しました。_DB_CreateInfo('tbl_item_details_value', xxx) ", 1);
							_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_詳細_値テーブル情報 = '".print_r($tblItemDetailsValueInfo,true)."'", 1);
						} else {
							_Log("[_SaveItemInfo] {商品情報更新} 4-1.→【登録成功】");
						}
					}
				}
			}
		}
	}


	//5.商品_画像テーブルを更新する。
	_Log("[_SaveItemInfo] {商品情報登録} 5.商品_画像テーブル情報更新");
	//削除する。
	$condition = array();
	$condition['itm_img_item_id'] = $itemId;//商品ID
	$res = _DB_DeleteInfo('tbl_item_image', $condition);
	if ($res === false) {
    	_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_画像テーブル削除に失敗しました。_DB_DeleteInfo('tbl_item_image', xxx) ", 1);
    	_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 削除条件 = '".print_r($condition,true)."'", 1);
	} else {
		_Log("[_SaveItemInfo] {商品情報更新} 5-1.→【削除成功】");
	}
	//登録する。
	if (isset($info['tbl_item_image'])) {

		$itmImgNo = 0;
		foreach ($info['tbl_item_image'] as $iKey => $tblItemImageInfo) {

			$bufInfo = array();
			//削除フラグ="ON"は、空データを登録する。
			if (isset($tblItemImageInfo['itm_img_del_flag']) && $tblItemImageInfo['itm_img_del_flag'] == DELETE_FLAG_YES) {
				_Log("[_SaveItemInfo] {商品情報更新} 5.→削除フラグ=\"ON\"は、空データを登録する。");
			} else {
				$bufInfo = $tblItemImageInfo;
			}

			$itmImgNo++;

			$bufInfo['itm_img_item_id'] = $itemId;				//商品ID
			$bufInfo['itm_img_no'] = $itmImgNo;					//No
			$bufInfo['itm_img_del_flag'] = DELETE_FLAG_NO;		//削除フラグ
			$bufInfo['itm_img_create_ip'] = $ip;				//作成IP
			$bufInfo['itm_img_create_date'] = $date;			//作成日
			$bufInfo['itm_img_update_ip'] = $ip;				//更新IP
			$bufInfo['itm_img_update_date'] = $date;			//更新日
			$res = _DB_CreateInfo('tbl_item_image', $bufInfo);
			if ($res === false) {
				_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_画像テーブル更新に失敗しました。_DB_CreateInfo('tbl_item_image', xxx) ", 1);
				_Log("[_SaveItemInfo] {商品情報更新} {ERROR} 商品_画像テーブル情報 = '".print_r($bufInfo,true)."'", 1);
			} else {
				_Log("[_SaveItemInfo] {商品情報更新} 5-1.→【登録成功】");
			}
		}
	}

	_Log("[_SaveItemInfo] {商品情報更新} ============================================================ end");

	_Log("[_SaveItemInfo] 結果 = '".$itemId."'");
    _Log("[_SaveItemInfo] end.");

	return $itemId;

}




/**
 * 商品情報を取得する。
 *
 * @param	int   	$itemId				商品ID
 * @param	boolean	$undeleteOnly		未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @param	boolean	$getItem			商品テーブル情報取得を取得するか？{true:取得する/false:取得しない}
 * @param	boolean	$getItemDetails		商品_詳細テーブル情報取得を取得するか？{true:取得する/false:取得しない}
 * @param	boolean	$getItemPurpose		商品_目的テーブル情報取得を取得するか？{true:取得する/false:取得しない}
 * @param	boolean	$getItemEvent		商品_イベントテーブル情報取得を取得するか？{true:取得する/false:取得しない}
 * @param	boolean	$getItemImage		商品_画像テーブル情報取得を取得するか？{true:取得する/false:取得しない}
 * @return	mixed	商品情報{null:取得できなかった場合}
 * @access  public
 * @since   3.2.0
 */
function _GetItemInfo($itemId, $undeleteOnly = true, $getItem = true, $getItemDetails = true, $getItemPurpose = true, $getItemEvent = true, $getItemImage = true) {

	_Log("[_GetItemInfo] start.");

    _Log("[_GetItemInfo] (param) 商品ID = '".$itemId."'");
    _Log("[_GetItemInfo] (param) 未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象} = '".$undeleteOnly."'");
    _Log("[_GetItemInfo] (param) 商品テーブル情報取得を取得するか？ = '".$getItem."'");
    _Log("[_GetItemInfo] (param) 商品_詳細テーブル情報取得を取得するか？ = '".$getItemDetails."'");
    _Log("[_GetItemInfo] (param) 商品_目的テーブル情報取得を取得するか？ = '".$getItemPurpose."'");
    _Log("[_GetItemInfo] (param) 商品_イベントテーブル情報取得を取得するか？ = '".$getItemEvent."'");
    _Log("[_GetItemInfo] (param) 商品_画像テーブル情報取得を取得するか？ = '".$getItemImage."'");

    if (_IsNull($itemId)) {
    	_Log("[_GetItemInfo] ItemId is null.");
    	_Log("[_GetItemInfo] end.");
		return null;
    }


	//商品情報を取得する。
	_Log("[_GetItemInfo] {商品情報取得} ============================================================ start");

	//商品テーブル
	//
	//1.商品テーブルを検索する。
	_Log("[_GetItemInfo] {商品情報取得} 1.商品テーブル情報取得");
	$condition = array();
	$condition['itm_item_id'] = $itemId;
	$tblItemInfo = _DB_GetInfo('tbl_item', $condition, $undeleteOnly, 'itm_del_flag');
	if (_IsNull($tblItemInfo)) {
    	_Log("[_GetItemInfo] _DB_GetInfo('tbl_item', \$condition, \$undeleteOnly, 'itm_del_flag') is null.");
    	_Log("[_GetItemInfo] end.");
		return null;
	}

	if ($getItem) {
	} else {
		$tblItemInfo = null;
	}

	//2.商品_目的テーブルを検索する。
	_Log("[_GetItemInfo] {商品情報取得} 2.商品_目的テーブル情報取得");
	$tblItemPurposeList = null;
	if ($getItemPurpose) {
		$condition = array();
		$condition['itm_pps_item_id'] = $itemId;
		$order = null;
		$order .= "itm_pps_purpose_id";						//目的IDの昇順
		$tblItemPurposeList = _DB_GetList('tbl_item_purpose', $condition, true, $order);
		//詰め替えをする。
		if (!_IsNull($tblItemPurposeList)) {
			$bufList = array();
			foreach ($tblItemPurposeList as $key => $info) {
				$bufList['itm_pps_purpose_id'][] = $info['itm_pps_purpose_id'];
			}
			$tblItemPurposeList = $bufList;
		}

	}

	//3.商品_イベントテーブルを検索する。
	_Log("[_GetItemInfo] {商品情報取得} 3.商品_イベントテーブル情報取得");
	$tblItemEventList = null;
	if ($getItemEvent) {
		$condition = array();
		$condition['itm_evt_item_id'] = $itemId;
		$order = null;
		$order .= "itm_evt_event_id";						//イベントIDの昇順
		$tblItemEventList = _DB_GetList('tbl_item_event', $condition, true, $order);
		//詰め替えをする。
		if (!_IsNull($tblItemEventList)) {
			$bufList = array();
			foreach ($tblItemEventList as $key => $info) {
				$bufList['itm_evt_event_id'][] = $info['itm_evt_event_id'];
			}
			$tblItemEventList = $bufList;
		}
	}

	//4.商品_詳細テーブルを検索する。
	_Log("[_GetItemInfo] {商品情報取得} 4.商品_詳細テーブル情報取得");
	$tblItemDetailsList = null;
	if ($getItemDetails) {
		$condition = array();
		$condition['itm_dtl_item_id'] = $itemId;
		$order = null;
		$order .= "lpad(itm_dtl_show_order,10,'0')";		//表示順の昇順
		$order .= ",itm_dtl_no";							//Noの昇順
		$tblItemDetailsList = _DB_GetList('tbl_item_details', $condition, true, $order);
		if (!_IsNull($tblItemDetailsList)) {
			foreach ($tblItemDetailsList as $key => $info) {

				//4-1.商品_詳細_値テーブルを検索する。
				_Log("[_GetItemInfo] {商品情報取得} 4-1.商品_詳細_値テーブル情報取得");
				$condition = array();
				$condition['itm_dtl_val_item_id'] = $itemId;					//商品ID
				$condition['itm_dtl_val_details_no'] = $info['itm_dtl_no'];		//詳細No

				$order = null;
				$order .= "lpad(itm_dtl_val_show_order,10,'0')";	//表示順の昇順
				$order .= ",itm_dtl_val_no";						//Noの昇順
				$tblItemDetailsValueList = _DB_GetList('tbl_item_details_value', $condition, true, $order);

				//商品_詳細テーブル情報に商品_詳細_値テーブル情報を追加する。
				$tblItemDetailsList[$key]['tbl_item_details_value'] = $tblItemDetailsValueList;
			}
		}
	}

	//5.商品_画像テーブルを検索する。
	_Log("[_GetItemInfo] {商品情報取得} 6.商品_画像テーブルテーブル情報取得");
	$tblItemImageList = null;
	if ($getItemImage) {
		$condition = array();
		$condition['itm_img_item_id'] = $itemId;
		$order = null;
		$order .= "lpad(itm_img_show_order,10,'0')";		//表示順の昇順
		$order .= ",itm_img_no";							//Noの昇順
		$tblItemImageList = _DB_GetList('tbl_item_image', $condition, true, $order);
	}


	//配列に設定する。
	$resList = array();
	$resList['tbl_item'] = $tblItemInfo;											//1.商品テーブル
	$resList['tbl_item_purpose'] = $tblItemPurposeList;								//2.商品_目的テーブル
	$resList['tbl_item_event'] = $tblItemEventList;									//3.商品_イベントテーブル
	$resList['tbl_item_details'] = $tblItemDetailsList;								//4.商品_詳細テーブル+商品_詳細_値テーブル
	$resList['tbl_item_image'] = $tblItemImageList;									//5.商品_画像テーブル

	_Log("[_GetItemInfo] {商品情報取得} 結果 = '".print_r($resList,true)."'");
	_Log("[_GetItemInfo] {商品情報取得} ============================================================ end");

	_Log("[_GetItemInfo] end.");
	return $resList;
}



/**
 * 商品情報を検索する。
 *
 * @param	mixed   $condition				検索条件
 * @param	string	$order					ソート条件
 * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
 * @param	int		$activePage				表示するページ
 * @param	int		$showNumberOfOnePage	1ページの表示件数
 * @param	int		$returnMode				返り値配列の格納モード{1:通常(添字0~Nの1次元配列)/2:カテゴリー毎([カテゴリーID][商品ID]の2次元配列)/3:サブカテゴリー毎([サブカテゴリーID][商品ID]の2次元配列)}
 * @return	array	商品情報情報(取得できなかった場合はnull。)
 * @access  public
 * @since   3.2.0
 */
function _GetItem($condition = null, $order = null, $undeleteOnly = true, $countOnly = false, $activePage = 1, $showNumberOfOnePage = null, $returnMode = 1) {

	_Log("[_GetItem] start.");

    _Log("[_GetItem] (param) 検索条件='".print_r($condition,true)."'");
    _Log("[_GetItem] (param) ソート条件='".$order."'");
    _Log("[_GetItem] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
    _Log("[_GetItem] (param) 表示するページ='".$activePage."'");
    _Log("[_GetItem] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
    _Log("[_GetItem] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
    _Log("[_GetItem] (param) 返り値配列の格納モード{1:通常(添字0~Nの1次元配列)/2:カテゴリー毎([カテゴリーID][商品ID]の2次元配列)/3:サブカテゴリー毎([サブカテゴリーID][商品ID]の2次元配列)}='".$returnMode."'");

	//SQLを作成する。
	$sql = "";
	$sql .= "\n select";
	$sql .= "\n   t_itm.*";																						//商品テーブル
	$sql .= "\n  ,m_ctg.name itm_category_name";																//カテゴリー名
	$sql .= "\n  ,m_sbc.name itm_subcategory_name";																//サブカテゴリー名

	$sql .= "\n  ,date_format(t_itm.itm_create_date,'%Y-%m-%d %H:%i:%s') itm_create_date_yyyymmddhhmmss";		//作成日YYYY/MM/DD hh:mm:ss
	$sql .= "\n  ,date_format(t_itm.itm_create_date,'%Y-%m-%d') itm_create_date_yyyymmdd";						//作成日YYYY/MM/DD
	$sql .= "\n  ,date_format(t_itm.itm_create_date,'%y-%m-%d') itm_create_date_yymmdd";						//作成日YY/MM/DD
	$sql .= "\n  ,date_format(t_itm.itm_update_date,'%Y-%m-%d %H:%i:%s') itm_update_date_yyyymmddhhmmss";		//更新日YYYY/MM/DD hh:mm:ss
	$sql .= "\n  ,date_format(t_itm.itm_update_date,'%Y-%m-%d') itm_update_date_yyyymmdd";						//更新日YYYY/MM/DD
	$sql .= "\n  ,date_format(t_itm.itm_update_date,'%y-%m-%d') itm_update_date_yymmdd";						//更新日YY/MM/DD

	$sql .= "\n  ,rand() rand_order";																			//ランダム検索用

	$sql .= "\n from";
	$sql .= "\n 	tbl_item t_itm";																			//商品テーブル
	$sql .= "\n 		left outer join mst_category m_ctg on t_itm.itm_category_id = m_ctg.id";				//カテゴリーマスタ
	$sql .= "\n 		left outer join mst_subcategory m_sbc on t_itm.itm_subcategory_id = m_sbc.id";			//サブカテゴリーマスタ


	//検索条件を設定する。
	$sql .= "\n where";
	$sql .= "\n 1=1";

	//商品テーブルの条件------------------------

	//削除フラグ
	if ($undeleteOnly) {
		$sql .= "\n and	t_itm.itm_del_flag = ".DELETE_FLAG_NO."";
	}

	//商品ID
	if (isset($condition['itm_item_id'])) {
		$buf = null;
		switch (gettype($condition['itm_item_id'])) {
			case 'array':
				foreach ($condition['itm_item_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['itm_item_id'])) {
					$buf .= mysql_real_escape_string($condition['itm_item_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and	t_itm.itm_item_id in (".$buf.")";
		}
	}

	//カテゴリーID
	if (isset($condition['itm_category_id'])) {
		$buf = null;
		switch (gettype($condition['itm_category_id'])) {
			case 'array':
				foreach ($condition['itm_category_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['itm_category_id'])) {
					$buf .= mysql_real_escape_string($condition['itm_category_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and	t_itm.itm_category_id in (".$buf.")";
		}
	}

	//サブカテゴリーID
	if (isset($condition['itm_subcategory_id'])) {
		$buf = null;
		switch (gettype($condition['itm_subcategory_id'])) {
			case 'array':
				foreach ($condition['itm_subcategory_id'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['itm_subcategory_id'])) {
					$buf .= mysql_real_escape_string($condition['itm_subcategory_id']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and	t_itm.itm_subcategory_id in (".$buf.")";
		}
	}


	//掲載フラグ
	if (isset($condition['itm_show_flag'])) {
		$buf = null;
		switch (gettype($condition['itm_show_flag'])) {
			case 'array':
				foreach ($condition['itm_show_flag'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['itm_show_flag'])) {
					$buf .= mysql_real_escape_string($condition['itm_show_flag']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and	t_itm.itm_show_flag in (".$buf.")";
		}
	}

	//削除フラグ
	if (isset($condition['itm_del_flag'])) {
		$buf = null;
		switch (gettype($condition['itm_del_flag'])) {
			case 'array':
				foreach ($condition['itm_del_flag'] as $value) {
					if (!_IsNull($value)) {
						if (!_IsNull($buf)) $buf .= ",";
						$buf .= mysql_real_escape_string($value);
					}
				}
				break;
			default:
				if (!_IsNull($condition['itm_del_flag'])) {
					$buf .= mysql_real_escape_string($condition['itm_del_flag']);
				}
				break;
		}
		if (!_IsNull($buf)) {
			$sql .= "\n and	t_itm.itm_del_flag in (".$buf.")";
		}
	}


	//作成日
	$ymd = "";
	//作成日From(年)
	if (isset($condition['itm_create_date_year_from']) && !_IsNull($condition['itm_create_date_year_from'])) {
		//作成日From(月)
		if (isset($condition['itm_create_date_month_from']) && !_IsNull($condition['itm_create_date_month_from'])) {
			//作成日From(日)
			if (isset($condition['itm_create_date_day_from']) && !_IsNull($condition['itm_create_date_day_from'])) {
				$ymd = sprintf("%04d%02d%02d", $condition['itm_create_date_year_from'], $condition['itm_create_date_month_from'], $condition['itm_create_date_day_from']);
			} else {
				$ymd = sprintf("%04d%02d%02d", $condition['itm_create_date_year_from'], $condition['itm_create_date_month_from'], 1);
			}
		} else {
			$ymd = sprintf("%04d%02d%02d", $condition['itm_create_date_year_from'], 1, 1);
		}
	}
	if (!_IsNull($ymd)) {
		$sql .= "\n and	date_format(t_itm.itm_create_date,'%Y%m%d') >= '".mysql_real_escape_string($ymd)."'";
	}

	$ymd = "";
	//作成日To(年)
	if (isset($condition['itm_create_date_year_to']) && !_IsNull($condition['itm_create_date_year_to'])) {
		//作成日To(月)
		if (isset($condition['itm_create_date_month_to']) && !_IsNull($condition['itm_create_date_month_to'])) {
			//作成日To(日)
			if (isset($condition['itm_create_date_day_to']) && !_IsNull($condition['itm_create_date_day_to'])) {
				$ymd = sprintf("%04d%02d%02d", $condition['itm_create_date_year_to'], $condition['itm_create_date_month_to'], $condition['itm_create_date_day_to']);
			} else {
				$ymd = sprintf("%04d%02d%02d", $condition['itm_create_date_year_to'], $condition['itm_create_date_month_to'], 31);
			}
		} else {
			$ymd = sprintf("%04d%02d%02d", $condition['itm_create_date_year_to'], 12, 31);
		}
	}
	if (!_IsNull($ymd)) {
		$sql .= "\n and	date_format(t_itm.itm_create_date,'%Y%m%d') <= '".mysql_real_escape_string($ymd)."'";
	}

	//更新日
	$ymd = "";
	//更新日From(年)
	if (isset($condition['itm_update_date_year_from']) && !_IsNull($condition['itm_update_date_year_from'])) {
		//更新日From(月)
		if (isset($condition['itm_update_date_month_from']) && !_IsNull($condition['itm_update_date_month_from'])) {
			//更新日From(日)
			if (isset($condition['itm_update_date_day_from']) && !_IsNull($condition['itm_update_date_day_from'])) {
				$ymd = sprintf("%04d%02d%02d", $condition['itm_update_date_year_from'], $condition['itm_update_date_month_from'], $condition['itm_update_date_day_from']);
			} else {
				$ymd = sprintf("%04d%02d%02d", $condition['itm_update_date_year_from'], $condition['itm_update_date_month_from'], 1);
			}
		} else {
			$ymd = sprintf("%04d%02d%02d", $condition['itm_update_date_year_from'], 1, 1);
		}
	}
	if (!_IsNull($ymd)) {
		$sql .= "\n and	date_format(t_itm.itm_update_date,'%Y%m%d') >= '".mysql_real_escape_string($ymd)."'";
	}

	$ymd = "";
	//更新日To(年)
	if (isset($condition['itm_update_date_year_to']) && !_IsNull($condition['itm_update_date_year_to'])) {
		//更新日To(月)
		if (isset($condition['itm_update_date_month_to']) && !_IsNull($condition['itm_update_date_month_to'])) {
			//更新日To(日)
			if (isset($condition['itm_update_date_day_to']) && !_IsNull($condition['itm_update_date_day_to'])) {
				$ymd = sprintf("%04d%02d%02d", $condition['itm_update_date_year_to'], $condition['itm_update_date_month_to'], $condition['itm_update_date_day_to']);
			} else {
				$ymd = sprintf("%04d%02d%02d", $condition['itm_update_date_year_to'], $condition['itm_update_date_month_to'], 31);
			}
		} else {
			$ymd = sprintf("%04d%02d%02d", $condition['itm_update_date_year_to'], 12, 31);
		}
	}
	if (!_IsNull($ymd)) {
		$sql .= "\n and	date_format(t_itm.itm_update_date,'%Y%m%d') <= '".mysql_real_escape_string($ymd)."'";
	}

	//商品コード
	if (isset($condition['itm_code']) && !_IsNull($condition['itm_code'])) {
		$sql .= "\n and	t_itm.itm_code like '%".mysql_real_escape_string($condition['itm_code'])."%'";
	}

	//商品名
	if (isset($condition['itm_name']) && !_IsNull($condition['itm_name'])) {
		$sql .= "\n and	t_itm.itm_name like '%".mysql_real_escape_string($condition['itm_name'])."%'";
	}

	//備考
	if (isset($condition['itm_note']) && !_IsNull($condition['itm_note'])) {
		$sql .= "\n and	t_itm.itm_note like '%".mysql_real_escape_string($condition['itm_note'])."%'";
	}


	if (_IsNull($order)) {
		$order .= "\n t_itm.itm_item_id";			//商品テーブル.商品ID(昇順)
	}

	$sql .= "\n order by";
	$sql .= " ".$order;


	//検索件数のみ場合、以下の条件は不要
	if (!$countOnly) {
		//全件の場合、以下の条件は不要
		if (!_IsNull($showNumberOfOnePage)) {
			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
		}
	}

	_Log("[_GetItem] sql='".$sql."'", 2);

	//SQL実行
	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());

	$list = null;
	$count = null;
	if ($result === false) {
    	_Log("[_GetItem] mysql_error='".mysql_error()."'", 1);
    	_Log("[_GetItem] mysql_errno='".mysql_errno()."'", 1);
    	_Log("[_GetItem] SQL='".$sql."'", 1);
	} else {
		$count = mysql_num_rows($result);
		if (!$countOnly) {
			$list = array();

			//検索結果を配列に格納
			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
				switch ($returnMode) {
					case 3:
						$list[$line['itm_subcategory_id']][$line['itm_item_id']] = $line;
						break;
					case 2:
						$list[$line['itm_category_id']][$line['itm_item_id']] = $line;
						break;
					default:
						$list[] = $line;
						break;
				}
			}
			if (count($list) == 0) 	$list = null;
		}
	}

    _Log("[_GetItem] 結果(商品情報件数)='".$count."'");
    _Log("[_GetItem] 結果(商品情報)='".print_r($list,true)."'");
    _Log("[_GetItem] end.");

	if ($countOnly) {
		return $count;
	} else {
		return $list;
	}

}
/* end   ------------------------------------------------商品関連------------------------------------------------ end   */


/* start --------------------------------------------ボトル_画像関連--------------------------------------------- start */
///**
// * ボトル_画像情報を更新する。
// *
// * @param	mixed   $info		ボトル_画像情報
// * @return	boolean	{true:成功した場合/false:失敗した場合}
// * @access  public
// * @since   3.2.0
// */
//function _SaveBottleImageInfo(&$info) {
//
//	_Log("[_SaveBottleImageInfo] start.");
//
//    _Log("[_SaveBottleImageInfo] (param) ボトル_画像情報='".print_r($info,true)."'");
//
//	//IPアドレスを設定する。
//	$ip = $_SERVER["REMOTE_ADDR"];
//	$date = null;
//
//	$return = true;
//
//	//ボトル_画像情報を登録する。
//	_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} ============================================================ start");
//
//
//	//1.ボトル_画像テーブルを更新する。(削除→登録)
//	_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} 1.ボトル_画像テーブル情報更新");
//	//削除する。
//	$res = _DB_TruncateInfo('tbl_bottle_image');
//	if ($res === false) {
//    	_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} {ERROR} ボトル_画像テーブル削除に失敗しました。_DB_TruncateInfo('tbl_bottle_image') ", 1);
//	} else {
//		_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} 1-1.→【削除成功】");
//	}
//	//登録する。
//	if (isset($info['tbl_bottle_image'])) {
//
//		//$btlImgImageId = 0;
//		foreach ($info['tbl_bottle_image'] as $iKey => $tblBottleImageInfo) {
//
//			$bufInfo = array();
//			//削除フラグ="ON"は、空データを登録する。
//			if (isset($tblBottleImageInfo['btl_img_del_flag']) && $tblBottleImageInfo['btl_img_del_flag'] == DELETE_FLAG_YES) {
//				_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} 1.→削除フラグ=\"ON\"は、空データを登録する。");
//			} else {
//				$bufInfo = $tblBottleImageInfo;
//			}
//
//			//$btlImgImageId++;
//
//			//$bufInfo['btl_img_image_id'] = $btlImgImageId;		//ボトル画像ID
//			$bufInfo['btl_img_del_flag'] = DELETE_FLAG_NO;		//削除フラグ
//			$bufInfo['btl_img_create_ip'] = $ip;				//作成IP
//			$bufInfo['btl_img_create_date'] = $date;			//作成日
//			$bufInfo['btl_img_update_ip'] = $ip;				//更新IP
//			$bufInfo['btl_img_update_date'] = $date;			//更新日
//			$res = _DB_CreateInfo('tbl_bottle_image', $bufInfo);
//			if ($res === false) {
//				$return = false;
//				_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} {ERROR} ボトル_画像テーブル更新に失敗しました。_DB_CreateInfo('tbl_bottle_image', xxx) ", 1);
//				_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} {ERROR} ボトル_画像テーブル情報 = '".print_r($bufInfo,true)."'", 1);
//			} else {
//				_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} 1-1.→【登録成功】");
//			}
//		}
//	}
//
//	_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} ============================================================ end");
//
//	_Log("[_SaveBottleImageInfo] 結果 = '".$return."'");
//    _Log("[_SaveBottleImageInfo] end.");
//
//	return $return;
//
//}

/**
 * ボトル_画像情報を更新する。
 *
 * @param	mixed   $info		ボトル_画像情報
 * @return	boolean	{true:成功した場合/false:失敗した場合}
 * @access  public
 * @since   3.2.0
 */
function _SaveBottleImageInfo(&$info) {

	_Log("[_SaveBottleImageInfo] start.");

    _Log("[_SaveBottleImageInfo] (param) ボトル_画像情報='".print_r($info,true)."'");

	//IPアドレスを設定する。
	$ip = $_SERVER["REMOTE_ADDR"];
	$date = null;

	$return = true;

	//ボトル_画像情報を登録する。
	_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} ============================================================ start");


	//1.ボトル_画像テーブルを更新する。
	_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} 1.ボトル_画像テーブル情報更新");
//	//削除する。
//	$res = _DB_TruncateInfo('tbl_bottle_image');
//	if ($res === false) {
//    	_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} {ERROR} ボトル_画像テーブル削除に失敗しました。_DB_TruncateInfo('tbl_bottle_image') ", 1);
//	} else {
//		_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} 1-1.→【削除成功】");
//	}
	//登録する。
	if (isset($info['tbl_bottle_image'])) {

		//$btlImgImageId = 0;
		foreach ($info['tbl_bottle_image'] as $iKey => $tblBottleImageInfo) {

			if (isset($tblBottleImageInfo['btl_img_image_id']) && !_IsNull($tblBottleImageInfo['btl_img_image_id'])) {
				//IDが設定済の場合、更新する。
				_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} 1-1.IDが設定済の場合、更新する。");

				$bufInfo = array();
				$bufInfo = $tblBottleImageInfo;

				if (isset($tblBottleImageInfo['btl_img_del_flag']) && $tblBottleImageInfo['btl_img_del_flag'] == DELETE_FLAG_YES) {
					_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} 1-1.→削除フラグ=\"ON\"は、画像ファイル名をクリアする。");
					$bufInfo['btl_img_file_name'] = null;			//画像ファイル名
				} else {
					$bufInfo['btl_img_del_flag'] = DELETE_FLAG_NO;	//削除フラグ
				}

				unset($bufInfo['btl_img_create_ip']);				//作成IP
				unset($bufInfo['btl_img_create_date']);				//作成日
				$bufInfo['btl_img_update_ip'] = $ip;				//更新IP
				$bufInfo['btl_img_update_date'] = $date;			//更新日
				$res = _DB_SaveInfo('tbl_bottle_image', $bufInfo);
				if ($res === false) {
					$return = false;
					_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} {ERROR} ボトル_画像更新に失敗しました。_DB_SaveInfo('tbl_bottle_image', xxx) ", 1);
					_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} {ERROR} ボトル_画像情報 = '".print_r($bufInfo,true)."'", 1);
				} else {
					_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} 1-1.→【更新成功】");
				}

			} else {
				//IDが未設定の場合、登録する。
				_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} 1-2.IDが未設定の場合、登録する。");

				$bufInfo = array();
				$bufInfo = $tblBottleImageInfo;

				//削除フラグ="ON"は、登録しない。
				if (isset($tblBottleImageInfo['btl_img_del_flag']) && $tblBottleImageInfo['btl_img_del_flag'] == DELETE_FLAG_YES) {
					_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} 1-2.→削除フラグ=\"ON\"は、登録しない。");
					continue;
				} else {
					//未入力の場合、登録しない。
					$createFlag = false;
					if (isset($tblBottleImageInfo['btl_img_file_name']) && !_IsNull($tblBottleImageInfo['btl_img_file_name'])) $createFlag = true;
					if (isset($tblBottleImageInfo['btl_img_title']) && !_IsNull($tblBottleImageInfo['btl_img_title'])) $createFlag = true;
					if (isset($tblBottleImageInfo['btl_img_price']) && !_IsNull($tblBottleImageInfo['btl_img_price'])) $createFlag = true;
					if (isset($tblBottleImageInfo['btl_img_comment']) && !_IsNull($tblBottleImageInfo['btl_img_comment'])) $createFlag = true;
					if (isset($tblBottleImageInfo['btl_img_show_order']) && !_IsNull($tblBottleImageInfo['btl_img_show_order'])) $createFlag = true;

					if ($createFlag) {
					} else {
						_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} 1-2.→全項目が未入力の場合は、登録しない。");
						continue;
					}
				}

				$bufInfo['btl_img_del_flag'] = DELETE_FLAG_NO;		//削除フラグ
				$bufInfo['btl_img_create_ip'] = $ip;				//作成IP
				$bufInfo['btl_img_create_date'] = $date;			//作成日
				$bufInfo['btl_img_update_ip'] = $ip;				//更新IP
				$bufInfo['btl_img_update_date'] = $date;			//更新日
				$res = _DB_CreateInfo('tbl_bottle_image', $bufInfo);
				if ($res === false) {
					$return = false;
					_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} {ERROR} ボトル_画像更新に失敗しました。_DB_CreateInfo('tbl_bottle_image', xxx) ", 1);
					_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} {ERROR} ボトル_画像情報 = '".print_r($bufInfo,true)."'", 1);
				} else {
					_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} 1-2.→【登録成功】");
				}

			}
		}
	}

	_Log("[_SaveBottleImageInfo] {ボトル_画像情報更新} ============================================================ end");

	_Log("[_SaveBottleImageInfo] 結果 = '".$return."'");
    _Log("[_SaveBottleImageInfo] end.");

	return $return;

}


/**
 * ボトル_画像情報を取得する。
 *
 * @param	int   	$imageId			ボトル画像ID(未使用)
 * @param	boolean	$undeleteOnly		未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @return	mixed	ボトル_画像情報{null:取得できなかった場合}
 * @access  public
 * @since   3.2.0
 */
function _GetBottleImageInfo($imageId, $undeleteOnly = true) {

	_Log("[_GetBottleImageInfo] start.");

	_Log("[_GetBottleImageInfo] (param) ボトル画像ID = '".$imageId."'");
	_Log("[_GetBottleImageInfo] (param) 未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象} = '".$undeleteOnly."'");

	//ボトル_画像情報を取得する。
	_Log("[_GetBottleImageInfo] {ボトル_画像情報取得} ============================================================ start");

	//1.ボトル_画像テーブルを検索する。
	_Log("[_GetBottleImageInfo] {ボトル_画像情報取得} 1.ボトル_画像テーブルテーブル情報取得");
	$condition = null;
	$order = null;
	$order .= "btl_img_image_id";		//ボトル画像IDの昇順
	$tblBottleImageList = _DB_GetList('tbl_bottle_image', $condition, $undeleteOnly, $order, 'btl_img_del_flag');

	//配列に設定する。
	$resList = array();
	$resList['tbl_bottle_image'] = $tblBottleImageList;		//1.ボトル_画像テーブル

	_Log("[_GetBottleImageInfo] {ボトル_画像情報取得} 結果 = '".print_r($resList,true)."'");
	_Log("[_GetBottleImageInfo] {ボトル_画像情報取得} ============================================================ end");

	_Log("[_GetBottleImageInfo] end.");
	return $resList;
}
/* end   --------------------------------------------ボトル_画像関連--------------------------------------------- end   */


/* start -----------------------------------------彫刻パターン_画像関連------------------------------------------ start */
/**
 * デザインマスタ情報を更新する。
 *
 * @param	mixed   $info		デザインマスタ情報
 * @return	boolean	{true:成功した場合/false:失敗した場合}
 * @access  public
 * @since   3.2.0
 */
function _SaveDesignInfo(&$info) {

	_Log("[_SaveDesignInfo] start.");

    _Log("[_SaveDesignInfo] (param) デザインマスタ情報='".print_r($info,true)."'");

	//IPアドレスを設定する。
	$ip = $_SERVER["REMOTE_ADDR"];
	$date = null;

	$return = true;

	//デザインマスタ情報を登録する。
	_Log("[_SaveDesignInfo] {デザインマスタ情報更新} ============================================================ start");


	//1.デザインマスタを更新する。
	_Log("[_SaveDesignInfo] {デザインマスタ情報更新} 1.デザインマスタ情報更新");
//	//削除する。
//	$res = _DB_TruncateInfo('mst_design');
//	if ($res === false) {
//    	_Log("[_SaveDesignInfo] {デザインマスタ情報更新} {ERROR} デザインマスタ削除に失敗しました。_DB_TruncateInfo('mst_design') ", 1);
//	} else {
//		_Log("[_SaveDesignInfo] {デザインマスタ情報更新} 1-1.→【削除成功】");
//	}
	//登録する。
	if (isset($info['mst_design'])) {

		foreach ($info['mst_design'] as $iKey => $mstDesignInfo) {

			$designId = null;

			if (isset($mstDesignInfo['id']) && !_IsNull($mstDesignInfo['id'])) {
				//IDが設定済の場合、更新する。
				_Log("[_SaveDesignInfo] {デザインマスタ情報更新} 1-1.IDが設定済の場合、更新する。");

				$bufInfo = array();
				$bufInfo = $mstDesignInfo;

				if (isset($mstDesignInfo['del_flag']) && $mstDesignInfo['del_flag'] == DELETE_FLAG_YES) {
					_Log("[_SaveDesignInfo] {デザインマスタ情報更新} 1-1.→削除フラグ=\"ON\"は、画像ファイル名をクリアする。");
					$bufInfo['file_name'] = null;			//画像ファイル名
				} else {
					$bufInfo['del_flag'] = DELETE_FLAG_NO;	//削除フラグ
				}

				$bufInfo['update_ip'] = $ip;				//更新IP
				$bufInfo['update_date'] = $date;			//更新日
				$res = _DB_SaveInfo('mst_design', $bufInfo);
				if ($res === false) {
					$return = false;
					_Log("[_SaveDesignInfo] {デザインマスタ情報更新} {ERROR} デザインマスタ更新に失敗しました。_DB_SaveInfo('mst_design', xxx) ", 1);
					_Log("[_SaveDesignInfo] {デザインマスタ情報更新} {ERROR} デザインマスタ情報 = '".print_r($bufInfo,true)."'", 1);
				} else {
					_Log("[_SaveDesignInfo] {デザインマスタ情報更新} 1-1.→【更新成功】");

					$designId = $mstDesignInfo['id'];
				}

			} else {
				//IDが未設定の場合、登録する。
				_Log("[_SaveDesignInfo] {デザインマスタ情報更新} 1-2.IDが未設定の場合、登録する。");

				$bufInfo = array();
				$bufInfo = $mstDesignInfo;

				//削除フラグ="ON"は、登録しない。
				if (isset($mstDesignInfo['del_flag']) && $mstDesignInfo['del_flag'] == DELETE_FLAG_YES) {
					_Log("[_SaveDesignInfo] {デザインマスタ情報更新} 1-2.→削除フラグ=\"ON\"は、登録しない。");
					continue;
				} else {
					//未入力の場合、登録しない。
					$createFlag = false;
					//if (isset($mstDesignInfo['id']) && !_IsNull($mstDesignInfo['id'])) $createFlag = true;
					if (isset($mstDesignInfo['file_name']) && !_IsNull($mstDesignInfo['file_name'])) $createFlag = true;
					if (isset($mstDesignInfo['code']) && !_IsNull($mstDesignInfo['code'])) $createFlag = true;
					if (isset($mstDesignInfo['name']) && !_IsNull($mstDesignInfo['name'])) $createFlag = true;
					if (isset($mstDesignInfo['value']) && !_IsNull($mstDesignInfo['value'])) $createFlag = true;
					if (isset($mstDesignInfo['color']) && !_IsNull($mstDesignInfo['color'])) $createFlag = true;
					if (isset($mstDesignInfo['tag']) && !_IsNull($mstDesignInfo['tag'])) $createFlag = true;
					if (isset($mstDesignInfo['show_order']) && !_IsNull($mstDesignInfo['show_order'])) $createFlag = true;
					//if (isset($mstDesignInfo['del_flag']) && !_IsNull($mstDesignInfo['del_flag'])) $createFlag = true;
					//if (isset($mstDesignInfo['update_ip']) && !_IsNull($mstDesignInfo['update_ip'])) $createFlag = true;
					//if (isset($mstDesignInfo['update_date']) && !_IsNull($mstDesignInfo['update_date'])) $createFlag = true;

					if ($createFlag) {
					} else {
						_Log("[_SaveDesignInfo] {デザインマスタ情報更新} 1-2.→全項目が未入力の場合は、登録しない。");
						continue;
					}
				}

				$bufInfo['del_flag'] = DELETE_FLAG_NO;		//削除フラグ
				$bufInfo['update_ip'] = $ip;				//更新IP
				$bufInfo['update_date'] = $date;			//更新日
				$res = _DB_CreateInfo('mst_design', $bufInfo);
				if ($res === false) {
					$return = false;
					_Log("[_SaveDesignInfo] {デザインマスタ情報更新} {ERROR} デザインマスタ更新に失敗しました。_DB_CreateInfo('mst_design', xxx) ", 1);
					_Log("[_SaveDesignInfo] {デザインマスタ情報更新} {ERROR} デザインマスタ情報 = '".print_r($bufInfo,true)."'", 1);
				} else {
					_Log("[_SaveDesignInfo] {デザインマスタ情報更新} 1-2.→【登録成功】");

					$designId = $res;
				}

			}

			//2.カテゴリー_デザイン_関連マスタを検索する。
			_Log("[_SaveDesignInfo] {デザインマスタ情報更新} 2.カテゴリー_デザイン_関連マスタ情報更新");
			if (!_IsNull($designId)) {
				//削除する。
				$condition = array();
				$condition['design_id'] = $designId;//デザインID
				$res = _DB_DeleteInfo('mst_category_design_rel', $condition);
				if ($res === false) {
			    	_Log("[_SaveItemInfo] {デザインマスタ情報更新} {ERROR} カテゴリー_デザイン_関連マスタ削除に失敗しました。_DB_DeleteInfo('mst_category_design_rel', xxx) ", 1);
			    	_Log("[_SaveItemInfo] {デザインマスタ情報更新} {ERROR} 削除条件 = '".print_r($condition,true)."'", 1);
				} else {
					_Log("[_SaveItemInfo] {デザインマスタ情報更新} 2-1.→【削除成功】");
				}
				//登録する。
				//削除フラグ="ON"は、登録しない。
				if (isset($mstDesignInfo['del_flag']) && $mstDesignInfo['del_flag'] == DELETE_FLAG_YES) {
					_Log("[_SaveDesignInfo] {デザインマスタ情報更新} 2-2.→削除フラグ=\"ON\"は、登録しない。");
				} else {
					if (isset($mstDesignInfo['category_id'])) {
						foreach ($mstDesignInfo['category_id'] as $cKey => $categoryId) {
							$bufInfo = array();
							$bufInfo['category_id'] = $categoryId;			//カテゴリーID
							$bufInfo['design_id'] = $designId;				//デザインID
							$bufInfo['del_flag'] = DELETE_FLAG_NO;			//削除フラグ
							$bufInfo['update_ip'] = $ip;					//更新IP
							$bufInfo['update_date'] = $date;				//更新日
							$res = _DB_CreateInfo('mst_category_design_rel', $bufInfo);
							if ($res === false) {
								_Log("[_SaveItemInfo] {デザインマスタ情報更新} {ERROR} カテゴリー_デザイン_関連マスタ更新に失敗しました。_DB_CreateInfo('tbl_item_event', xxx) ", 1);
								_Log("[_SaveItemInfo] {デザインマスタ情報更新} {ERROR} カテゴリー_デザイン_関連マスタ情報 = '".print_r($bufInfo,true)."'", 1);
							} else {
								_Log("[_SaveItemInfo] {デザインマスタ情報更新} 2-2.→【登録成功】");
							}
						}
					}
				}
			}

		}
	}

	_Log("[_SaveDesignInfo] {デザインマスタ情報更新} ============================================================ end");

	_Log("[_SaveDesignInfo] 結果 = '".$return."'");
    _Log("[_SaveDesignInfo] end.");

	return $return;

}


/**
 * デザインマスタ情報を取得する。
 *
 * @param	int   	$imageId			ボトル画像ID(未使用)
 * @param	boolean	$undeleteOnly		未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @return	mixed	デザインマスタ情報{null:取得できなかった場合}
 * @access  public
 * @since   3.2.0
 */
function _GetDesignInfo($imageId, $undeleteOnly = true) {

	_Log("[_GetDesignInfo] start.");

	_Log("[_GetDesignInfo] (param) ID = '".$imageId."'");
	_Log("[_GetDesignInfo] (param) 未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象} = '".$undeleteOnly."'");

	//デザインマスタ情報を取得する。
	_Log("[_GetDesignInfo] {デザインマスタ情報取得} ============================================================ start");

	//1.デザインマスタを検索する。
	_Log("[_GetDesignInfo] {デザインマスタ情報取得} 1.デザインマスタ情報取得");
	$condition = null;
	$order = null;
	$order .= "id";		//IDの昇順
	$mstDesignList = _DB_GetList('mst_design', $condition, $undeleteOnly, $order);

	//2.カテゴリー_デザイン_関連マスタを検索する。
	_Log("[_GetItemInfo] {デザインマスタ情報取得} 2.カテゴリー_デザイン_関連マスタ情報取得");
	if (!_IsNull($mstDesignList)) {
		foreach ($mstDesignList as $key => $mstDesignInfo) {
			$condition = array();
			$condition['design_id'] = $mstDesignInfo['id'];
			$categoryList = _DB_GetListByAssociative('mst_category_design_rel', 'category_id', null, $condition);
			$mstDesignList[$key]['category_id'] = $categoryList;
		}
	}

	//配列に設定する。
	$resList = array();
	$resList['mst_design'] = $mstDesignList;		//1.デザインマスタ

	_Log("[_GetDesignInfo] {デザインマスタ情報取得} 結果 = '".print_r($resList,true)."'");
	_Log("[_GetDesignInfo] {デザインマスタ情報取得} ============================================================ end");

	_Log("[_GetDesignInfo] end.");
	return $resList;
}
/* end   -----------------------------------------彫刻パターン_画像関連------------------------------------------ end   */



/* start ----------------------------------------彫刻文字(和字)_画像関連----------------------------------------- start */
/**
 * 文字_和マスタ情報を更新する。
 *
 * @param	mixed   $info		文字_和マスタ情報
 * @return	boolean	{true:成功した場合/false:失敗した場合}
 * @access  public
 * @since   3.2.0
 */
function _SaveCharacterJInfo(&$info) {

	_Log("[_SaveCharacterJInfo] start.");

    _Log("[_SaveCharacterJInfo] (param) 文字_和マスタ情報='".print_r($info,true)."'");

	//IPアドレスを設定する。
	$ip = $_SERVER["REMOTE_ADDR"];
	$date = null;

	$return = true;

	//文字_和マスタ情報を登録する。
	_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} ============================================================ start");


	//1.文字_和マスタを更新する。
	_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} 1.文字_和マスタ情報更新");
//	//削除する。
//	$res = _DB_TruncateInfo('mst_character_j');
//	if ($res === false) {
//    	_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} {ERROR} 文字_和マスタ削除に失敗しました。_DB_TruncateInfo('mst_character_j') ", 1);
//	} else {
//		_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} 1-1.→【削除成功】");
//	}
	//登録する。
	if (isset($info['mst_character_j'])) {

		foreach ($info['mst_character_j'] as $iKey => $mstCharacterJInfo) {

			if (isset($mstCharacterJInfo['id']) && !_IsNull($mstCharacterJInfo['id'])) {
				//IDが設定済の場合、更新する。
				_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} 1-1.IDが設定済の場合、更新する。");

				$bufInfo = array();
				$bufInfo = $mstCharacterJInfo;

				if (isset($mstCharacterJInfo['del_flag']) && $mstCharacterJInfo['del_flag'] == DELETE_FLAG_YES) {
					_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} 1-1.→削除フラグ=\"ON\"は、画像ファイル名をクリアする。");
					$bufInfo['file_name'] = null;			//画像ファイル名
				} else {
					$bufInfo['del_flag'] = DELETE_FLAG_NO;	//削除フラグ
				}

				$bufInfo['update_ip'] = $ip;				//更新IP
				$bufInfo['update_date'] = $date;			//更新日
				$res = _DB_SaveInfo('mst_character_j', $bufInfo);
				if ($res === false) {
					$return = false;
					_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} {ERROR} 文字_和マスタ更新に失敗しました。_DB_SaveInfo('mst_character_j', xxx) ", 1);
					_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} {ERROR} 文字_和マスタ情報 = '".print_r($bufInfo,true)."'", 1);
				} else {
					_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} 1-1.→【更新成功】");
				}

			} else {
				//IDが未設定の場合、登録する。
				_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} 1-2.IDが未設定の場合、登録する。");

				$bufInfo = array();
				$bufInfo = $mstCharacterJInfo;

				//削除フラグ="ON"は、登録しない。
				if (isset($mstCharacterJInfo['del_flag']) && $mstCharacterJInfo['del_flag'] == DELETE_FLAG_YES) {
					_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} 1-2.→削除フラグ=\"ON\"は、登録しない。");
					continue;
				} else {
					//未入力の場合、登録しない。
					$createFlag = false;
					//if (isset($mstCharacterJInfo['id']) && !_IsNull($mstCharacterJInfo['id'])) $createFlag = true;
					if (isset($mstCharacterJInfo['file_name']) && !_IsNull($mstCharacterJInfo['file_name'])) $createFlag = true;
					if (isset($mstCharacterJInfo['code']) && !_IsNull($mstCharacterJInfo['code'])) $createFlag = true;
					if (isset($mstCharacterJInfo['name']) && !_IsNull($mstCharacterJInfo['name'])) $createFlag = true;
					if (isset($mstCharacterJInfo['value']) && !_IsNull($mstCharacterJInfo['value'])) $createFlag = true;
					if (isset($mstCharacterJInfo['color']) && !_IsNull($mstCharacterJInfo['color'])) $createFlag = true;
					if (isset($mstCharacterJInfo['tag']) && !_IsNull($mstCharacterJInfo['tag'])) $createFlag = true;
					if (isset($mstCharacterJInfo['show_order']) && !_IsNull($mstCharacterJInfo['show_order'])) $createFlag = true;
					//if (isset($mstCharacterJInfo['del_flag']) && !_IsNull($mstCharacterJInfo['del_flag'])) $createFlag = true;
					//if (isset($mstCharacterJInfo['update_ip']) && !_IsNull($mstCharacterJInfo['update_ip'])) $createFlag = true;
					//if (isset($mstCharacterJInfo['update_date']) && !_IsNull($mstCharacterJInfo['update_date'])) $createFlag = true;

					if ($createFlag) {
					} else {
						_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} 1-2.→全項目が未入力の場合は、登録しない。");
						continue;
					}
				}

				$bufInfo['del_flag'] = DELETE_FLAG_NO;		//削除フラグ
				$bufInfo['update_ip'] = $ip;				//更新IP
				$bufInfo['update_date'] = $date;			//更新日
				$res = _DB_CreateInfo('mst_character_j', $bufInfo);
				if ($res === false) {
					$return = false;
					_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} {ERROR} 文字_和マスタ更新に失敗しました。_DB_CreateInfo('mst_character_j', xxx) ", 1);
					_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} {ERROR} 文字_和マスタ情報 = '".print_r($bufInfo,true)."'", 1);
				} else {
					_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} 1-2.→【登録成功】");
				}

			}

		}
	}

	_Log("[_SaveCharacterJInfo] {文字_和マスタ情報更新} ============================================================ end");

	_Log("[_SaveCharacterJInfo] 結果 = '".$return."'");
    _Log("[_SaveCharacterJInfo] end.");

	return $return;

}


/**
 * 文字_和マスタ情報を取得する。
 *
 * @param	int   	$imageId			ボトル画像ID(未使用)
 * @param	boolean	$undeleteOnly		未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @return	mixed	文字_和マスタ情報{null:取得できなかった場合}
 * @access  public
 * @since   3.2.0
 */
function _GetCharacterJInfo($imageId, $undeleteOnly = true) {

	_Log("[_GetCharacterJInfo] start.");

	_Log("[_GetCharacterJInfo] (param) ID = '".$imageId."'");
	_Log("[_GetCharacterJInfo] (param) 未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象} = '".$undeleteOnly."'");

	//文字_和マスタ情報を取得する。
	_Log("[_GetCharacterJInfo] {文字_和マスタ情報取得} ============================================================ start");

	//1.文字_和マスタを検索する。
	_Log("[_GetCharacterJInfo] {文字_和マスタ情報取得} 1.文字_和マスタ情報取得");
	$condition = null;
	$order = null;
	$order .= "id";		//IDの昇順
	$mstCharacterJList = _DB_GetList('mst_character_j', $condition, $undeleteOnly, $order);

	//配列に設定する。
	$resList = array();
	$resList['mst_character_j'] = $mstCharacterJList;		//1.文字_和マスタ

	_Log("[_GetCharacterJInfo] {文字_和マスタ情報取得} 結果 = '".print_r($resList,true)."'");
	_Log("[_GetCharacterJInfo] {文字_和マスタ情報取得} ============================================================ end");

	_Log("[_GetCharacterJInfo] end.");
	return $resList;
}
/* end   ----------------------------------------彫刻文字(和字)_画像関連----------------------------------------- end   */


/* start ----------------------------------------彫刻文字(英字)_画像関連----------------------------------------- start */
/**
 * 文字_英マスタ情報を更新する。
 *
 * @param	mixed   $info		文字_英マスタ情報
 * @return	boolean	{true:成功した場合/false:失敗した場合}
 * @access  public
 * @since   3.2.0
 */
function _SaveCharacterEInfo(&$info) {

	_Log("[_SaveCharacterEInfo] start.");

    _Log("[_SaveCharacterEInfo] (param) 文字_英マスタ情報='".print_r($info,true)."'");

	//IPアドレスを設定する。
	$ip = $_SERVER["REMOTE_ADDR"];
	$date = null;

	$return = true;

	//文字_英マスタ情報を登録する。
	_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} ============================================================ start");


	//1.文字_英マスタを更新する。
	_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} 1.文字_英マスタ情報更新");
//	//削除する。
//	$res = _DB_TruncateInfo('mst_character_e');
//	if ($res === false) {
//    	_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} {ERROR} 文字_英マスタ削除に失敗しました。_DB_TruncateInfo('mst_character_e') ", 1);
//	} else {
//		_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} 1-1.→【削除成功】");
//	}
	//登録する。
	if (isset($info['mst_character_e'])) {

		foreach ($info['mst_character_e'] as $iKey => $mstCharacterEInfo) {

			if (isset($mstCharacterEInfo['id']) && !_IsNull($mstCharacterEInfo['id'])) {
				//IDが設定済の場合、更新する。
				_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} 1-1.IDが設定済の場合、更新する。");

				$bufInfo = array();
				$bufInfo = $mstCharacterEInfo;

				if (isset($mstCharacterEInfo['del_flag']) && $mstCharacterEInfo['del_flag'] == DELETE_FLAG_YES) {
					_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} 1-1.→削除フラグ=\"ON\"は、画像ファイル名をクリアする。");
					$bufInfo['file_name'] = null;			//画像ファイル名
				} else {
					$bufInfo['del_flag'] = DELETE_FLAG_NO;	//削除フラグ
				}

				$bufInfo['update_ip'] = $ip;				//更新IP
				$bufInfo['update_date'] = $date;			//更新日
				$res = _DB_SaveInfo('mst_character_e', $bufInfo);
				if ($res === false) {
					$return = false;
					_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} {ERROR} 文字_英マスタ更新に失敗しました。_DB_SaveInfo('mst_character_e', xxx) ", 1);
					_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} {ERROR} 文字_英マスタ情報 = '".print_r($bufInfo,true)."'", 1);
				} else {
					_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} 1-1.→【更新成功】");
				}

			} else {
				//IDが未設定の場合、登録する。
				_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} 1-2.IDが未設定の場合、登録する。");

				$bufInfo = array();
				$bufInfo = $mstCharacterEInfo;

				//削除フラグ="ON"は、登録しない。
				if (isset($mstCharacterEInfo['del_flag']) && $mstCharacterEInfo['del_flag'] == DELETE_FLAG_YES) {
					_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} 1-2.→削除フラグ=\"ON\"は、登録しない。");
					continue;
				} else {
					//未入力の場合、登録しない。
					$createFlag = false;
					//if (isset($mstCharacterEInfo['id']) && !_IsNull($mstCharacterEInfo['id'])) $createFlag = true;
					if (isset($mstCharacterEInfo['file_name']) && !_IsNull($mstCharacterEInfo['file_name'])) $createFlag = true;
					if (isset($mstCharacterEInfo['code']) && !_IsNull($mstCharacterEInfo['code'])) $createFlag = true;
					if (isset($mstCharacterEInfo['name']) && !_IsNull($mstCharacterEInfo['name'])) $createFlag = true;
					if (isset($mstCharacterEInfo['value']) && !_IsNull($mstCharacterEInfo['value'])) $createFlag = true;
					if (isset($mstCharacterEInfo['color']) && !_IsNull($mstCharacterEInfo['color'])) $createFlag = true;
					if (isset($mstCharacterEInfo['tag']) && !_IsNull($mstCharacterEInfo['tag'])) $createFlag = true;
					if (isset($mstCharacterEInfo['show_order']) && !_IsNull($mstCharacterEInfo['show_order'])) $createFlag = true;
					//if (isset($mstCharacterEInfo['del_flag']) && !_IsNull($mstCharacterEInfo['del_flag'])) $createFlag = true;
					//if (isset($mstCharacterEInfo['update_ip']) && !_IsNull($mstCharacterEInfo['update_ip'])) $createFlag = true;
					//if (isset($mstCharacterEInfo['update_date']) && !_IsNull($mstCharacterEInfo['update_date'])) $createFlag = true;

					if ($createFlag) {
					} else {
						_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} 1-2.→全項目が未入力の場合は、登録しない。");
						continue;
					}
				}

				$bufInfo['del_flag'] = DELETE_FLAG_NO;		//削除フラグ
				$bufInfo['update_ip'] = $ip;				//更新IP
				$bufInfo['update_date'] = $date;			//更新日
				$res = _DB_CreateInfo('mst_character_e', $bufInfo);
				if ($res === false) {
					$return = false;
					_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} {ERROR} 文字_英マスタ更新に失敗しました。_DB_CreateInfo('mst_character_e', xxx) ", 1);
					_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} {ERROR} 文字_英マスタ情報 = '".print_r($bufInfo,true)."'", 1);
				} else {
					_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} 1-2.→【登録成功】");
				}

			}

		}
	}

	_Log("[_SaveCharacterEInfo] {文字_英マスタ情報更新} ============================================================ end");

	_Log("[_SaveCharacterEInfo] 結果 = '".$return."'");
    _Log("[_SaveCharacterEInfo] end.");

	return $return;

}


/**
 * 文字_英マスタ情報を取得する。
 *
 * @param	int   	$imageId			ボトル画像ID(未使用)
 * @param	boolean	$undeleteOnly		未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * @return	mixed	文字_英マスタ情報{null:取得できなかった場合}
 * @access  public
 * @since   3.2.0
 */
function _GetCharacterEInfo($imageId, $undeleteOnly = true) {

	_Log("[_GetCharacterEInfo] start.");

	_Log("[_GetCharacterEInfo] (param) ID = '".$imageId."'");
	_Log("[_GetCharacterEInfo] (param) 未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象} = '".$undeleteOnly."'");

	//文字_英マスタ情報を取得する。
	_Log("[_GetCharacterEInfo] {文字_英マスタ情報取得} ============================================================ start");

	//1.文字_英マスタを検索する。
	_Log("[_GetCharacterEInfo] {文字_英マスタ情報取得} 1.文字_英マスタ情報取得");
	$condition = null;
	$order = null;
	$order .= "id";		//IDの昇順
	$mstCharacterEList = _DB_GetList('mst_character_e', $condition, $undeleteOnly, $order);

	//配列に設定する。
	$resList = array();
	$resList['mst_character_e'] = $mstCharacterEList;		//1.文字_英マスタ

	_Log("[_GetCharacterEInfo] {文字_英マスタ情報取得} 結果 = '".print_r($resList,true)."'");
	_Log("[_GetCharacterEInfo] {文字_英マスタ情報取得} ============================================================ end");

	_Log("[_GetCharacterEInfo] end.");
	return $resList;
}
/* end   ----------------------------------------彫刻文字(英字)_画像関連----------------------------------------- end   */


/**
 * 都道府県マスタを検索する。
 * 引き数	$mst			：マスタ名
 * *		$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
 * 戻り値  	マスタ情報配列
 */
function _GetPrefList($undeleteOnly = true) {

	//SQLを作成する。
	$sql .= "\n select";
	$sql .= "\n		*";
	$sql .= "\n from";
	$sql .= "\n	pref";

//	if ($undeleteOnly) $sql .= "\n where	DEL_FLAG = ".DELETE_FLAG_NO;

	$sql .= "\n order by";
	$sql .= "\n ID";

	//SQL実行
	$result = mysql_query($sql) or die("Query failed-->".$sql);

	$resultList = array();
	//検索結果を配列に格納
	while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
		$buf = array();
		$buf['id'] = $line['Id'];
		$buf['name'] = $line['Name'];
		$resultList[$line['Id']] = $buf;
	}

	if (count($resultList)==0) $resultList = null;


	return $resultList;
}


///* start ------------------------------------------相互リンクサイト関連------------------------------------------ start */
///**
// * 相互リンクサイト情報、自社サイト-相互リンクサイト関連付情報、自社サイトマスタ情報を検索する。
// *
// * @param	mixed   $condition				検索条件
// * @param	string	$order					ソート条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @param	int		$activePage				表示するページ
// * @param	int		$showNumberOfOnePage	1ページの表示件数
// * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
// * @return	array	予約可能日情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetSite($condition = null, $order = null, $undeleteOnly = true, $activePage = 1, $showNumberOfOnePage = null, $countOnly = false) {
//
//	_Log("[_GetSite] start.");
//
//    _Log("[_GetSite] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetSite] (param) ソート条件='".$order."'");
//    _Log("[_GetSite] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//    _Log("[_GetSite] (param) 表示するページ='".$activePage."'");
//    _Log("[_GetSite] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
//    _Log("[_GetSite] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
//
//
//	//相互リンクサイト一覧表示モードを取得する。
//	//表示モードによって、"検索条件"、"返却する配列の格納方法"を切り替える。
//	$siteListMode = null;
//	if (isset($condition['site_list_mode'])) $siteListMode = $condition['site_list_mode'];
//
//
//
//	//一時テーブルを作成する。=========================================================================================================start
//	//1.一時テーブルを一旦削除する。
//	$sql = "";
//	$sql .= "\n drop table if exists tmp_site";
//
//	_Log("[_GetSite] {1.一時テーブル削除} sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	if ($result === false) {
//    	_Log("[_GetSite] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetSite] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetSite] SQL='".$sql."'", 1);
//		return null;
//	}
//
//	//2.以下の複数テーブルを結合した一時テーブルを作成する。
//	//　・相互リンクサイトテーブル(tbl_site)
//	//　・自社サイトマスタ(mst_own_site)
//	//　・自社サイト-ジャンル関連付けマスタ(mst_own_site_genre_relation)
//	//	⇒最大で自社サイトマスタの件数×相互リンクサイトテーブルの件数となる。
//
//	$sql = "";
//	$sql .= "\n create temporary table tmp_site";
//	$sql .= "\n as";
//	$sql .= "\n select";
//	$sql .= "\n  distinct";
//	$sql .= "\n  m_ow_st.id own_site_id";
//
////	$sql .= "\n ,m_ow_st_gr_rel.genre_id own_site_genre_id";//テスト用
//
//	$sql .= "\n ,t_st.*";
//	$sql .= "\n from";
//	$sql .= "\n  tbl_site t_st";
//	$sql .= "\n ,mst_own_site m_ow_st";
//	$sql .= "\n 	left outer join mst_own_site_genre_relation m_ow_st_gr_rel on m_ow_st.id = m_ow_st_gr_rel.own_site_id";
//
//	//検索条件を設定する。
//	$sql .= "\n where 1=1";
//
//	//[自社サイト検索条件]
//	//自社サイトマスタの条件-------------------------------------------------
//	//自社サイトID
//	if (isset($condition['own_site_id'])) {
//		$buf = null;
//		switch (gettype($condition['own_site_id'])) {
//			case 'array':
//				foreach ($condition['own_site_id'] as $value) {
//					if (!_IsNull($value)) {
//						if (!_IsNull($buf)) $buf .= ",";
//						$buf .= mysql_real_escape_string($value);
//					}
//				}
//				break;
//			default:
//				if (!_IsNull($condition['own_site_id'])) {
//					$buf .= mysql_real_escape_string($condition['own_site_id']);
//				}
//				break;
//		}
//		if (!_IsNull($buf)) {
//			$sql .= "\n and	m_ow_st.id in (".$buf.")";
//		}
//	}
//
//	//サイトタイトル
//	if (isset($condition['own_site_title']) && !_IsNull($condition['own_site_title'])) {
//		$sql .= "\n and	m_ow_st.name like '%".mysql_real_escape_string($condition['own_site_title'])."%'";
//	}
//
//	//サイトURL
//	if (isset($condition['own_site_url']) && !_IsNull($condition['own_site_url'])) {
//		$sql .= "\n and	m_ow_st.url like '%".mysql_real_escape_string($condition['own_site_url'])."%'";
//	}
//
//	//削除フラグ
//	if (isset($condition['own_site_del_flag'])) {
//		$buf = null;
//		switch (gettype($condition['own_site_del_flag'])) {
//			case 'array':
//				foreach ($condition['own_site_del_flag'] as $value) {
//					if (!_IsNull($value)) {
//						if (!_IsNull($buf)) $buf .= ",";
//						$buf .= mysql_real_escape_string($value);
//					}
//				}
//				break;
//			default:
//				if (!_IsNull($condition['own_site_del_flag'])) {
//					$buf .= mysql_real_escape_string($condition['own_site_del_flag']);
//				}
//				break;
//		}
//		if (!_IsNull($buf)) {
//			$sql .= "\n and	m_ow_st.del_flag in (".$buf.")";
//		}
//	}
//
//	//自社サイト-ジャンル関連付けマスタの条件--------------------------------
//	//ジャンルID
//	if (isset($condition['own_site_genre_id'])) {
//		$buf = null;
//		switch (gettype($condition['own_site_genre_id'])) {
//			case 'array':
//				foreach ($condition['own_site_genre_id'] as $value) {
//					if (!_IsNull($value)) {
//						if (!_IsNull($buf)) $buf .= ",";
//						$buf .= mysql_real_escape_string($value);
//					}
//				}
//				break;
//			default:
//				if (!_IsNull($condition['own_site_genre_id'])) {
//					$buf .= mysql_real_escape_string($condition['own_site_genre_id']);
//				}
//				break;
//		}
//		if (!_IsNull($buf)) {
//			$sql .= "\n and	m_ow_st_gr_rel.genre_id in (".$buf.")";
//		}
//	}
//
//
//	//[相互リンクサイト検索条件]
//	//相互リンクサイトテーブルの条件-----------------------------------------
//	//相互リンクサイトID
//	if (isset($condition['site_id'])) {
//		$buf = null;
//		switch (gettype($condition['site_id'])) {
//			case 'array':
//				foreach ($condition['site_id'] as $value) {
//					if (!_IsNull($value)) {
//						if (!_IsNull($buf)) $buf .= ",";
//						$buf .= mysql_real_escape_string($value);
//					}
//				}
//				break;
//			default:
//				if (!_IsNull($condition['site_id'])) {
//					$buf .= mysql_real_escape_string($condition['site_id']);
//				}
//				break;
//		}
//		if (!_IsNull($buf)) {
//			$sql .= "\n and	t_st.site_id in (".$buf.")";
//		}
//	}
//
//	//サイトタイトル
//	if (isset($condition['site_title']) && !_IsNull($condition['site_title'])) {
//		$sql .= "\n and	t_st.title like '%".mysql_real_escape_string($condition['site_title'])."%'";
//	}
//
//	//サイトURL
//	if (isset($condition['site_url']) && !_IsNull($condition['site_url'])) {
//		$sql .= "\n and	t_st.url like '%".mysql_real_escape_string($condition['site_url'])."%'";
//	}
//
//	//担当者名
//	if (isset($condition['site_staff_name']) && !_IsNull($condition['site_staff_name'])) {
//		$buf = null;
//		$buf .= "\n t_st.family_name like '%".mysql_real_escape_string($condition['site_staff_name'])."%'";			//担当者名(姓)
//		$buf .= "\n or";
//		$buf .= "\n t_st.first_name like '%".mysql_real_escape_string($condition['site_staff_name'])."%'";			//担当者名(名)
//		$buf .= "\n or";
//		$buf .= "\n t_st.family_name_kana like '%".mysql_real_escape_string($condition['site_staff_name'])."%'";		//担当者名(姓)(カナ)
//		$buf .= "\n or";
//		$buf .= "\n t_st.first_name_kana like '%".mysql_real_escape_string($condition['site_staff_name'])."%'";		//担当者名(名)(カナ)
//
//		$sql .= "\n and	(";
//		$sql .= $buf;
//		$sql .= "\n )";
//	}
//
//	//削除フラグ
//	if (isset($condition['site_del_flag'])) {
//		$buf = null;
//		switch (gettype($condition['site_del_flag'])) {
//			case 'array':
//				foreach ($condition['site_del_flag'] as $value) {
//					if (!_IsNull($value)) {
//						if (!_IsNull($buf)) $buf .= ",";
//						$buf .= mysql_real_escape_string($value);
//					}
//				}
//				break;
//			default:
//				if (!_IsNull($condition['site_del_flag'])) {
//					$buf .= mysql_real_escape_string($condition['site_del_flag']);
//				}
//				break;
//		}
//		if (!_IsNull($buf)) {
//			$sql .= "\n and	t_st.del_flag in (".$buf.")";
//		}
//	}
//
//	$sql .= "\n order by";
//	$sql .= "\n  m_ow_st.id";
//	$sql .= "\n ,t_st.site_id";
//
//	_Log("[_GetSite] {2.一時テーブル作成} sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	if ($result === false) {
//    	_Log("[_GetSite] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetSite] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetSite] SQL='".$sql."'", 1);
//		return null;
//	}
//
//	//3.一時テーブルにインデックスを作成する。
//	$sql = "";
//	$sql .= "\n create index idx_tmp_site on tmp_site (site_id, own_site_id)";
//
//	_Log("[_GetSite] {3.一時テーブルインデックス作成} sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	if ($result === false) {
//    	_Log("[_GetSite] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetSite] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetSite] SQL='".$sql."'", 1);
//		return null;
//	}
//
//	//一時テーブルを作成する。=========================================================================================================end
//
////-----------------------------------------test start
//if (false) {
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  *";
//	$sql .= "\n from";
//	$sql .= "\n  tmp_site";
//
//	_Log("[_GetSite] (TEST){一時テーブル確認} sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	if ($result === false) {
//    	_Log("[_GetSite] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetSite] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetSite] SQL='".$sql."'", 1);
//	} else {
//		_Log("[_GetSite] (TEST){一時テーブル確認} ★結果件数='".mysql_num_rows($result)."'", 2);
//
//		//検索結果を配列に格納
//		while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//			_Log("[_GetSite] (TEST){一時テーブル確認} ☆結果='".print_r($line,true)."'", 2);
//		}
//	}
//
//}
////-----------------------------------------test end
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	//一時テーブル
//	$sql .= "\n   tp_st.*";
//
//	//自社サイト-相互リンクサイト関連付テーブル
//	$sql .= "\n  ,if(t_st_rel.link_status_id is null,".SITE_RELATION_FLAG_NO.",".SITE_RELATION_FLAG_YES.") site_relation_flag";	//関連付け状況
//	$sql .= "\n  ,t_st_rel.link_status_id";										//リンク状況ID
//	$sql .= "\n  ,t_st_rel.del_flag site_relation_del_flag";					//削除フラグ
//	$sql .= "\n  ,t_st_rel.create_ip site_relation_create_ip";					//作成IP
//	$sql .= "\n  ,t_st_rel.create_date site_relation_create_date";				//作成日
//	$sql .= "\n  ,t_st_rel.update_ip site_relation_update_ip";					//更新IP
//	$sql .= "\n  ,t_st_rel.update_date site_relation_update_date";				//更新日
//	$sql .= "\n  ,(to_days(now())-to_days(t_st_rel.create_date)) total_days";	//作成日から本日までの日数
//	$sql .= "\n  ,date_format(t_st_rel.create_date,'%Y/%m/%d') site_relation_create_date_yyyymmdd";		//作成日YYYY/MM/DD
//	$sql .= "\n  ,date_format(t_st_rel.create_date,'%y/%m/%d') site_relation_create_date_yymmdd";		//作成日YY/MM/DD
//
//
//
//	//自社サイトマスタ
//	$sql .= "\n  ,m_ow_st.name own_site_title";									//自社サイト名称
//	$sql .= "\n  ,m_ow_st.url own_site_url";									//自社サイトURL
//
//	$sql .= "\n from";
//	$sql .= "\n 	tmp_site tp_st";
//	$sql .= "\n 		left outer join tbl_site_relation t_st_rel";								//自社サイト-相互リンクサイト関連付テーブル
//	$sql .= "\n 			on 	tp_st.site_id = t_st_rel.site_id";
//	$sql .= "\n 			and tp_st.own_site_id = t_st_rel.own_site_id";
//
//	$sql .= "\n 		left outer join mst_own_site m_ow_st on tp_st.own_site_id = m_ow_st.id";	//自社サイトマスタ
//
//	//検索条件を設定する。
//	$sql .= "\n where 1=1";
//
//
//	switch ($siteListMode) {
//		case SITE_LIST_MODE_MATRIX:
//			//マトリクス
//			break;
//		default:
//			//通常一覧(デフォルト)
//
//			//[リンク状況検索条件]
//			//自社サイト-相互リンクサイト関連付テーブルの条件------------------------
//
//			//関連付け状況
//			if (isset($condition['site_relation_flag'])) {
//				$buf = null;
//				switch (gettype($condition['site_relation_flag'])) {
//					case 'array':
//						//済・未のどちらかが選択されたいた場合、検索条件に追加する。
//						if (count($condition['site_relation_flag']) == 1) {
//							foreach ($condition['site_relation_flag'] as $value) {
//								if (!_IsNull($value)) {
//									switch ($value."") {
//										case SITE_RELATION_FLAG_NO:
//											//未関連付け
//											$buf .= "is null";
//											break;
//										case SITE_RELATION_FLAG_YES:
//											//関連付け済
//											$buf .= "is not null";
//											break;
//									}
//								}
//							}
//						}
//
//						break;
//					default:
//						if (!_IsNull($condition['site_relation_flag'])) {
//							switch ($condition['site_relation_flag']."") {
//								case SITE_RELATION_FLAG_NO:
//									//未関連付け
//									$buf .= "is null";
//									break;
//								case SITE_RELATION_FLAG_YES:
//									//関連付け済
//									$buf .= "is not null";
//									break;
//							}
//
//						}
//						break;
//				}
//				if (!_IsNull($buf)) {
//					$sql .= "\n and	t_st_rel.site_id ".$buf;
//				}
//			}
//
//			//リンク状況ID
//			if (isset($condition['site_relation_link_status_id'])) {
//				$buf = null;
//				switch (gettype($condition['site_relation_link_status_id'])) {
//					case 'array':
//						foreach ($condition['site_relation_link_status_id'] as $value) {
//							if (!_IsNull($value)) {
//								if (!_IsNull($buf)) $buf .= ",";
//								$buf .= mysql_real_escape_string($value);
//							}
//						}
//						break;
//					default:
//						if (!_IsNull($condition['site_relation_link_status_id'])) {
//							$buf .= mysql_real_escape_string($condition['site_relation_link_status_id']);
//						}
//						break;
//				}
//				if (!_IsNull($buf)) {
//					$sql .= "\n and	t_st_rel.link_status_id in (".$buf.")";
//				}
//			}
//
//			//リンク登録日
//			$ymd = "";
//			//リンク登録日From(年)
//			if (isset($condition['site_relation_create_date_year_from']) && !_IsNull($condition['site_relation_create_date_year_from'])) {
//				//リンク登録日From(月)
//				if (isset($condition['site_relation_create_date_month_from']) && !_IsNull($condition['site_relation_create_date_month_from'])) {
//					//リンク登録日From(日)
//					if (isset($condition['site_relation_create_date_day_from']) && !_IsNull($condition['site_relation_create_date_day_from'])) {
//						$ymd = sprintf("%04d%02d%02d", $condition['site_relation_create_date_year_from'], $condition['site_relation_create_date_month_from'], $condition['site_relation_create_date_day_from']);
//					} else {
//						$ymd = sprintf("%04d%02d%02d", $condition['site_relation_create_date_year_from'], $condition['site_relation_create_date_month_from'], 1);
//					}
//				} else {
//					$ymd = sprintf("%04d%02d%02d", $condition['site_relation_create_date_year_from'], 1, 1);
//				}
//			}
//			if (!_IsNull($ymd)) {
//				$sql .= "\n  and date_format(t_st_rel.create_date,'%Y%m%d') >= '".mysql_real_escape_string($ymd)."'";
//			}
//
//			$ymd = "";
//			//リンク登録日To(年)
//			if (isset($condition['site_relation_create_date_year_to']) && !_IsNull($condition['site_relation_create_date_year_to'])) {
//				//リンク登録日To(月)
//				if (isset($condition['site_relation_create_date_month_to']) && !_IsNull($condition['site_relation_create_date_month_to'])) {
//					//リンク登録日To(日)
//					if (isset($condition['site_relation_create_date_day_to']) && !_IsNull($condition['site_relation_create_date_day_to'])) {
//						$ymd = sprintf("%04d%02d%02d", $condition['site_relation_create_date_year_to'], $condition['site_relation_create_date_month_to'], $condition['site_relation_create_date_day_to']);
//					} else {
//						$ymd = sprintf("%04d%02d%02d", $condition['site_relation_create_date_year_to'], $condition['site_relation_create_date_month_to'], 31);
//					}
//				} else {
//					$ymd = sprintf("%04d%02d%02d", $condition['site_relation_create_date_year_to'], 12, 31);
//				}
//			}
//			if (!_IsNull($ymd)) {
//				$sql .= "\n  and date_format(t_st_rel.create_date,'%Y%m%d') <= '".mysql_real_escape_string($ymd)."'";
//			}
//
//
//			//リンク登録日数From
//			if (isset($condition['site_relation_total_days_from']) && !_IsNull($condition['site_relation_total_days_from'])) {
//				$sql .= "\n and	(to_days(now())-to_days(t_st_rel.create_date)) >= ".mysql_real_escape_string($condition['site_relation_total_days_from'])."";
//			}
//
//			//リンク登録日数To
//			if (isset($condition['site_relation_total_days_to']) && !_IsNull($condition['site_relation_total_days_to'])) {
//				$sql .= "\n and	(to_days(now())-to_days(t_st_rel.create_date)) <= ".mysql_real_escape_string($condition['site_relation_total_days_to'])."";
//			}
//
//			break;
//	}
//
//
//
//
//	if (_IsNull($order)) {
//		$order .= "\n  tp_st.title";						//相互リンクサイトテーブル.サイトタイトル
//		$order .= "\n ,tp_st.url";							//相互リンクサイトテーブル.サイトURL
//		$order .= "\n ,tp_st.site_id";						//相互リンクサイトテーブル.相互リンクサイトID
//
//		$order .= "\n ,lpad(m_ow_st.show_order,10,'0')";	//自社サイトマスタ.表示順
//		$order .= "\n ,m_ow_st.id";							//自社サイトマスタ.ID
//	}
//
//	$sql .= "\n order by";
//	$sql .= " ".$order;
//
//
//	//検索件数のみ場合、以下の条件は不要
//	if (!$countOnly) {
//		//全件の場合、以下の条件は不要
//		if (!_IsNull($showNumberOfOnePage)) {
//			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
//		}
//	}
//
//	_Log("[_GetSite] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$list = null;
//	$count = null;
//	if ($result === false) {
//    	_Log("[_GetSite] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetSite] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetSite] SQL='".$sql."'", 1);
//	} else {
//		$count = mysql_num_rows($result);
//		if (!$countOnly) {
//			$list = array();
//
//			//検索結果を配列に格納
//			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//				switch ($siteListMode) {
//					case SITE_LIST_MODE_MATRIX:
//						//マトリクス
//						//自社サイト-相互リンクサイトの2次元に格納する。
//						$list[$line['own_site_id']][$line['site_id']] = $line;
//						break;
//					default:
//						//通常一覧(デフォルト)
//						$list[] = $line;
//						break;
//				}
//			}
//			if (count($list) == 0) 	$list = null;
//		}
//	}
//
//    _Log("[_GetSite] 結果(相互リンクサイト情報件数)='".$count."'");
//    _Log("[_GetSite] 結果(相互リンクサイト情報)='".print_r($list,true)."'");
//    _Log("[_GetSite] end.");
//
//	if ($countOnly) {
//		return $count;
//	} else {
//		return $list;
//	}
//
//}
//
///* end   ------------------------------------------相互リンクサイト関連------------------------------------------ end   */


////////////////////////////////////////////////////////////////
////以下は、未使用。

///* start --------------------------------------------オプションマスタ-------------------------------------------- start */
///**
// * オプションマスタを検索する。
// * 引き数	$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	オプションマスタ情報配列
// */
//function _GetMstOptionList($undeleteOnly = true) {
//
//
//	//SQLを作成する。
//	$sql .= "\n select";
//	$sql .= "\n  m_opn.*";
//	$sql .= "\n ,m_opn_unt.name option_unit_name";
//	$sql .= "\n ,concat(m_opn.name,'(',m_opn_unt.name,')') option_name";
//	$sql .= "\n from";
//	$sql .= "\n mst_option m_opn";
//	$sql .= "\n 	left outer join mst_option_unit m_opn_unt on m_opn.unit_id = m_opn_unt.id";						//オプション価格単位マスタ
//
//
//	if ($undeleteOnly) $sql .= "\n where	m_opn.del_flag = ".DELETE_FLAG_NO;
//
//	$sql .= "\n order by";
//	$sql .= "\n  lpad(m_opn.show_order,10,'0')";
//	$sql .= "\n ,m_opn.id";
//
//
//	_Log("[_GetMstOptionList] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$resultList = array();
//	//検索結果を配列に格納
//	while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//		$resultList[$line['id']] = $line;
//	}
//
//	_Log("[_GetMstOptionList] count(\$resultList)='".count($resultList)."'");
//	_Log("[_GetMstOptionList] \$resultList='".print_r($resultList,true)."'");
//
//	if (count($resultList)==0) $resultList = null;
//
//
//	return $resultList;
//}
//
///**
// * オプションマスタを検索する。
// * 引き数	$id				:ID
// * *		$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	オプションマスタ情報配列
// */
//function _GetMstOptionInfo($id, $undeleteOnly = true) {
//	_Log("[_GetMstOptionInfo] start.");
//
//    _Log("[_GetMstOptionInfo] (param) ID='".$id."'");
//    _Log("[_GetMstOptionInfo] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//
//	$list = _GetMstOptionList($undeleteOnly);
//	$info = null;
//	if (!_IsNull($list)) {
//		if (isset($list[$id])) $info = $list[$id];
//	}
//
//	_Log("[_GetMstOptionInfo] 結果 = '".print_r($info,true)."'");
//	_Log("[_GetMstOptionInfo] end.");
//	return $info;
//}
///* end   --------------------------------------------オプションマスタ-------------------------------------------- end   */
//
//
///* start ----------------------------------------------プランマスタ---------------------------------------------- start */
//
///**
// * プランマスタ情報を取得する。
// *
// * @param	mixed   $condition				検索条件
// * @param	string	$order					ソート条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @param	int		$activePage				表示するページ
// * @param	int		$showNumberOfOnePage	1ページの表示件数
// * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
// * @return	array	プランマスタ情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetMstPlan($condition = null, $order = null, $undeleteOnly = true, $activePage = 1, $showNumberOfOnePage = null, $countOnly = false) {
//	_Log("[_GetMstPlan] start.");
//
//    _Log("[_GetMstPlan] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetMstPlan] (param) ソート条件='".$order."'");
//    _Log("[_GetMstPlan] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//    _Log("[_GetMstPlan] (param) 表示するページ='".$activePage."'");
//    _Log("[_GetMstPlan] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
//    _Log("[_GetMstPlan] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
//
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  m_pln.*";
//	$sql .= "\n ,m_cmp.name company_name";
//	$sql .= "\n ,m_cmp.url company_url";
//	$sql .= "\n ,m_cmp.img company_img";
//	$sql .= "\n ,m_cmp.del_flag company_del_flag";
//	$sql .= "\n ,concat(m_cmp.name,'/',m_pln.name) company_plan_name";
//
//	$sql .= "\n from";
//	$sql .= "\n 	mst_plan m_pln";
//	$sql .= "\n  	 	left outer join mst_company m_cmp on m_pln.company_id = m_cmp.id";						//会社マスタ
//
//
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	m_pln.del_flag = ".DELETE_FLAG_NO;
//
//	//プランID
//	if (isset($condition['id']) && !_IsNull($condition['id'])) {
//		$sql .= "\n and	m_pln.id = ".mysql_real_escape_string($condition['id'])."";
//	}
//
//	//会社ID
//	if (isset($condition['company_id']) && !_IsNull($condition['company_id'])) {
//		$sql .= "\n and	m_pln.company_id = ".mysql_real_escape_string($condition['company_id'])."";
//	}
//
//
//	if (_IsNull($order)) {
//		$order .= "\n  lpad(m_cmp.show_order,10,'0')";
//		$order .= "\n ,lpad(m_pln.show_order,10,'0')";
//	}
//
//	$sql .= "\n order by";
//	$sql .= " ".$order;
//
//	//検索件数のみ場合、以下の条件は不要
//	if (!$countOnly) {
//		//全件の場合、以下の条件は不要
//		if (!_IsNull($showNumberOfOnePage)) {
//			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
//		}
//	}
//
//	_Log("[_GetMstPlan] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$list = null;
//	$count = null;
//	if ($result === false) {
//    	_Log("[_GetMstPlan] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetMstPlan] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetMstPlan] SQL='".$sql."'", 1);
//	} else {
//		$count = mysql_num_rows($result);
//		if (!$countOnly) {
//			$list = array();
//			//検索結果を配列に格納
//			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//
//				//"名称"＋"未削除・削除済"を設定する。
//				$line['name_del_2'] = _FormatName2($line['name'], $line['del_flag']);
//
//				//"会社名称"＋"未削除・削除済"を設定する。
//				$line['company_name_del_2'] = _FormatName2($line['company_name'], $line['company_del_flag']);
//
//				//"会社名称"＋"未削除・削除済"+"名称"＋"未削除・削除済"を設定する。
//				$line['company_plan_name_del_2'] = _FormatName2($line['company_name'], $line['company_del_flag'])."/"._FormatName2($line['name'], $line['del_flag']);
//
//				$list[$line['id']] = $line;
//			}
//			if (count($list) == 0) 	$list = null;
//		}
//	}
//
//    _Log("[_GetMstPlan] 結果(プランマスタ情報件数)='".$count."'");
//    _Log("[_GetMstPlan] 結果(プランマスタ情報)='".print_r($list,true)."'");
//    _Log("[_GetMstPlan] end.");
//
//	if ($countOnly) {
//		return $count;
//	} else {
//		return $list;
//	}
//
//}
//
///**
// * プランマスタ情報を取得する。
// *
// * @param	mixed   $id				プランID
// * @param	boolean	$undeleteOnly	未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @return	array	プランマスタ情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetMstPlanInfo($id, $undeleteOnly = true) {
//	_Log("[_GetMstPlanInfo] start.");
//
//    _Log("[_GetMstPlanInfo] (param) プランID='".$id."'");
//    _Log("[_GetMstPlanInfo] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//
//	if (_IsNull($id)) {
//		_Log("[_GetMstPlanInfo] Plan Id Is null.");
//		_Log("[_GetMstPlanInfo] end.");
//	}
//
//	$condition = array();
//	$condition['id'] = $id;
//	$list = _GetMstPlan($condition, null, $undeleteOnly);
//
//	$info = null;
//	if (!_IsNull($list)) $info = $list[$id];
//
//	_Log("[_GetMstPlanInfo] 結果 = '".print_r($info,true)."'");
//	_Log("[_GetMstPlanInfo] end.");
//	return $info;
//
//}
//
///* end   ----------------------------------------------プランマスタ---------------------------------------------- end   */
//
///* start ----------------------------------------------クラスマスタ---------------------------------------------- start */
///**
// * クラスマスタ情報を取得する。
// *
// * @param	mixed   $condition				検索条件
// * @param	string	$order					ソート条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @param	int		$activePage				表示するページ
// * @param	int		$showNumberOfOnePage	1ページの表示件数
// * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
// * @return	array	クラスマスタ情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetMstClass($condition = null, $order = null, $undeleteOnly = true, $activePage = 1, $showNumberOfOnePage = null, $countOnly = false) {
//
//	_Log("[_GetMstClass] start.");
//
//    _Log("[_GetMstClass] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetMstClass] (param) ソート条件='".$order."'");
//    _Log("[_GetMstClass] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//    _Log("[_GetMstClass] (param) 表示するページ='".$activePage."'");
//    _Log("[_GetMstClass] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
//    _Log("[_GetMstClass] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
//
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  m_cls.*";
//	$sql .= "\n ,m_cmp.name company_name";
//	$sql .= "\n ,m_cmp.url company_url";
//	$sql .= "\n ,m_cmp.img company_img";
//	$sql .= "\n ,m_cmp.del_flag company_del_flag";
//
//	$sql .= "\n from";
//	$sql .= "\n 	mst_class m_cls";
//	$sql .= "\n  	 	left outer join mst_company m_cmp on m_cls.company_id = m_cmp.id";						//会社マスタ
//
//
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	m_cls.del_flag = ".DELETE_FLAG_NO;
//
//	//クラスID
//	if (isset($condition['id'])) {
//		$buf = null;
//		switch (gettype($condition['id'])) {
//			case 'array':
//				foreach ($condition['id'] as $value) {
//					if (!_IsNull($value)) {
//						if (!_IsNull($buf)) $buf .= ",";
//						$buf .= mysql_real_escape_string($value);
//					}
//				}
//				break;
//			default:
//				if (!_IsNull($condition['id'])) {
//					$buf .= mysql_real_escape_string($condition['id']);
//				}
//				break;
//		}
//		if (!_IsNull($buf)) {
//			$sql .= "\n and	m_cls.id in (".$buf.")";
//		}
//	}
//
//
//	//会社ID
//	if (isset($condition['company_id']) && !_IsNull($condition['company_id'])) {
//		$sql .= "\n and	m_cls.company_id = ".mysql_real_escape_string($condition['company_id'])."";
//	}
//
//
//	if (_IsNull($order)) {
//		$order .= "\n  lpad(m_cmp.show_order,10,'0')";
//		$order .= "\n ,lpad(m_cls.show_order,10,'0')";
//	}
//
//	$sql .= "\n order by";
//	$sql .= " ".$order;
//
//	//検索件数のみ場合、以下の条件は不要
//	if (!$countOnly) {
//		//全件の場合、以下の条件は不要
//		if (!_IsNull($showNumberOfOnePage)) {
//			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
//		}
//	}
//
//	_Log("[_GetMstClass] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$list = null;
//	$count = null;
//	if ($result === false) {
//    	_Log("[_GetMstClass] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetMstClass] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetMstClass] SQL='".$sql."'", 1);
//	} else {
//		$count = mysql_num_rows($result);
//		if (!$countOnly) {
//			$list = array();
//			//検索結果を配列に格納
//			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//
//				//"名称"＋"未削除・削除済"を設定する。
//				$line['name_del_2'] = _FormatName2($line['name'], $line['del_flag']);
//
//				//"会社名称"＋"未削除・削除済"+"名称"＋"未削除・削除済"を設定する。
//				$line['company_plan_name_del_2'] = _FormatName2($line['company_name'], $line['company_del_flag'])."/"._FormatName2($line['name'], $line['del_flag']);
//
//
//				$list[$line['id']] = $line;
//			}
//			if (count($list) == 0) 	$list = null;
//		}
//	}
//
//    _Log("[_GetMstClass] 結果(クラスマスタ情報件数)='".$count."'");
//    _Log("[_GetMstClass] 結果(クラスマスタ情報)='".print_r($list,true)."'");
//    _Log("[_GetMstClass] end.");
//
//	if ($countOnly) {
//		return $count;
//	} else {
//		return $list;
//	}
//
//}
//
//
///**
// * クラスマスタ情報を取得する。
// *
// * @param	mixed   $id				クラスID
// * @param	boolean	$undeleteOnly	未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @return	array	クラスマスタ情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetMstClassInfo($id, $undeleteOnly = true) {
//	_Log("[_GetMstClassInfo] start.");
//
//    _Log("[_GetMstClassInfo] (param) クラスID='".$id."'");
//    _Log("[_GetMstClassInfo] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//
//	if (_IsNull($id)) {
//		_Log("[_GetMstClassInfo] Class Id Is null.");
//		_Log("[_GetMstClassInfo] end.");
//	}
//
//	$condition = array();
//	$condition['id'] = $id;
//	$list = _GetMstClass($condition, null, $undeleteOnly);
//
//	$info = null;
//	if (!_IsNull($list)) $info = $list[$id];
//
//	_Log("[_GetMstClassInfo] 結果 = '".print_r($info,true)."'");
//	_Log("[_GetMstClassInfo] end.");
//	return $info;
//
//}
//
///* end   ----------------------------------------------クラスマスタ---------------------------------------------- end   */
//
//
///* start ----------------------------------------プラン詳細シーズンマスタ---------------------------------------- start */
///**
// * プラン詳細シーズンマスタ情報を取得する。
// *
// * @param	mixed   $condition				検索条件
// * @param	string	$order					ソート条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @param	int		$activePage				表示するページ
// * @param	int		$showNumberOfOnePage	1ページの表示件数
// * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
// * @return	array	予約可能日情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetMstPlanDetailsSeason($condition = null, $order = null, $undeleteOnly = true, $activePage = 1, $showNumberOfOnePage = null, $countOnly = false) {
//	_Log("[_GetMstPlanDetailsSeason] start.");
//
//    _Log("[_GetMstPlanDetailsSeason] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetMstPlanDetailsSeason] (param) ソート条件='".$order."'");
//    _Log("[_GetMstPlanDetailsSeason] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//    _Log("[_GetMstPlanDetailsSeason] (param) 表示するページ='".$activePage."'");
//    _Log("[_GetMstPlanDetailsSeason] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
//    _Log("[_GetMstPlanDetailsSeason] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
//
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  m_pln_dtl_ssn.*";
//	$sql .= "\n ,concat(m_pln_dtl_ssn.start_year,'/',lpad(m_pln_dtl_ssn.start_month,2,'0'),'/',lpad(m_pln_dtl_ssn.start_day,2,'0')) start_date";
//	$sql .= "\n ,concat(m_pln_dtl_ssn.end_year,'/',lpad(m_pln_dtl_ssn.end_month,2,'0'),'/',lpad(m_pln_dtl_ssn.end_day,2,'0')) end_date";
//	$sql .= "\n ,concat(m_pln_dtl_ssn.start_month,'/',m_pln_dtl_ssn.start_day) start_date_md";
//	$sql .= "\n ,concat(m_pln_dtl_ssn.end_month,'/',m_pln_dtl_ssn.end_day) end_date_md";
//
//	$sql .= "\n from";
//	$sql .= "\n 	mst_plan_details_season m_pln_dtl_ssn";
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	m_pln_dtl_ssn.del_flag = ".DELETE_FLAG_NO;
//
//
//	//プランID
//	if (isset($condition['plan_id']) && !_IsNull($condition['plan_id'])) {
//		$sql .= "\n and	m_pln_dtl_ssn.plan_id = ".mysql_real_escape_string($condition['plan_id'])."";
//	}
//	//プラン詳細No
//	if (isset($condition['plan_details_no']) && !_IsNull($condition['plan_details_no'])) {
//		$sql .= "\n and	m_pln_dtl_ssn.plan_details_no = ".mysql_real_escape_string($condition['plan_details_no'])."";
//	}
//
//
//	if (_IsNull($order)) {
//		$order = "\n  m_pln_dtl_ssn.plan_id";
//		$order .= "\n ,m_pln_dtl_ssn.plan_details_no";
//		$order .= "\n ,m_pln_dtl_ssn.no";
//	}
//
//	$sql .= "\n order by";
//	$sql .= " ".$order;
//
//	//検索件数のみ場合、以下の条件は不要
//	if (!$countOnly) {
//		//全件の場合、以下の条件は不要
//		if (!_IsNull($showNumberOfOnePage)) {
//			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
//		}
//	}
//
//	_Log("[_GetMstPlanDetailsSeason] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$list = null;
//	$count = null;
//	if ($result === false) {
//    	_Log("[_GetMstPlanDetailsSeason] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetMstPlanDetailsSeason] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetMstPlanDetailsSeason] SQL='".$sql."'", 1);
//	} else {
//		$count = mysql_num_rows($result);
//		if (!$countOnly) {
//			$list = array();
//			//検索結果を配列に格納
//			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//				$list[$line['plan_id']][$line['plan_details_no']][$line['no']] = $line;
//			}
//			if (count($list) == 0) 	$list = null;
//		}
//	}
//
//    _Log("[_GetMstPlanDetailsSeason] 結果(プラン詳細シーズンマスタ情報件数)='".$count."'");
//    _Log("[_GetMstPlanDetailsSeason] 結果(プラン詳細シーズンマスタ情報)='".print_r($list,true)."'");
//    _Log("[_GetMstPlanDetailsSeason] end.");
//
//	if ($countOnly) {
//		return $count;
//	} else {
//		return $list;
//	}
//
//}
//
//
///**
// * プラン詳細シーズンマスタ情報を取得する。
// * プラン、貸出日時から該当するシーズンを取得する。
// *
// * @param	mixed   $condition				検索条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @return	array	プラン詳細シーズンマスタ情報(取得できなかった場合はnull。)
// * @access  public
// * @since
// */
//function _GetMstPlanDetailsSeasonInfoByStartDate($condition, $undeleteOnly = true) {
//	_Log("[_GetMstPlanDetailsSeasonInfoByStartDate] start.");
//
//    _Log("[_GetMstPlanDetailsSeasonInfoByStartDate] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetMstPlanDetailsSeasonInfoByStartDate] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//
//	if (!isset($condition['plan_id']) || _IsNull($condition['plan_id'])) {
//		_Log("[_GetMstPlanDetailsSeasonInfoByStartDate] plan_id is null.");
//		return null;
//	}
//	if (!isset($condition['year']) || _IsNull($condition['year'])) {
//		_Log("[_GetMstPlanDetailsSeasonInfoByStartDate] year is null.");
//		return null;
//	}
//	if (!isset($condition['month']) || _IsNull($condition['month'])) {
//		_Log("[_GetMstPlanDetailsSeasonInfoByStartDate] month is null.");
//		return null;
//	}
//	if (!isset($condition['day']) || _IsNull($condition['day'])) {
//		_Log("[_GetMstPlanDetailsSeasonInfoByStartDate] day is null.");
//		return null;
//	}
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  m_pln_dtl_ssn.*";
//
//	$sql .= "\n from";
//	$sql .= "\n mst_plan_details_season m_pln_dtl_ssn";
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	m_pln_dtl_ssn.del_flag = ".DELETE_FLAG_NO;
//
//	//プランID
//	$sql .= "\n and	m_pln_dtl_ssn.plan_id = ".mysql_real_escape_string($condition['plan_id'])."";
//
//	//開始年月日~終了年月日
//	$ymd = sprintf('%04d%02d%02d', $condition['year'], $condition['month'], $condition['day']);
//	$sql .= "\n and	concat(m_pln_dtl_ssn.start_year,lpad(m_pln_dtl_ssn.start_month,2,'0'),lpad(m_pln_dtl_ssn.start_day,2,'0')) <= '".mysql_real_escape_string($ymd)."'";
//	$sql .= "\n and	concat(m_pln_dtl_ssn.end_year,lpad(m_pln_dtl_ssn.end_month,2,'0'),lpad(m_pln_dtl_ssn.end_day,2,'0')) >= '".mysql_real_escape_string($ymd)."'";
//
//
//	_Log("[_GetMstPlanDetailsSeasonInfoByStartDate] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$line = null;
//	$count = 0;
//	if ($result === false) {
//    	_Log("[_GetMstPlanDetailsSeasonInfoByStartDate] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetMstPlanDetailsSeasonInfoByStartDate] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetMstPlanDetailsSeasonInfoByStartDate] SQL='".$sql."'", 1);
//	} else {
//		$count = mysql_num_rows($result);
//		$line = mysql_fetch_array($result, MYSQL_ASSOC);
//	}
//
//    _Log("[_GetMstPlanDetailsSeasonInfoByStartDate] 結果(プラン詳細シーズンマスタ情報件数)='".$count."'");
//    _Log("[_GetMstPlanDetailsSeasonInfoByStartDate] 結果(プラン詳細シーズンマスタ情報)='".print_r($line,true)."'");
//    _Log("[_GetMstPlanDetailsSeasonInfoByStartDate] end.");
//
//	if ($count == 0) $line = null;
//	return $line;
//
//}
//
///**
// * プラン詳細シーズンマスタ情報を取得する。
// * 指定したプランの予約可能な最も早い開始日と最も遅い終了日を取得する。
// *
// * @param	int   	$planId			プランID
// * @param	boolean	$undeleteOnly	未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @return	array	開始日と終了日を格納した配列(取得できなかった場合はnull。)
// * @access  public
// * @since
// */
//function _GetMstPlanDetailsSeasonStart2EndDate($planId, $undeleteOnly = true) {
//	_Log("[_GetMstPlanDetailsSeasonStart2EndDate] start.");
//
//    _Log("[_GetMstPlanDetailsSeasonStart2EndDate] (param) プランID='".$planId."'");
//    _Log("[_GetMstPlanDetailsSeasonStart2EndDate] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//
//	if (_IsNull($planId)) {
//		_Log("[_GetMstPlanDetailsSeasonStart2EndDate] plan_id is null.");
//		return null;
//	}
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  min(concat(m_pln_dtl_ssn.start_year,'/',lpad(m_pln_dtl_ssn.start_month,2,'0'),'/',lpad(m_pln_dtl_ssn.start_day,2,'0'))) start_date";
//	$sql .= "\n ,max(concat(m_pln_dtl_ssn.end_year,'/',lpad(m_pln_dtl_ssn.end_month,2,'0'),'/',lpad(m_pln_dtl_ssn.end_day,2,'0'))) end_date";
//
//	$sql .= "\n from";
//	$sql .= "\n mst_plan_details_season m_pln_dtl_ssn";
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	m_pln_dtl_ssn.del_flag = ".DELETE_FLAG_NO;
//
//	//プランID
//	$sql .= "\n and	m_pln_dtl_ssn.plan_id = ".mysql_real_escape_string($planId)."";
//
//
//
//	_Log("[_GetMstPlanDetailsSeasonStart2EndDate] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$line = null;
//	$count = 0;
//	if ($result === false) {
//    	_Log("[_GetMstPlanDetailsSeasonStart2EndDate] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetMstPlanDetailsSeasonStart2EndDate] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetMstPlanDetailsSeasonStart2EndDate] SQL='".$sql."'", 1);
//	} else {
//		$count = mysql_num_rows($result);
//		$line = mysql_fetch_array($result, MYSQL_ASSOC);
//	}
//
//    _Log("[_GetMstPlanDetailsSeasonStart2EndDate] 結果(件数)='".$count."'");
//    _Log("[_GetMstPlanDetailsSeasonStart2EndDate] 結果(期間)='".print_r($line,true)."'");
//    _Log("[_GetMstPlanDetailsSeasonStart2EndDate] end.");
//
//	if ($count == 0) $line = null;
//	return $line;
//
//}
//
///**
// * プラン詳細シーズンマスタ情報を取得する。
// * 期間の日付を文字列で取得する。
// *
// * @param	int  	$planId			プランID
// * @param	int   	$planDetailsNo	プラン詳細No
// * @param	boolean	$undeleteOnly	未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @param	boolean	$futureOnly		現在から未来の期間のみ表示するか？{true:現在から未来のみ/false:過去から未来全て}
// * @param	string  $format			日付のフォーマット
// * @param	string  $delimiter		区切り文字
// * @return	string	期間の日付を文字列(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetMstPlanDetailsSeasonDateStr($planId, $planDetailsNo = null, $undeleteOnly = true, $futureOnly = true, $format = "md", $delimiter = "、") {
//	_Log("[_GetMstPlanDetailsSeasonDateStr] start.");
//
//    _Log("[_GetMstPlanDetailsSeasonDateStr] (param) プランID='".$planId."'");
//    _Log("[_GetMstPlanDetailsSeasonDateStr] (param) プラン詳細No='".$planDetailsNo."'");
//    _Log("[_GetMstPlanDetailsSeasonDateStr] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//    _Log("[_GetMstPlanDetailsSeasonDateStr] (param) 現在から未来の期間のみ表示するか？='".$futureOnly."'");
//
//	$condition = array();
//	$condition['plan_id'] = $planId;					//プランID
//	if (!_IsNull($planDetailsNo)) {
//		$condition['plan_details_no'] = $planDetailsNo;					//プラン詳細No
//	}
//	//ソート条件は、開始年、開始月、開始日の昇順を設定する。
//	$order = "m_pln_dtl_ssn.start_year, m_pln_dtl_ssn.start_month, m_pln_dtl_ssn.start_day";
//	$mstPlanDetailsSeasonList = _GetMstPlanDetailsSeason($condition, $order, $undeleteOnly);
//	if (_IsNull($mstPlanDetailsSeasonList)) {
//		_Log("[_GetMstPlanDetailsSeasonDateStr] MstPlanDetailsSeason is null.");
//		_Log("[_GetMstPlanDetailsSeasonDateStr] end.");
//		return null;
//	}
//
//	//システム日付を取得する。
//	$today = date('Y/m/d');
//
//	$ymd = "";
//	foreach ($mstPlanDetailsSeasonList as $planId => $planDetailsNoList) {
//		foreach ($planDetailsNoList as $planDetailsNo => $noList) {
//			foreach ($noList as $no => $value) {
//
//				//現在から未来の期間のみ表示する場合、過去日かチャックする。
//				if ($futureOnly) {
//					//開始日、終了日が共に過去日の場合、次へ。
//					//echo "".$value['start_date']." < ".$today." && ".$value['end_date']." < ".$today." = '".($value['start_date'] < $today && $value['end_date'] < $today)."'";
//					if ($value['start_date'] < $today && $value['end_date'] < $today) {
//						continue;
//					}
//				}
//
//				if (!_IsNull($ymd)) $ymd .= $delimiter;
//				$key = "";
//				switch ($format) {
//					case 'md':
//						$key = "_".$format;
//						break;
//					default:
//						$key = "";
//						break;
//				}
//				$ymd .= $value['start_date'.$key]."〜".$value['end_date'.$key];
//			}
//		}
//	}
//	_Log("[_GetMstPlanDetailsSeasonDateStr] シーズン(期間) = '".$ymd."'");
//	_Log("[_GetMstPlanDetailsSeasonDateStr] end.");
//	return $ymd;
//}
//
///* end   ----------------------------------------プラン詳細シーズンマスタ---------------------------------------- end   */
//
//
///* start --------------------------------------------プラン詳細マスタ-------------------------------------------- start */
///**
// * プラン詳細マスタ情報を取得する。
// *
// * @param	mixed   $condition				検索条件
// * @param	string	$order					ソート条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @param	int		$activePage				表示するページ
// * @param	int		$showNumberOfOnePage	1ページの表示件数
// * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
// * @return	array	プラン詳細マスタ情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetMstPlanDetails($condition = null, $order = null, $undeleteOnly = true, $activePage = 1, $showNumberOfOnePage = null, $countOnly = false) {
//	_Log("[_GetMstPlanDetails] start.");
//
//    _Log("[_GetMstPlanDetails] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetMstPlanDetails] (param) ソート条件='".$order."'");
//    _Log("[_GetMstPlanDetails] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//    _Log("[_GetMstPlanDetails] (param) 表示するページ='".$activePage."'");
//    _Log("[_GetMstPlanDetails] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
//    _Log("[_GetMstPlanDetails] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
//
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  m_pln_dtl.*";
//
//	$sql .= "\n from";
//	$sql .= "\n mst_plan_details m_pln_dtl";
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	m_pln_dtl.del_flag = ".DELETE_FLAG_NO;
//
//	//プランID
//	if (isset($condition['plan_id']) && !_IsNull($condition['plan_id'])) {
//		$sql .= "\n and	m_pln_dtl.plan_id = ".mysql_real_escape_string($condition['plan_id'])."";
//	}
//	//プラン詳細No
//	if (isset($condition['plan_details_no']) && !_IsNull($condition['plan_details_no'])) {
//		$sql .= "\n and	m_pln_dtl.plan_details_no = ".mysql_real_escape_string($condition['plan_details_no'])."";
//	}
//
//	if (_IsNull($order)) {
//		$order .= "\n m_pln_dtl.plan_id";
//		$order .= "\n ,lpad(m_pln_dtl.show_order,10,'0')";
//		$order .= "\n ,m_pln_dtl.plan_details_no";
//	}
//
//	$sql .= "\n order by";
//	$sql .= " ".$order;
//
//	//検索件数のみ場合、以下の条件は不要
//	if (!$countOnly) {
//		//全件の場合、以下の条件は不要
//		if (!_IsNull($showNumberOfOnePage)) {
//			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
//		}
//	}
//
//	_Log("[_GetMstPlanDetails] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$list = null;
//	$count = null;
//	if ($result === false) {
//    	_Log("[_GetMstPlanDetails] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetMstPlanDetails] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetMstPlanDetails] SQL='".$sql."'", 1);
//	} else {
//		$count = mysql_num_rows($result);
//		if (!$countOnly) {
//			$list = array();
//			//検索結果を配列に格納
//			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//
//				//"名称"＋"未削除・削除済"を設定する。
//				$line['name_del_2'] = _FormatName2($line['name'], $line['del_flag']);
//
//				$list[$line['plan_id']][$line['plan_details_no']] = $line;
//			}
//			if (count($list) == 0) 	$list = null;
//		}
//	}
//
//    _Log("[_GetMstPlanDetails] 結果(プラン詳細マスタ情報件数)='".$count."'");
//    _Log("[_GetMstPlanDetails] 結果(プラン詳細マスタ情報)='".print_r($list,true)."'");
//    _Log("[_GetMstPlanDetails] end.");
//
//	if ($countOnly) {
//		return $count;
//	} else {
//		return $list;
//	}
//
//}
//
///* end   --------------------------------------------プラン詳細マスタ-------------------------------------------- end   */
//
//
//
///* start -----------------------------------------プランキャンセルマスタ----------------------------------------- start */
///**
// * プランキャンセルマスタ情報を取得する。
// *
// * @param	mixed   $condition				検索条件
// * @param	string	$order					ソート条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @param	int		$activePage				表示するページ
// * @param	int		$showNumberOfOnePage	1ページの表示件数
// * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
// * @return	array	プランキャンセルマスタ情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetMstPlanCancellation($condition = null, $order = null, $undeleteOnly = true, $activePage = 1, $showNumberOfOnePage = null, $countOnly = false) {
//	_Log("[_GetMstPlanCancellation] start.");
//
//    _Log("[_GetMstPlanCancellation] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetMstPlanCancellation] (param) ソート条件='".$order."'");
//    _Log("[_GetMstPlanCancellation] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//    _Log("[_GetMstPlanCancellation] (param) 表示するページ='".$activePage."'");
//    _Log("[_GetMstPlanCancellation] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
//    _Log("[_GetMstPlanCancellation] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
//
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  m_pln_cnl.*";
//
//	$sql .= "\n from";
//	$sql .= "\n mst_plan_cancellation m_pln_cnl";
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	m_pln_cnl.del_flag = ".DELETE_FLAG_NO;
//
//	//プランID
//	if (isset($condition['plan_id']) && !_IsNull($condition['plan_id'])) {
//		$sql .= "\n and	m_pln_cnl.plan_id = ".mysql_real_escape_string($condition['plan_id'])."";
//	}
//	//プランキャンセルNo
//	if (isset($condition['plan_cancellation_no']) && !_IsNull($condition['plan_cancellation_no'])) {
//		$sql .= "\n and	m_pln_cnl.plan_cancellation_no = ".mysql_real_escape_string($condition['plan_cancellation_no'])."";
//	}
//
//	if (_IsNull($order)) {
//		$order .= "\n m_pln_cnl.plan_id";
//		$order .= "\n ,lpad(m_pln_cnl.show_order,10,'0')";
//		$order .= "\n ,m_pln_cnl.plan_cancellation_no";
//	}
//
//	$sql .= "\n order by";
//	$sql .= " ".$order;
//
//	//検索件数のみ場合、以下の条件は不要
//	if (!$countOnly) {
//		//全件の場合、以下の条件は不要
//		if (!_IsNull($showNumberOfOnePage)) {
//			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
//		}
//	}
//
//	_Log("[_GetMstPlanCancellation] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$list = null;
//	$count = null;
//	if ($result === false) {
//    	_Log("[_GetMstPlanCancellation] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetMstPlanCancellation] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetMstPlanCancellation] SQL='".$sql."'", 1);
//	} else {
//		$count = mysql_num_rows($result);
//		if (!$countOnly) {
//			$list = array();
//			//検索結果を配列に格納
//			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//				$list[$line['plan_id']][$line['plan_cancellation_no']] = $line;
//			}
//			if (count($list) == 0) 	$list = null;
//		}
//	}
//
//    _Log("[_GetMstPlanCancellation] 結果(プランキャンセルマスタ情報件数)='".$count."'");
//    _Log("[_GetMstPlanCancellation] 結果(プランキャンセルマスタ情報)='".print_r($list,true)."'");
//    _Log("[_GetMstPlanCancellation] end.");
//
//	if ($countOnly) {
//		return $count;
//	} else {
//		return $list;
//	}
//
//}
//
///* end   -----------------------------------------プランキャンセルマスタ----------------------------------------- end   */
//
//
//
//
///* start ------------------------------------------レンタル料金テーブル------------------------------------------ start */
///**
// * レンタル料金テーブル情報を取得する。
// *
// * @param	mixed   $condition				検索条件
// * @param	string	$order					ソート条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @param	int		$activePage				表示するページ
// * @param	int		$showNumberOfOnePage	1ページの表示件数
// * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
// * @return	array	予約可能日情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetTblRentalPrice($condition = null, $order = null, $undeleteOnly = true, $activePage = 1, $showNumberOfOnePage = null, $countOnly = false) {
//	_Log("[_GetTblRentalPrice] start.");
//
//    _Log("[_GetTblRentalPrice] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetTblRentalPrice] (param) ソート条件='".$order."'");
//    _Log("[_GetTblRentalPrice] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//    _Log("[_GetTblRentalPrice] (param) 表示するページ='".$activePage."'");
//    _Log("[_GetTblRentalPrice] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
//    _Log("[_GetTblRentalPrice] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
//
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  t_rtl_prc.*";
//
//	$sql .= "\n  ,m_pln.name plan_name";					//プラン名
//	$sql .= "\n  ,m_pln_dtl.name plan_details_name";		//プラン詳細名
//	$sql .= "\n  ,m_cls.name class_name";					//クラス名
//	$sql .= "\n  ,m_tim.name time_name";					//時間名
//	$sql .= "\n  ,m_tim.value rental_hour";					//時間
//	$sql .= "\n  ,m_ecp_prc.name escape_price_name";		//免責補償料名
//	$sql .= "\n  ,m_ecp_prc.message escape_price_message";	//免責補償料メッセージ
//
//	$sql .= "\n from";
//	$sql .= "\n 	tbl_rental_price t_rtl_prc";
//	$sql .= "\n  	 	left outer join mst_plan m_pln on t_rtl_prc.plan_id = m_pln.id";							//プランマスタ
//	$sql .= "\n  	 	left outer join mst_plan_details m_pln_dtl";												//プラン詳細マスタ
//	$sql .= "\n  	 										on  t_rtl_prc.plan_id = m_pln_dtl.plan_id";
//	$sql .= "\n  	 										and t_rtl_prc.plan_details_no = m_pln_dtl.plan_details_no";
//
//	$sql .= "\n  	 	left outer join mst_class m_cls on t_rtl_prc.class_id = m_cls.id";							//クラスマスタ
//	$sql .= "\n  	 	left outer join mst_time m_tim on t_rtl_prc.time_id = m_tim.id";							//レンタル時間マスタ
//	$sql .= "\n  	 	left outer join mst_escape_price m_ecp_prc on t_rtl_prc.escape_price_id = m_ecp_prc.id";	//免責補償料マスタ
//
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	t_rtl_prc.del_flag = ".DELETE_FLAG_NO;
//
//
//	//プランID
//	if (isset($condition['plan_id']) && !_IsNull($condition['plan_id'])) {
//		$sql .= "\n and	t_rtl_prc.plan_id = ".mysql_real_escape_string($condition['plan_id'])."";
//	}
//	//プラン詳細No
//	if (isset($condition['plan_details_no']) && !_IsNull($condition['plan_details_no'])) {
//		$sql .= "\n and	t_rtl_prc.plan_details_no = ".mysql_real_escape_string($condition['plan_details_no'])."";
//	}
//	//クラスID
//	if (isset($condition['class_id']) && !_IsNull($condition['class_id'])) {
//		$sql .= "\n and	t_rtl_prc.class_id = ".mysql_real_escape_string($condition['class_id'])."";
//	}
//
//
//	if (_IsNull($order)) {
//		$order .= "\n lpad(m_pln.show_order,10,'0')";
//		$order .= "\n ,lpad(m_pln_dtl.show_order,10,'0')";
//		$order .= "\n ,lpad(m_cls.show_order,10,'0')";
//		$order .= "\n ,lpad(m_tim.show_order,10,'0')";
//		$order .= "\n ,t_rtl_prc.plan_id";
//		$order .= "\n ,t_rtl_prc.plan_details_no";
//		$order .= "\n ,t_rtl_prc.class_id";
//		$order .= "\n ,t_rtl_prc.time_id";
//	}
//
//	$sql .= "\n order by";
//	$sql .= " ".$order;
//
//	//検索件数のみ場合、以下の条件は不要
//	if (!$countOnly) {
//		//全件の場合、以下の条件は不要
//		if (!_IsNull($showNumberOfOnePage)) {
//			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
//		}
//	}
//
//	_Log("[_GetTblRentalPrice] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$list = null;
//	$count = null;
//	if ($result === false) {
//    	_Log("[_GetTblRentalPrice] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetTblRentalPrice] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetTblRentalPrice] SQL='".$sql."'", 1);
//	} else {
//		$count = mysql_num_rows($result);
//		if (!$countOnly) {
//			$list = array();
//			//検索結果を配列に格納
//			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//				$list[$line['plan_id']][$line['plan_details_no']][$line['class_id']][$line['time_id']] = $line;
//			}
//			if (count($list) == 0) 	$list = null;
//		}
//	}
//
//    _Log("[_GetTblRentalPrice] 結果(レンタル料金テーブル情報件数)='".$count."'");
//    _Log("[_GetTblRentalPrice] 結果(レンタル料金テーブル情報)='".print_r($list,true)."'");
//    _Log("[_GetTblRentalPrice] end.");
//
//	if ($countOnly) {
//		return $count;
//	} else {
//		return $list;
//	}
//
//}
//
//
///**
// * 指定したプランIDに対応するクラスIDを取得する。
// *
// * @param	int   	$planId					プランID
// * @param	string	$order					ソート条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @param	boolean	$undeleteOnly4Class		クラスマスタに対して未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @return	array	クラスマスタ情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetClassList($planId, $order = null, $undeleteOnly = true, $undeleteOnly4Class = true) {
//	_Log("[_GetClassList] start.");
//
//    _Log("[_GetClassList] (param) プランID='".$planId."'");
//    _Log("[_GetClassList] (param) ソート条件='".$order."'");
//    _Log("[_GetClassList] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//
//	if (_IsNull($planId)) {
//		_Log("[_GetClassList] Plan Id is null.");
//		_Log("[_GetClassList] end.");
//		return null;
//	}
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  distinct";
//	$sql .= "\n  m_cls.*";
//	$sql .= "\n from";
//	$sql .= "\n 	tbl_rental_price t_rtl_prc";
//	$sql .= "\n  	 	left outer join mst_class m_cls on t_rtl_prc.class_id = m_cls.id";						//クラスマスタ
//
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	t_rtl_prc.del_flag = ".DELETE_FLAG_NO;
//
//	//クラスマスタ削除フラグ
//	if ($undeleteOnly4Class) $sql .= "\n and	m_cls.del_flag = ".DELETE_FLAG_NO;
//
//	//プランID
//	$sql .= "\n and	t_rtl_prc.plan_id = ".mysql_real_escape_string($planId)."";
//
//
//	if (_IsNull($order)) {
//		$order .= "\n  lpad(m_cls.show_order,10,'0')";
//		$order .= "\n ,t_rtl_prc.class_id";
//	}
//
//	$sql .= "\n order by";
//	$sql .= " ".$order;
//
//
//	_Log("[_GetClassList] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$list = null;
//	$count = null;
//	if ($result === false) {
//    	_Log("[_GetClassList] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetClassList] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetClassList] SQL='".$sql."'", 1);
//	} else {
//		$count = mysql_num_rows($result);
//		$list = array();
//		//検索結果を配列に格納
//		while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//			$list[$line['id']] = $line;
//		}
//		if (count($list) == 0) 	$list = null;
//	}
//
//    _Log("[_GetClassList] 結果(クラスマスタ情報件数)='".$count."'");
//    _Log("[_GetClassList] 結果(クラスマスタ情報)='".print_r($list,true)."'");
//    _Log("[_GetClassList] end.");
//
//	return $list;
//
//}
///////
//
//
//
//
//
///**
// * 指定したクラスがプラン、プラン詳細No(シーズン)に存在するか？
// *
// * @param	mixed   $condition				検索条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @return	boolean	true:存在する/false:存在しない
// * @access  public
// * @since   3.2.0
// */
//function _ExistClass($condition, $undeleteOnly = true) {
//	_Log("[_ExistClass] start.");
//
//    _Log("[_ExistClass] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_ExistClass] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//
//	if (!isset($condition['plan_id']) || _IsNull($condition['plan_id'])) {
//		_Log("[_ExistClass] plan_id is null.");
//		return false;
//	}
//	if (!isset($condition['plan_details_no']) || _IsNull($condition['plan_details_no'])) {
//		_Log("[_ExistClass] plan_details_no is null.");
//		return false;
//	}
//	if (!isset($condition['class_id']) || _IsNull($condition['class_id'])) {
//		_Log("[_ExistClass] class_id is null.");
//		return false;
//	}
//
//
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  sign(count(*)) exist_flag";
//
//	$sql .= "\n from";
//	$sql .= "\n tbl_rental_price t_rtl_prc";
//
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	t_rtl_prc.del_flag = ".DELETE_FLAG_NO;
//
//
//	//プランID
//	$sql .= "\n and	t_rtl_prc.plan_id = ".mysql_real_escape_string($condition['plan_id'])."";
//	//プラン詳細No
//	$sql .= "\n and	t_rtl_prc.plan_details_no = ".mysql_real_escape_string($condition['plan_details_no'])."";
//	//クラスID
//	$sql .= "\n and	t_rtl_prc.class_id = ".mysql_real_escape_string($condition['class_id'])."";
//
//
//	_Log("[_ExistClass] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$line = null;
//	if ($result === false) {
//    	_Log("[_ExistClass] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_ExistClass] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_ExistClass] SQL='".$sql."'", 1);
//	} else {
//		//検索結果を配列に格納
//		$line = mysql_fetch_array($result, MYSQL_ASSOC);
//	}
//
//    _Log("[_ExistClass] 結果='".$line['exist_flag']."'");
//    _Log("[_ExistClass] end.");
//
//	return ($line['exist_flag'] == 1);
//
//}
//
//
//
///**
// * プラン、プラン詳細No(シーズン)、クラス、レンタル期間から料金を計算する。
// *
// * @param	mixed   $condition		検索条件
// * @param	string   $message		エラーメッセージ
// * @param	boolean	$undeleteOnly	未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @return	array	料金(取得できなかった場合はnull。)
// * @access  public
// * @since
// */
//function _GetRentalPrice($condition, &$message, $undeleteOnly = true) {
//	_Log("[_GetRentalPrice] start.");
//
//    _Log("[_GetRentalPrice] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetRentalPrice] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//
//	if (!isset($condition['plan_id']) || _IsNull($condition['plan_id'])) {
//		_Log("[_GetRentalPrice] plan_id is null.");
//		return null;
//	}
//	if (!isset($condition['plan_details_no']) || _IsNull($condition['plan_details_no'])) {
//		_Log("[_GetRentalPrice] plan_details_no is null.");
//		return null;
//	}
//	if (!isset($condition['class_id']) || _IsNull($condition['class_id'])) {
//		_Log("[_GetRentalPrice] class_id is null.");
//		return null;
//	}
//
//	if (!isset($condition['rental_start_year']) || _IsNull($condition['rental_start_year'])) {
//		_Log("[_GetRentalPrice] rental_start_year is null.");
//		return null;
//	}
//	if (!isset($condition['rental_start_month']) || _IsNull($condition['rental_start_month'])) {
//		_Log("[_GetRentalPrice] rental_start_month is null.");
//		return null;
//	}
//	if (!isset($condition['rental_start_day']) || _IsNull($condition['rental_start_day'])) {
//		_Log("[_GetRentalPrice] rental_start_day is null.");
//		return null;
//	}
//	if (!isset($condition['rental_start_hour']) || _IsNull($condition['rental_start_hour'])) {
//		_Log("[_GetRentalPrice] rental_start_hour is null.");
//		return null;
//	}
//	if (!isset($condition['rental_start_minute']) || _IsNull($condition['rental_start_minute'])) {
//		_Log("[_GetRentalPrice] rental_start_minute is null.");
//		return null;
//	}
//
//	if (!isset($condition['rental_end_year']) || _IsNull($condition['rental_end_year'])) {
//		_Log("[_GetRentalPrice] rental_end_year is null.");
//		return null;
//	}
//	if (!isset($condition['rental_end_month']) || _IsNull($condition['rental_end_month'])) {
//		_Log("[_GetRentalPrice] rental_end_month is null.");
//		return null;
//	}
//	if (!isset($condition['rental_end_day']) || _IsNull($condition['rental_end_day'])) {
//		_Log("[_GetRentalPrice] rental_end_day is null.");
//		return null;
//	}
//	if (!isset($condition['rental_end_hour']) || _IsNull($condition['rental_end_hour'])) {
//		_Log("[_GetRentalPrice] rental_end_hour is null.");
//		return null;
//	}
//	if (!isset($condition['rental_end_minute']) || _IsNull($condition['rental_end_minute'])) {
//		_Log("[_GetRentalPrice] rental_end_minute is null.");
//		return null;
//	}
//	$cond = array();
//	$cond['plan_id'] = $condition['plan_id'];						//プランID
//	$cond['plan_details_no'] = $condition['plan_details_no'];	//プラン詳細No
//	$cond['class_id'] = $condition['class_id'];					//クラスID
//	$tblRentalPriceList = _GetTblRentalPrice($cond, null, $undeleteOnly);
//	if (_IsNull($tblRentalPriceList)) {
//		_Log("[_GetRentalPrice] tbl_rental_price's info is not found.");
//		return null;
//	}
//
//
//	//何日間のレンタルかを取得する。
//
//	//(ログ用)貸出日
//	$rentalStartDate = sprintf('%04d/%02d/%02d %02d:%02d', $condition['rental_start_year'], $condition['rental_start_month'], $condition['rental_start_day'], $condition['rental_start_hour'], $condition['rental_start_minute']);
//	//(ログ用)返却日
//	$rentalEndDate = sprintf('%04d/%02d/%02d %02d:%02d', $condition['rental_end_year'], $condition['rental_end_month'], $condition['rental_end_day'], $condition['rental_end_hour'], $condition['rental_end_minute']);
//
//	//タイムスタンプを取得する。
//
//
////test
////	//貸出日
////	$timeStartDate = mktime (0, 0, 0, $condition['rental_start_month'], $condition['rental_start_day'], $condition['rental_start_year']);
////	//返却日
////	$timeEndtDate = mktime (0, 0, 0, $condition['rental_end_month'], $condition['rental_end_day'], $condition['rental_end_year']);
////	//レンタルのトータル日数を取得する。(ceil=端数の切り上げ)
////	$totalDay = ceil(($timeEndtDate - $timeStartDate) / (60*60*24));
////	//レンタルのトータル時間を取得する。
////	$totalHour = ($timeEndtDate - $timeStartDate) / (60*60);
////
////	_Log("[_GetRentalPrice] (test)貸出日 = '".$rentalStartDate."'");
////	_Log("[_GetRentalPrice] (test)返却日 = '".$rentalEndDate."'");
////	_Log("[_GetRentalPrice] (test)貸出日(タイムスタンプ) = '".$timeStartDate."'");
////	_Log("[_GetRentalPrice] (test)返却日(タイムスタンプ) = '".$timeEndtDate."'");
////	_Log("[_GetRentalPrice] (test)レンタルトータル日数 = '".$totalDay."'");
////	_Log("[_GetRentalPrice] (test)レンタルトータル時間 = '".$totalHour."'");
////test
//
//
//
//
//
//	//貸出日
//	$timeStartDate = mktime ($condition['rental_start_hour'], $condition['rental_start_minute'], 0, $condition['rental_start_month'], $condition['rental_start_day'], $condition['rental_start_year']);
//	//返却日
//	$timeEndDate = mktime ($condition['rental_end_hour'], $condition['rental_end_minute'], 0, $condition['rental_end_month'], $condition['rental_end_day'], $condition['rental_end_year']);
//	//レンタルのトータル日数を取得する。(ceil=端数の切り上げ)
//	$totalDay = ceil(($timeEndDate - $timeStartDate) / (60*60*24));
//	//レンタルのトータル時間を取得する。
//	$totalHour = ($timeEndDate - $timeStartDate) / (60*60);
//
//
//
//	_Log("[_GetRentalPrice] 貸出日 = '".$rentalStartDate."'");
//	_Log("[_GetRentalPrice] 返却日 = '".$rentalEndDate."'");
//	_Log("[_GetRentalPrice] 貸出日(タイムスタンプ) = '".$timeStartDate."'");
//	_Log("[_GetRentalPrice] 返却日(タイムスタンプ) = '".$timeEndDate."'");
//	_Log("[_GetRentalPrice] レンタルトータル日数 = '".$totalDay."'");
//	_Log("[_GetRentalPrice] レンタルトータル時間 = '".$totalHour."'");
//
//
////add start 2007/08/21 d.ishikawa レンタル日数の計算を修正
//	//レンタルのトータル時間が24時間以上か以下でトータル日数、時間を調整する。
//	if ($totalHour < 24) {
//		//24時間より小さい場合
//
//		//24時間以下の場合、同一日内か？
//		//貸出日
//		$timeStartDate4SameDate = mktime(0, 0, 0, $condition['rental_start_month'], $condition['rental_start_day'], $condition['rental_start_year']);
//		//返却日
//		$timeEndDate4SameDate = mktime(0, 0, 0, $condition['rental_end_month'], $condition['rental_end_day'], $condition['rental_end_year']);
//		//レンタルのトータル日数を取得する。(ceil=端数の切り上げ)
//		$totalDay4SameDate = ceil(($timeEndDate4SameDate - $timeStartDate4SameDate) / (60*60*24));
//
//		_Log("[_GetRentalPrice] 同一日内か？→貸出日(タイムスタンプ) = '".$timeStartDate4SameDate."'");
//		_Log("[_GetRentalPrice] 同一日内か？→返却日(タイムスタンプ) = '".$timeEndDate4SameDate."'");
//		_Log("[_GetRentalPrice] 同一日内か？→レンタルトータル日数 = '".$totalDay4SameDate."'");
//
//		if ($totalDay4SameDate <= 0) {
//			//同一日の場合
//			//→このままでOK
//			_Log("[_GetRentalPrice] 同一日内か？→YES");
//		} else {
//			//日付が違う場合→"6時間以内"、"当日"ではなく、"1泊2日"とする。
//
//			_Log("[_GetRentalPrice] 同一日内か？→NO　「6時間以内」、「当日」ではなく、「1泊2日」とする。");
//
//
//			//レンタルのトータル日数に2を設定する。
//			$totalDay = 2;
//			//レンタルのトータル時間に48を設定する。
//			$totalHour = 48;
//		}
//	} else {
//		//24時間以上の場合
//
//		//年月日のみで再計算する。
//
//		//貸出日
//		$timeStartDate = mktime (0, 0, 0, $condition['rental_start_month'], $condition['rental_start_day'], $condition['rental_start_year']);
//		//返却日
//		$timeEndDate = mktime (0, 0, 0, $condition['rental_end_month'], $condition['rental_end_day']+1, $condition['rental_end_year']);
//		//レンタルのトータル日数を取得する。(ceil=端数の切り上げ)
//		$totalDay = ceil(($timeEndDate - $timeStartDate) / (60*60*24));
//		//レンタルのトータル時間を取得する。
//		$totalHour = ($timeEndDate - $timeStartDate) / (60*60);
//
//		_Log("[_GetRentalPrice] 貸出日(タイムスタンプ)(再計算) = '".$timeStartDate."'");
//		_Log("[_GetRentalPrice] 返却日(タイムスタンプ)(再計算) = '".$timeEndDate."'");
//		_Log("[_GetRentalPrice] レンタルトータル日数(再計算) = '".$totalDay."'");
//		_Log("[_GetRentalPrice] レンタルトータル時間(再計算) = '".$totalHour."'");
//
//
//	}
//	_Log("[_GetRentalPrice] レンタルトータル日数(調整後) = '".$totalDay."'");
//	_Log("[_GetRentalPrice] レンタルトータル時間(調整後) = '".$totalHour."'");
////add end 2007/08/21 d.ishikawa レンタル日数の計算を修正
//
//
//
//	//プラン、シーズン、クラスに対応するレンタル料金を取得する。
//	$rentalPriceList = $tblRentalPriceList[$condition['plan_id']][$condition['plan_details_no']][$condition['class_id']];
//
//	//レンタル時間に該当する基本料金を取得する。
//	$rentalPriceInfo = null;
//	$maxRentalPriceInfo = null;
//	//基本料金は、レンタル時間の昇順に格納されている。(6時間以内、当日、1泊2日、…)
//	foreach ($rentalPriceList as $timeId => $value) {
//		//レンタルのトータル時間に一番近い基本料金を取得する。
//		if (!_IsNull($value['rental_hour'])) {
//			$rentalHour = (int)$value['rental_hour'];
//			if ($rentalHour >= $totalHour) {
//				if (_IsNull($rentalPriceInfo)) {
//					$rentalPriceInfo = $value;
//				}
//			}
//
//			//最大基本料金を取得する。
//			$maxRentalPriceInfo = $value;
//		}
//	}
//
//	_Log("[_GetRentalPrice] 該当の基本料金 = '".print_r($rentalPriceInfo, true)."'");
//	_Log("[_GetRentalPrice] 最大の基本料金 = '".print_r($maxRentalPriceInfo, true)."'");
//
//	//該当の基本料金が存在しない場合、"以後1日毎"の料金を加算して料金を計算する。
//	if (_IsNull($rentalPriceInfo)) {
//		//"以後1日毎"の料金を取得する。
//		if (!isset($rentalPriceList[MST_TIME_ID_ADD_024])) {
//			//"以後1日毎"の料金が設定されていない場合、基本料金のレンタル期間より延長はできない。(例:期間延長無しで4泊5日までのプランがある。)
//			$message = $maxRentalPriceInfo['plan_name']."の場合、".$maxRentalPriceInfo['time_name']."までの予約となります。期間の延長はできません。他の料金プランをご利用ください。<br />";
//			return null;
//		}
//
//		//"以後1日毎"の料金が設定されている場合
//
//		//レンタルのトータル時間に一番近い基本料金が無かった場合、最大基本料金を設定する。最大基本料金以降は"以後1日毎"の料金を追加する。
//
//
//		//最大基本料金のレンタル時間を取得する。
//		$rentalHour = (int)$maxRentalPriceInfo['rental_hour'];
//		//最大基本料金に追加するレンタル時間を取得する。
//		$addRentalHour = $totalHour - $rentalHour;
//		//追加するレンタル時間を日単位にする。
//		$addRentalDay = ceil($addRentalHour / 24);
//
//
//		//追加する料金を計算する。
//		$addRentalPrice = $rentalPriceList[MST_TIME_ID_ADD_024]['price'] * $addRentalDay;
//		//レンタル日数を再設定する。
//		$stay = $totalDay - 1;
//		$timeName = "";
//		if ($stay < 1) {
//			$timeName = $totalDay."日";
//		} else {
//			$timeName = $stay."泊".$totalDay."日";
//		}
//
//		//最大基本料金の以下の情報を再設定する。
//		$rentalPriceInfo = $maxRentalPriceInfo;
//		$rentalPriceInfo['base_price'] = $rentalPriceInfo['price'] + $addRentalPrice;		//基本料金
//		$rentalPriceInfo['total_time_name'] = $timeName;									//日数
//		$rentalPriceInfo['total_rental_hour'] = $totalHour;								//レンタル時間
//
//
//		_Log("[_GetRentalPrice] (最大の基本料金に追加)追加レンタル時間 = '".$addRentalHour."'");
//		_Log("[_GetRentalPrice] (最大の基本料金に追加)追加レンタル日数 = '".$addRentalDay."'");
//		_Log("[_GetRentalPrice] (最大の基本料金に追加)追加'以後1日毎'の料金 = '".$rentalPriceList[MST_TIME_ID_ADD_024]['price']."'");
//		_Log("[_GetRentalPrice] (最大の基本料金に追加)追加料金 = '".$addRentalPrice."'");
//		_Log("[_GetRentalPrice] (最大の基本料金に追加)追加後合計料金 = '".$rentalPriceInfo['base_price']."'");
//		_Log("[_GetRentalPrice] (最大の基本料金に追加)追加後合計日数 = '".$rentalPriceInfo['total_time_name']."'");
//		_Log("[_GetRentalPrice] (最大の基本料金に追加)追加後合計時間 = '".$rentalPriceInfo['total_rental_hour']."'");
//
//		//追加料金の情報も設定する。(2007/05/11現在、参考用)
//		$addPriceInfo = $rentalPriceList[MST_TIME_ID_ADD_024];
//		$addPriceInfo['add_rental_hour'] = $addRentalHour;
//		$addPriceInfo['add_rental_day'] = $addRentalDay;
//		$addPriceInfo['add_rental_price'] = $addRentalPrice;
//		$rentalPriceInfo['add_price_info'] = $addPriceInfo;
//	} else {
//		$rentalPriceInfo['base_price'] = $rentalPriceInfo['price'];						//基本料金
//		$rentalPriceInfo['total_time_name'] = $rentalPriceInfo['time_name'];			//日数
//		$rentalPriceInfo['total_rental_hour'] = $rentalPriceInfo['rental_hour'];		//レンタル時間
//	}
//
//	$rentalPriceInfo['total_rental_day'] = ceil($rentalPriceInfo['total_rental_hour'] / 24);		//レンタル日数
//
//	//免責補償料を計算する。
//	if (isset($rentalPriceList[MST_TIME_ID_ESCAPE])) {
//		//免責補償料を日数で掛ける。
//		//$escapePrice = $rentalPriceList[MST_TIME_ID_ESCAPE]['price'] * $totalDay;
//		//$escapePrice = $rentalPriceList[MST_TIME_ID_ESCAPE]['price'] * ceil($rentalPriceInfo['total_rental_hour'] / 24);
//		$escapePrice = $rentalPriceList[MST_TIME_ID_ESCAPE]['price'] * $rentalPriceInfo['total_rental_day'];
//
//		$escapePriceName = $rentalPriceList[MST_TIME_ID_ESCAPE]['escape_price_name'];
//		$escapePriceMessage = $rentalPriceList[MST_TIME_ID_ESCAPE]['escape_price_message'];
//
//		_Log("[_GetRentalPrice] 免責補償料1日毎 = '".$rentalPriceList[MST_TIME_ID_ESCAPE]['price']."'");
//		_Log("[_GetRentalPrice] 免責補償料1日毎(文字) = '".$rentalPriceList[MST_TIME_ID_ESCAPE]['escape_price_name']."'");
//		_Log("[_GetRentalPrice] 免責補償料1日毎(メッセージ) = '".$rentalPriceList[MST_TIME_ID_ESCAPE]['escape_price_message']."'");
//		_Log("[_GetRentalPrice] 免責補償料合計 = '".$escapePrice."'");
//
//		$rentalPriceInfo['escape_price'] = $escapePrice;
//		$rentalPriceInfo['escape_price_name'] = $escapePriceName;
//		$rentalPriceInfo['escape_price_message'] = $escapePriceMessage;
//	} else {
//		_Log("[_GetRentalPrice] 免責補償料無し又は基本料に込み");
//	}
//
//	//オプションの料金を計算する。
//	if (isset($condition['option_id'])) {
//		//オプションマスタの情報を取得する。
//		$mstOptionList = _GetMstOptionList(false);
//		if (!_IsNull($mstOptionList)) {
//			$bufOptionList = array();
//
//			foreach ($condition['option_id'] as $key => $optionId) {
//				//オプションマスタの情報を取得する。
//				$mstOptionInfo = (isset($mstOptionList[$optionId])?$mstOptionList[$optionId]:null);
//				if (!_IsNull($mstOptionInfo)) {
//					//オプション基本料金を設定する。
//					$optionBasePrice = 0;
//					switch ($mstOptionInfo['id']) {
//						case MST_OPTION_ID_NONSMOKING:
//							//"禁煙車"の場合
//							//クラスによって金額が変わる。
//							switch ($condition['class_id']) {
//								case MST_CLASS_ID_WA:
//									//WAクラスの場合
//									$optionBasePrice = $mstOptionInfo['price2'];
//									break;
//								default:
//									//その他
//									$optionBasePrice = $mstOptionInfo['price'];
//									break;
//							}
//							break;
//						default:
//							//"その他"の場合
//							$optionBasePrice = $mstOptionInfo['price'];
//							break;
//					}
//
//					//料金の単位によって、料金を計算する。
//					$optionPrice = 0;
//					switch ($mstOptionInfo['unit_id']) {
//						case MST_OPTION_UNIT_ID_ONE_TIME:
//							//1回
//							$optionPrice = $optionBasePrice;
//							break;
//						case MST_OPTION_UNIT_ID_ONE_DAY:
//							//1日毎
//							$optionPrice = $optionBasePrice * $totalDay;
//							break;
//					}
//
//
//					_Log("[_GetRentalPrice] オプション = '".$mstOptionInfo['option_name']."'");
//					_Log("[_GetRentalPrice] オプション基本料金 = '".$optionBasePrice."'");
//					_Log("[_GetRentalPrice] オプション合計料金 = '".$optionPrice."'");
//
//					$mstOptionInfo['base_price'] = $optionBasePrice;
//					$mstOptionInfo['total_price'] = $optionPrice;
//					$bufOptionList[] = $mstOptionInfo;
//				}
//			}
//
//			$rentalPriceInfo['option'] = $bufOptionList;
//		}
//
//	}
//
//	//合計金額を計算する。
//	$totalPrice = 0;
//	//基本料金
//	$totalPrice += $rentalPriceInfo['base_price'];
//	//免責補償料
//	if (isset($rentalPriceInfo['escape_price'])) {
//		$totalPrice += $rentalPriceInfo['escape_price'];
//	}
//	//オプション
//	if (isset($rentalPriceInfo['option'])) {
//		foreach ($rentalPriceInfo['option'] as $key => $value) {
//			$totalPrice += $value['total_price'];
//		}
//
//	}
//	$rentalPriceInfo['total_price'] = $totalPrice;
//
//	//プランキャンセルマスタの情報を取得する。
//	$cond = array();
//	$cond['plan_id'] = $condition['plan_id'];						//プランID
//	$mstPlanCancellationList = _GetMstPlanCancellation($cond);
//	if (!_IsNull($mstPlanCancellationList)) {
//		if (isset($mstPlanCancellationList[$condition['plan_id']])) {
//			$rentalPriceInfo['plan_cancellation_info'] = $mstPlanCancellationList[$condition['plan_id']];
//		}
//	}
//
//	_Log("[_GetRentalPrice] 該当の基本料金(再計算後) = '".print_r($rentalPriceInfo, true)."'");
//	return $rentalPriceInfo;
//
//}
//
///* end   ------------------------------------------レンタル料金テーブル------------------------------------------ end   */
//
//
//
//
///* start --------------------------------------------予約関連テーブル-------------------------------------------- start */
///**
// * 予約情報を登録する。
// *
// * @param	mixed	$info	予約情報
// * @return	boolean/int	登録できたか？{false:失敗/採番された予約ID:成功}
// * @access  public
// * @since
// */
//function _CreateReservationInfo($info) {
//
//	_Log("[_CreateReservationInfo] start.");
//
//    _Log("[_CreateReservationInfo] (param) 予約情報 = '".print_r($info,true)."'");
//
//	$return = false;
//
//	//顧客情報を登録する。================================================================
//	//顧客情報を設定する。(以下は、顧客テーブル"tbl_user"のフィールドと同じ項目。)
//	$userInfo = array();
//	$userInfo['user_id'] = null;								//ユーザーID
//	$userInfo['account'] = null;								//アカウント
//	$userInfo['pass'] = null;									//パスワード
//	$userInfo['name'] = $info['name'];							//名前
//	$userInfo['name_kana'] = $info['name_kana'];				//ふりがな
//	$userInfo['birth_year'] = null;							//生年月日(年)
//	$userInfo['birth_month'] = null;							//生年月日(月)
//	$userInfo['birth_day'] = null;							//生年月日(日)
//	$userInfo['sex_id'] = null;								//性別
//	$userInfo['zip1'] = $info['zip1'];							//郵便番号1
//	$userInfo['zip2'] = $info['zip2'];							//郵便番号2
//	$userInfo['pref_id'] = $info['pref_id'];					//住所(都道府県)
//	$userInfo['address1'] = $info['address1'];				//住所(市町村番地)
//	$userInfo['address2'] = $info['address2'];				//住所(マンション等)
//	$userInfo['e_mail'] = $info['e_mail'];					//E-Mail
//	$userInfo['tel1'] = $info['tel1'];							//電話番号1
//	$userInfo['tel2'] = $info['tel2'];							//電話番号2
//	$userInfo['tel3'] = $info['tel3'];							//電話番号3
//	$userInfo['mobile1'] = $info['mobile1'];					//携帯番号1
//	$userInfo['mobile2'] = $info['mobile2'];					//携帯番号2
//	$userInfo['mobile3'] = $info['mobile3'];					//携帯番号3
//	$userInfo['fax1'] = null;									//FAX番号1
//	$userInfo['fax2'] = null;									//FAX番号2
//	$userInfo['fax3'] = null;									//FAX番号3
//	$userInfo['auth_id'] = USER_AUTH_NON;						//権限
//	$userInfo['note'] = null;									//備考
//	$userInfo['del_flag'] = DELETE_FLAG_NO;					//削除フラグ
//	$userInfo['create_ip'] = $_SERVER["REMOTE_ADDR"];			//作成IP
//	$userInfo['create_date'] = null;							//作成日
//	$userInfo['update_ip'] = $_SERVER["REMOTE_ADDR"];			//更新IP
//	$userInfo['update_date'] = null;							//更新日
//
//	//顧客情報を登録する。
//	$userId = _DB_CreateInfo('tbl_user', $userInfo);
//    _Log("[_CreateReservationInfo] 顧客情報の登録結果 = '".$userId."'");
//	if ($userId === false) {
//		_Log("[_CreateReservationInfo] 顧客情報の登録に失敗しました。", 1);
//		_Log("[_CreateReservationInfo] ユーザーID=nullとして、予約情報の登録を続ける。", 1);
//		$userId = null;
//	}
//
//
//
//
//	//予約情報を登録する。================================================================
//	//予約情報を設定する。(以下は、予約テーブル"tbl_reservation"のフィールドと同じ項目。)
//	$reservationInfo = array();
//	$reservationInfo['reservation_id'] = null;																//予約ID
//	$reservationInfo['user_id'] = $userId;																		//顧客ID
//	$reservationInfo['plan_id'] = $info['plan_id'];															//プランID
//	$reservationInfo['plan_details_no'] = $info['plan_details_no'];											//プラン詳細No
//	$reservationInfo['class_id'] = $info['class_id'];															//クラスID
//	$reservationInfo['rental_start_year'] = $info['rental_start_year'];									//貸出日時(年)
//	$reservationInfo['rental_start_month'] = $info['rental_start_month'];									//貸出日時(月)
//	$reservationInfo['rental_start_day'] = $info['rental_start_day'];										//貸出日時(日)
//	$reservationInfo['rental_start_hour'] = $info['rental_start_hour'];									//貸出日時(時)
//	$reservationInfo['rental_start_minute'] = $info['rental_start_minute'];								//貸出日時(分)
//	$reservationInfo['rental_end_year'] = $info['rental_end_year'];											//返却日時(年)
//	$reservationInfo['rental_end_month'] = $info['rental_end_month'];										//返却日時(月)
//	$reservationInfo['rental_end_day'] = $info['rental_end_day'];											//返却日時(日)
//	$reservationInfo['rental_end_hour'] = $info['rental_end_hour'];											//返却日時(時)
//	$reservationInfo['rental_end_minute'] = $info['rental_end_minute'];									//返却日時(分)
//
//	$reservationInfo['total_time_name'] = $info['rental_price']['total_time_name'];						//レンタル期間
//	$reservationInfo['total_rental_hour'] = $info['rental_price']['total_rental_hour'];					//レンタル時間
//	$reservationInfo['total_rental_day'] = $info['rental_price']['total_rental_day'];					//レンタル日数
//	$reservationInfo['base_price'] = $info['rental_price']['base_price'];									//基本料金
//	$reservationInfo['escape_price'] = $info['rental_price']['escape_price'];								//免責補償料
//	$reservationInfo['escape_price_name'] = $info['rental_price']['escape_price_name'];					//免責補償料(文字)
//	$reservationInfo['escape_price_message'] = $info['rental_price']['escape_price_message'];			//免責補償料(メッセージ)
//
//	$reservationInfo['shop_id'] = $info['shop_id'];															//利用店舗
//	$reservationInfo['arrive_airline_id'] = $info['arrive_airline_id'];									//沖縄到着便(航空会社)
//	$reservationInfo['arrive_airline_no'] = $info['arrive_airline_no'];									//沖縄到着便(航空便)
//	$reservationInfo['leave_airline_id'] = $info['leave_airline_id'];										//沖縄出発便(航空会社)
//	$reservationInfo['leave_airline_no'] = $info['leave_airline_no'];										//沖縄出発便(航空便)
//	$reservationInfo['people_num'] = $info['people_num'];													//同行者
//	$reservationInfo['note'] = $info['note'];																	//備考
//	$reservationInfo['del_flag'] = DELETE_FLAG_NO;																//削除フラグ
//	$reservationInfo['create_ip'] = $_SERVER["REMOTE_ADDR"];													//作成IP
//	$reservationInfo['create_date'] = null;																	//作成日
//	$reservationInfo['update_ip'] = $_SERVER["REMOTE_ADDR"];													//更新IP
//	$reservationInfo['update_date'] = null;																	//更新日
//
//	//予約情報を登録する。
//	$reservationId = _DB_CreateInfo('tbl_reservation', $reservationInfo);
//    _Log("[_CreateReservationInfo] 予約情報の登録結果 = '".$reservationId."'");
//	if ($reservationId === false) {
//		_Log("[_CreateReservationInfo] 予約情報の登録に失敗しました。", 1);
//		_Log("[_CreateReservationInfo] 予約オプション情報の登録も中止して、処理を終了する。", 1);
//
//		_Log("[_CreateReservationInfo] 処理結果 = '".$return."'");
//		_Log("[_CreateReservationInfo] end.");
//
//		return $return;
//	} else {
//		$return = $reservationId;
//	}
//
//
//	//予約オプション情報を登録する。======================================================
//	if (isset($info['rental_price']['option'])) {
//		foreach ($info['rental_price']['option'] as $optionInfo) {
//
//			//予約オプション情報を設定する。(以下は、予約オプションテーブル"tbl_reservation_option"のフィールドと同じ項目。)
//			$reservationOptionInfo = array();
//			$reservationOptionInfo['reservation_id'] = $reservationId;					//予約ID
//			$reservationOptionInfo['option_id'] = $optionInfo['id'];						//オプションID
//			$reservationOptionInfo['option_price'] = $optionInfo['total_price'];			//オプション料金
//			$reservationOptionInfo['del_flag'] = DELETE_FLAG_NO;							//削除フラグ
//			$reservationOptionInfo['create_ip'] = $_SERVER["REMOTE_ADDR"];					//作成IP
//			$reservationOptionInfo['create_date'] = null;									//作成日
//			$reservationOptionInfo['update_ip'] = $_SERVER["REMOTE_ADDR"];					//更新IP
//			$reservationOptionInfo['update_date'] = null;									//更新日
//
//			//予約情報を登録する。
//			$res = _DB_CreateInfo('tbl_reservation_option', $reservationOptionInfo);
//			_Log("[_CreateReservationInfo] 予約オプション情報の登録結果 = '".$res."'");
//			if ($res === false) {
//				_Log("[_CreateReservationInfo] 予約オプション情報の登録に失敗しました。", 1);
//				$return = false;
//			}
//
//		}
//
//	}
//
//	_Log("[_CreateReservationInfo] 処理結果 = '".$return."'");
//	_Log("[_CreateReservationInfo] end.");
//
//	return $return;
//
//}
//
//
//
//
///**
// * 予約テーブル情報を取得する。
// * 顧客テーブル情報も取得する。
// * 予約オプションテーブル情報は、予約単位でサマリして結果を取得する。
// *
// * @param	mixed   $condition				検索条件
// * @param	string	$order					ソート条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @param	int		$activePage				表示するページ
// * @param	int		$showNumberOfOnePage	1ページの表示件数
// * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
// * @return	array	予約情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetTblReservation($condition = null, $order = null, $undeleteOnly = true, $activePage = 1, $showNumberOfOnePage = null, $countOnly = false) {
//	_Log("[_GetTblRentalPrice] start.");
//
//    _Log("[_GetTblRentalPrice] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetTblRentalPrice] (param) ソート条件='".$order."'");
//    _Log("[_GetTblRentalPrice] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//    _Log("[_GetTblRentalPrice] (param) 表示するページ='".$activePage."'");
//    _Log("[_GetTblRentalPrice] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
//    _Log("[_GetTblRentalPrice] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
//
//
//	//一時テーブルを作成する。=========================================================================================================start
//	//1.予約オプションテーブルをサマリした結果の一時テーブルを一旦削除する。
//	$sql = "";
//	$sql .= "\n drop table if exists tmp_tbl_reservation_option_sum";
//
//	_Log("[_GetTblRentalPrice] {1.予約オプションテーブルの一時テーブル削除} sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	if ($result === false) {
//    	_Log("[_GetTblRentalPrice] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetTblRentalPrice] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetTblRentalPrice] SQL='".$sql."'", 1);
//		return null;
//	}
//
//	//2.予約オプションテーブルをサマリした結果の一時テーブルを作成する。
//	$sql = "";
//	$sql .= "\n create temporary table tmp_tbl_reservation_option_sum";
//	$sql .= "\n as";
//	$sql .= "\n select";
//	$sql .= "\n  reservation_id";
//	$sql .= "\n ,sum(option_price) sum_option_price";	//オプション料金の合計
//	$sql .= "\n from";
//	$sql .= "\n  tbl_reservation_option";
//	$sql .= "\n where 1=1";
//	$sql .= "\n and	del_flag = ".DELETE_FLAG_NO;
//	$sql .= "\n group by";
//	$sql .= "\n  reservation_id";
//
//	_Log("[_GetTblRentalPrice] {2.予約オプションテーブルの一時テーブル作成} sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	if ($result === false) {
//    	_Log("[_GetTblRentalPrice] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetTblRentalPrice] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetTblRentalPrice] SQL='".$sql."'", 1);
//		return null;
//	}
//
//	//3.予約オプションテーブルをサマリした結果の一時テーブルにインデックスを作成する。
//	$sql = "";
//	$sql .= "\n create index idx_tmp_tbl_rsv_opn_sum on tmp_tbl_reservation_option_sum (reservation_id)";
//
//	_Log("[_GetTblRentalPrice] {3.予約オプションテーブルの一時テーブルインデックス作成} sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	if ($result === false) {
//    	_Log("[_GetTblRentalPrice] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetTblRentalPrice] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetTblRentalPrice] SQL='".$sql."'", 1);
//		return null;
//	}
//
//	//一時テーブルを作成する。=========================================================================================================end
//
////-----------------------------------------test start
//if (true) {
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  *";
//	$sql .= "\n from";
//	$sql .= "\n  tmp_tbl_reservation_option_sum";
//
//	_Log("[_GetTblRentalPrice] (TEST){予約オプションテーブルの一時テーブル確認} sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	if ($result === false) {
//    	_Log("[_GetTblRentalPrice] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetTblRentalPrice] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetTblRentalPrice] SQL='".$sql."'", 1);
//	} else {
//		//検索結果を配列に格納
//		while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//			_Log("[_GetTblRentalPrice] (TEST){予約オプションテーブルの一時テーブル確認} ☆結果='".print_r($line,true)."'", 2);
//		}
//	}
//
//}
////-----------------------------------------test end
//
//
//
//
//
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  t_rsv.*";
//
//	$sql .= "\n  ,m_pln.name plan_name";					//プラン名
//	$sql .= "\n  ,m_pln_dtl.name plan_details_name";		//プラン詳細名
//	$sql .= "\n  ,concat(m_pln.name,'(',m_pln_dtl.name,')') plan_and_plan_details_name";		//プラン名+プラン詳細名
//	$sql .= "\n  ,m_cls.name class_name";					//クラス名
//	$sql .= "\n  ,m_shp.name shop_name";					//利用店舗名
//	$sql .= "\n  ,m_aln_arv.name arrive_airline_name";		//沖縄到着便(航空会社)名
//	$sql .= "\n  ,m_aln_lev.name leave_airline_name";		//沖縄出発便(航空会社)名
//
//	$sql .= "\n  ,t_usr.user_id user_user_id";				//顧客テーブル.ユーザーID
//	$sql .= "\n  ,t_usr.account user_account";				//顧客テーブル.アカウント
//	$sql .= "\n  ,t_usr.pass user_pass";					//顧客テーブル.パスワード
//	$sql .= "\n  ,t_usr.name user_name";					//顧客テーブル.名前
//	$sql .= "\n  ,t_usr.name_kana user_name_kana";			//顧客テーブル.ふりがな
//	$sql .= "\n  ,t_usr.birth_year user_birth_year";		//顧客テーブル.生年月日(年)
//	$sql .= "\n  ,t_usr.birth_month user_birth_month";		//顧客テーブル.生年月日(月)
//	$sql .= "\n  ,t_usr.birth_day user_birth_day";			//顧客テーブル.生年月日(日)
//	$sql .= "\n  ,t_usr.sex_id user_sex_id";				//顧客テーブル.性別
//	$sql .= "\n  ,t_usr.zip1 user_zip1";					//顧客テーブル.郵便番号1
//	$sql .= "\n  ,t_usr.zip2 user_zip2";					//顧客テーブル.郵便番号2
//	$sql .= "\n  ,t_usr.pref_id user_pref_id";				//顧客テーブル.住所(都道府県)
//	$sql .= "\n  ,t_usr.address1 user_address1";			//顧客テーブル.住所(市町村番地)
//	$sql .= "\n  ,t_usr.address2 user_address2";			//顧客テーブル.住所(マンション等)
//	$sql .= "\n  ,t_usr.e_mail user_e_mail";				//顧客テーブル.E-Mail
//	$sql .= "\n  ,t_usr.tel1 user_tel1";					//顧客テーブル.電話番号1
//	$sql .= "\n  ,t_usr.tel2 user_tel2";					//顧客テーブル.電話番号2
//	$sql .= "\n  ,t_usr.tel3 user_tel3";					//顧客テーブル.電話番号3
//	$sql .= "\n  ,t_usr.mobile1 user_mobile1";				//顧客テーブル.携帯番号1
//	$sql .= "\n  ,t_usr.mobile2 user_mobile2";				//顧客テーブル.携帯番号2
//	$sql .= "\n  ,t_usr.mobile3 user_mobile3";				//顧客テーブル.携帯番号3
//	$sql .= "\n  ,t_usr.fax1 user_fax1";					//顧客テーブル.FAX番号1
//	$sql .= "\n  ,t_usr.fax2 user_fax2";					//顧客テーブル.FAX番号2
//	$sql .= "\n  ,t_usr.fax3 user_fax3";					//顧客テーブル.FAX番号3
//	$sql .= "\n  ,t_usr.auth_id user_auth_id";				//顧客テーブル.権限
//	$sql .= "\n  ,t_usr.note user_note";					//顧客テーブル.備考
//	$sql .= "\n  ,t_usr.del_flag user_del_flag";			//顧客テーブル.削除フラグ
//	$sql .= "\n  ,t_usr.create_ip user_create_ip";			//顧客テーブル.作成IP
//	$sql .= "\n  ,t_usr.create_date user_create_date";		//顧客テーブル.作成日
//	$sql .= "\n  ,t_usr.update_ip user_update_ip";			//顧客テーブル.更新IP
//	$sql .= "\n  ,t_usr.update_date user_update_date";		//顧客テーブル.更新日
//
//	$sql .= "\n  ,m_prf.name user_pref_name";				//顧客テーブル.住所(都道府県)名
//
//	$sql .= "\n  ,concat(t_rsv.rental_start_year,'/',lpad(t_rsv.rental_start_month,2,'0'),'/',lpad(t_rsv.rental_start_day,2,'0')) rental_start_date_yyyymmdd";		//貸出日YYYY/MM/DD
//	$sql .= "\n  ,concat(t_rsv.rental_start_year,'/',t_rsv.rental_start_month,'/',t_rsv.rental_start_day) rental_start_date_yyyymd";								//貸出日YYYY/M/D
//
//	$sql .= "\n  ,concat(t_rsv.rental_end_year,'/',lpad(t_rsv.rental_end_month,2,'0'),'/',lpad(t_rsv.rental_end_day,2,'0')) rental_end_date_yyyymmdd";				//返却日YYYY/MM/DD
//	$sql .= "\n  ,concat(t_rsv.rental_end_year,'/',t_rsv.rental_end_month,'/',t_rsv.rental_end_day) rental_end_date_yyyymd";										//返却日YYYY/M/D
//
//	$sql .= "\n  ,date_format(t_rsv.create_date,'%Y/%m/%d') create_date_yyyymmdd";		//作成日(予約日時)YYYY/MM/DD
//	$sql .= "\n  ,date_format(t_rsv.create_date,'%Y/%c/%e') create_date_yyyymd";		//作成日(予約日時)YYYY/M/D
//
////貸出日時(年)	rental_start_year
////貸出日時(月)	rental_start_month
////貸出日時(日)	rental_start_day
////貸出日時(時)	rental_start_hour
////貸出日時(分)	rental_start_minute
////返却日時(年)	rental_end_year
////返却日時(月)	rental_end_month
////返却日時(日)	rental_end_day
////返却日時(時)	rental_end_hour
////返却日時(分)	rental_end_minute
//
//	$sql .= "\n  ,tmp_t_rsv_opn_sum.sum_option_price";				//オプション料金合計
//
//	//合計金額=基本料金+免責補償料+オプション料金合計
//	$sql .= "\n  ,(";
//	$sql .= "\n   ifnull(t_rsv.base_price,0)";						//基本料金
//	$sql .= "\n   +";
//	$sql .= "\n   ifnull(t_rsv.escape_price,0)";					//免責補償料
//	$sql .= "\n   +";
//	$sql .= "\n   ifnull(tmp_t_rsv_opn_sum.sum_option_price,0)";	//オプション料金合計
//	$sql .= "\n   ) total_price";
//
//	$sql .= "\n from";
//	$sql .= "\n 	tbl_reservation t_rsv";
//	$sql .= "\n  	 	left outer join tmp_tbl_reservation_option_sum tmp_t_rsv_opn_sum on t_rsv.reservation_id = tmp_t_rsv_opn_sum.reservation_id";//予約オプションテーブルの一時テーブル
//
//	$sql .= "\n  	 	left outer join mst_plan m_pln on t_rsv.plan_id = m_pln.id";						//プランマスタ
//	$sql .= "\n  	 	left outer join mst_plan_details m_pln_dtl";										//プラン詳細マスタ
//	$sql .= "\n  	 			on  t_rsv.plan_id = m_pln_dtl.plan_id";
//	$sql .= "\n  	 			and t_rsv.plan_details_no = m_pln_dtl.plan_details_no";
//	$sql .= "\n  	 	left outer join mst_class m_cls on t_rsv.class_id = m_cls.id";						//クラスマスタ
//	$sql .= "\n  	 	left outer join mst_shop m_shp on t_rsv.shop_id = m_shp.id";						//店舗マスタ
//	$sql .= "\n  	 	left outer join mst_airline m_aln_arv on t_rsv.arrive_airline_id = m_aln_arv.id";	//航空会社マスタ
//	$sql .= "\n  	 	left outer join mst_airline m_aln_lev on t_rsv.leave_airline_id = m_aln_lev.id";	//航空会社マスタ
//
//	$sql .= "\n  	 	left outer join tbl_user t_usr on t_rsv.user_id = t_usr.user_id";					//顧客テーブル
//	$sql .= "\n  	 		left outer join mst_pref m_prf on t_usr.pref_id = m_prf.id";					//都道府県マスタ
//
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	t_rsv.del_flag = ".DELETE_FLAG_NO;
//
//	//削除フラグ
//	if (isset($condition['del_flag'])) {
//		$sqlBuf = "";
//		if (is_array($condition['del_flag'])) {
//			foreach ($condition['del_flag'] as $value) {
//				if (!_IsNull($value)) {
//					if (!_IsNull($sqlBuf)) $sqlBuf .= ",";
//					$sqlBuf .= mysql_real_escape_string($value);
//				}
//			}
//		} else {
//			if (!_IsNull($condition['del_flag'])) {
//				$sqlBuf .= mysql_real_escape_string($condition['del_flag']);
//			}
//		}
//		if (!_IsNull($sqlBuf)) {
//			$sql .= "\n and	t_rsv.del_flag in (".$sqlBuf.")";
//		}
//	}
//
//
//	$ymd = "";
//	//貸出日時From(年)
//	if (isset($condition['rental_start_year_from']) && !_IsNull($condition['rental_start_year_from'])) {
//		//貸出日時From(月)
//		if (isset($condition['rental_start_month_from']) && !_IsNull($condition['rental_start_month_from'])) {
//			//貸出日時From(日)
//			if (isset($condition['rental_start_day_from']) && !_IsNull($condition['rental_start_day_from'])) {
//				$ymd = sprintf("%04d/%02d/%02d", $condition['rental_start_year_from'], $condition['rental_start_month_from'], $condition['rental_start_day_from']);
//			} else {
//				$ymd = sprintf("%04d/%02d/%02d", $condition['rental_start_year_from'], $condition['rental_start_month_from'], 1);
//			}
//		} else {
//			$ymd = sprintf("%04d/%02d/%02d", $condition['rental_start_year_from'], 1, 1);
//		}
//	}
//	if (!_IsNull($ymd)) {
//		$sql .= "\n and	concat(t_rsv.rental_start_year,'/',lpad(t_rsv.rental_start_month,2,'0'),'/',lpad(t_rsv.rental_start_day,2,'0')) >= '".$ymd."'";
//	}
//
//	$ymd = "";
//	//貸出日時To(年)
//	if (isset($condition['rental_start_year_to']) && !_IsNull($condition['rental_start_year_to'])) {
//		//貸出日時To(月)
//		if (isset($condition['rental_start_month_to']) && !_IsNull($condition['rental_start_month_to'])) {
//			//貸出日時To(日)
//			if (isset($condition['rental_start_day_to']) && !_IsNull($condition['rental_start_day_to'])) {
//				$ymd = sprintf("%04d/%02d/%02d", $condition['rental_start_year_to'], $condition['rental_start_month_to'], $condition['rental_start_day_to']);
//			} else {
//				$ymd = sprintf("%04d/%02d/%02d", $condition['rental_start_year_to'], $condition['rental_start_month_to'], 31);
//			}
//		} else {
//			$ymd = sprintf("%04d/%02d/%02d", $condition['rental_start_year_to'], 12, 31);
//		}
//	}
//	if (!_IsNull($ymd)) {
//		$sql .= "\n and	concat(t_rsv.rental_start_year,'/',lpad(t_rsv.rental_start_month,2,'0'),'/',lpad(t_rsv.rental_start_day,2,'0')) <= '".$ymd."'";
//	}
//
//	if (_IsNull($order)) {
//		$order .= "\n t_rsv.reservation_id";
//	}
//
//	$sql .= "\n order by";
//	$sql .= " ".$order;
//
//	//検索件数のみ場合、以下の条件は不要
//	if (!$countOnly) {
//		//全件の場合、以下の条件は不要
//		if (!_IsNull($showNumberOfOnePage)) {
//			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
//		}
//	}
//
//	_Log("[_GetTblRentalPrice] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$list = null;
//	$count = null;
//	if ($result === false) {
//    	_Log("[_GetTblRentalPrice] mysql_error='".mysql_error()."'", 1);
//    	_Log("[_GetTblRentalPrice] mysql_errno='".mysql_errno()."'", 1);
//    	_Log("[_GetTblRentalPrice] SQL='".$sql."'", 1);
//	} else {
//		$count = mysql_num_rows($result);
//		if (!$countOnly) {
//			$list = array();
//			//検索結果を配列に格納
//			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//				$list[$line['reservation_id']] = $line;
//			}
//			if (count($list) == 0) 	$list = null;
//		}
//	}
//
//    _Log("[_GetTblRentalPrice] 結果(予約テーブル情報件数)='".$count."'");
//    _Log("[_GetTblRentalPrice] 結果(予約テーブル情報)='".print_r($list,true)."'");
//    _Log("[_GetTblRentalPrice] end.");
//
//	if ($countOnly) {
//		return $count;
//	} else {
//		return $list;
//	}
//
//}
//
//
///* end   --------------------------------------------予約関連テーブル-------------------------------------------- end   */
//


////////////////////////////////////////////////////////////////
////以下は、未使用。
//
//
///* start -------------------------------------------予約可能日テーブル------------------------------------------- start */
//
///**
// * 予約可能日情報を取得する。
// *
// * @param	mixed   $condition				検索条件
// * @param	string	$order					ソート条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @param	int		$activePage				表示するページ
// * @param	int		$showNumberOfOnePage	1ページの表示件数
// * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
// * @return	array	予約可能日情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetTblReservationPossibleDates($condition = null, $order = null, $undeleteOnly = true, $activePage = 1, $showNumberOfOnePage = null, $countOnly = false) {
//
//	_Log("[_GetTblReservationPossibleDates] start.");
//
//    _Log("[_GetTblReservationPossibleDates] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetTblReservationPossibleDates] (param) ソート条件='".$order."'");
//    _Log("[_GetTblReservationPossibleDates] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//    _Log("[_GetTblReservationPossibleDates] (param) 表示するページ='".$activePage."'");
//    _Log("[_GetTblReservationPossibleDates] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
//    _Log("[_GetTblReservationPossibleDates] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
//
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  t_r_dt.*";
//	$sql .= "\n ,concat(t_r_dt.year,'/',lpad(t_r_dt.month,2,'0'),'/',lpad(t_r_dt.day,2,'0')) key_date";
//	$sql .= "\n ,concat(lpad(t_r_dt.hour,2,'0'),':',lpad(t_r_dt.minute,2,'0')) key_time";
//
//	$sql .= "\n from";
//	$sql .= "\n 	tbl_reservation_possible_date t_r_dt";
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
////	//削除フラグ
////	if ($undeleteOnly) $sql .= "\n and	l_odr.del_flag = ".DELETE_FLAG_NO;
//
//
//	//年
//	if (isset($condition['year']) && !_IsNull($condition['year'])) {
//		$sql .= "\n and	t_r_dt.year = ".mysql_real_escape_string($condition['year'])."";
//	}
//	//月
//	if (isset($condition['month']) && !_IsNull($condition['month'])) {
//		$sql .= "\n and	t_r_dt.month = ".mysql_real_escape_string($condition['month'])."";
//	}
//	//日
//	if (isset($condition['day']) && !_IsNull($condition['day'])) {
//		$sql .= "\n and	t_r_dt.day = ".mysql_real_escape_string($condition['day'])."";
//	}
//	//時
//	if (isset($condition['hour']) && !_IsNull($condition['hour'])) {
//		$sql .= "\n and	t_r_dt.hour = ".mysql_real_escape_string($condition['hour'])."";
//	}
//	//分
//	if (isset($condition['minute']) && !_IsNull($condition['minute'])) {
//		$sql .= "\n and	t_r_dt.minute = ".mysql_real_escape_string($condition['minute'])."";
//	}
//
//
////	//年From
////	if (isset($condition['year_from']) && !_IsNull($condition['year_from'])) {
////		$sql .= "\n and	t_r_dt.year >= ".mysql_real_escape_string($condition['year_from'])."";
////	}
////	//年To
////	if (isset($condition['year_to']) && !_IsNull($condition['year_to'])) {
////		$sql .= "\n and	t_r_dt.year <= ".mysql_real_escape_string($condition['year_to'])."";
////	}
////	//月From
////	if (isset($condition['month_from']) && !_IsNull($condition['month_from'])) {
////		$sql .= "\n and	t_r_dt.month >= ".mysql_real_escape_string($condition['month_from'])."";
////	}
////	//月To
////	if (isset($condition['month_to']) && !_IsNull($condition['month_to'])) {
////		$sql .= "\n and	t_r_dt.month <= ".mysql_real_escape_string($condition['month_to'])."";
////	}
////	//日From
////	if (isset($condition['day_from']) && !_IsNull($condition['day_from'])) {
////		$sql .= "\n and	t_r_dt.day >= ".mysql_real_escape_string($condition['day_from'])."";
////	}
////	//日To
////	if (isset($condition['day_to']) && !_IsNull($condition['day_to'])) {
////		$sql .= "\n and	t_r_dt.day <= ".mysql_real_escape_string($condition['day_to'])."";
////	}
//
//
//	$from = "";
//	//年From
//	if (isset($condition['year_from']) && !_IsNull($condition['year_from'])) {
//		//月From
//		if (isset($condition['month_from']) && !_IsNull($condition['month_from'])) {
//			//日From
//			if (isset($condition['day_from']) && !_IsNull($condition['day_from'])) {
//				$from = sprintf('%04d%02d%02d', $condition['year_from'], $condition['month_from'], $condition['day_from']);
//			} else {
//				$from = sprintf('%04d%02d%02d', $condition['year_from'], $condition['month_from'], 1);
//			}
//		} else {
//			$from = sprintf('%04d%02d%02d', $condition['year_from'], 1, 1);
//		}
//	}
//	if (!_IsNull($from)) {
//		$sql .= "\n and	concat(t_r_dt.year,lpad(t_r_dt.month,2,'0'),lpad(t_r_dt.day,2,'0')) >= '".mysql_real_escape_string($from)."'";
//	}
//
//	$to = "";
//	//年To
//	if (isset($condition['year_to']) && !_IsNull($condition['year_to'])) {
//		//月To
//		if (isset($condition['month_to']) && !_IsNull($condition['month_to'])) {
//			//日To
//			if (isset($condition['day_to']) && !_IsNull($condition['day_to'])) {
//				$to = sprintf('%04d%02d%02d', $condition['year_to'], $condition['month_to'], $condition['day_to']);
//			} else {
//				$to = sprintf('%04d%02d%02d', $condition['year_to'], $condition['month_to'], 31);
//			}
//		} else {
//			$to = sprintf('%04d%02d%02d', $condition['year_to'], 12, 31);
//		}
//	}
//	if (!_IsNull($to)) {
//		$sql .= "\n and	concat(t_r_dt.year,lpad(t_r_dt.month,2,'0'),lpad(t_r_dt.day,2,'0')) <= '".mysql_real_escape_string($to)."'";
//	}
//
//	if (_IsNull($order)) {
//		$order = "\n  t_r_dt.year";
//		$order .= "\n ,t_r_dt.month";
//		$order .= "\n ,t_r_dt.day";
//		$order .= "\n ,t_r_dt.hour";
//		$order .= "\n ,t_r_dt.minute";
//	}
//
//	$sql .= "\n order by";
//	$sql .= " ".$order;
//
//	//検索件数のみ場合、以下の条件は不要
//	if (!$countOnly) {
//		//全件の場合、以下の条件は不要
//		if (!_IsNull($showNumberOfOnePage)) {
//			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
//		}
//	}
//
//	_Log("[_GetTblReservationPossibleDates] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$list = null;
//	$count = null;
//	if ($result === false) {
//    	_Log("[_GetTblReservationPossibleDates] mysql_error='".mysql_error()."'");
//    	_Log("[_GetTblReservationPossibleDates] mysql_errno='".mysql_errno()."'");
//    	_Log("[_GetTblReservationPossibleDates] SQL='".$sql."'");
//	} else {
//		$count = mysql_num_rows($result);
//		if (!$countOnly) {
//			$list = array();
//			//検索結果を配列に格納
//			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//				$list[$line['key_date']][$line['key_time']] = $line;
//			}
//			if (count($list) == 0) 	$list = null;
//		}
//	}
//
//    _Log("[_GetTblReservationPossibleDates] 結果(予約可能日情報件数)='".$count."'");
//    _Log("[_GetTblReservationPossibleDates] 結果(予約可能日情報)='".print_r($list,true)."'");
//    _Log("[_GetTblReservationPossibleDates] end.");
//
//	if ($countOnly) {
//		return $count;
//	} else {
//		return $list;
//	}
//
//}
//
//
//
///**
// * 予約可能日情報を削除する。
// *
// * @param	mixed   $condition	削除条件
// * @return	boolean	成功/失敗
// * @access  public
// * @since   3.2.0
// */
//function _DeleteTblReservationPossibleDate($condition) {
//
//	_Log("[_DeleteTblReservationPossibleDate] start.");
//
//    _Log("[_DeleteTblReservationPossibleDate] (param) 削除条件='".print_r($condition,true)."'");
//
//
//	//SQLを作成する。
//	$sql = "\n delete from ";
//	$sql .= "\n  tbl_reservation_possible_date";
//	$sql .= "\n where 1=1";
//
//	$from = "";
//	//年From
//	if (isset($condition['year_from']) && !_IsNull($condition['year_from'])) {
//		//月From
//		if (isset($condition['month_from']) && !_IsNull($condition['month_from'])) {
//			//日From
//			if (isset($condition['day_from']) && !_IsNull($condition['day_from'])) {
//				$from = sprintf('%04d%02d%02d', $condition['year_from'], $condition['month_from'], $condition['day_from']);
//			} else {
//				$from = sprintf('%04d%02d%02d', $condition['year_from'], $condition['month_from'], 1);
//			}
//		} else {
//			$from = sprintf('%04d%02d%02d', $condition['year_from'], 1, 1);
//		}
//	}
//	if (!_IsNull($from)) {
//		$sql .= "\n and	concat(year,lpad(month,2,'0'),lpad(day,2,'0')) >= '".mysql_real_escape_string($from)."'";
//	}
//
//	$to = "";
//	//年To
//	if (isset($condition['year_to']) && !_IsNull($condition['year_to'])) {
//		//月To
//		if (isset($condition['month_to']) && !_IsNull($condition['month_to'])) {
//			//日To
//			if (isset($condition['day_to']) && !_IsNull($condition['day_to'])) {
//				$to = sprintf('%04d%02d%02d', $condition['year_to'], $condition['month_to'], $condition['day_to']);
//			} else {
//				$to = sprintf('%04d%02d%02d', $condition['year_to'], $condition['month_to'], 31);
//			}
//		} else {
//			$to = sprintf('%04d%02d%02d', $condition['year_to'], 12, 31);
//		}
//	}
//	if (!_IsNull($to)) {
//		$sql .= "\n and	concat(year,lpad(month,2,'0'),lpad(day,2,'0')) <= '".mysql_real_escape_string($to)."'";
//	}
//
//
//	//年
//	if (isset($condition['year']) && !_IsNull($condition['year'])) {
//		$sql .= "\n and	year = ".mysql_real_escape_string($condition['year'])."";
//	}
//	//月
//	if (isset($condition['month']) && !_IsNull($condition['month'])) {
//		$sql .= "\n and	month = ".mysql_real_escape_string($condition['month'])."";
//	}
//	//日
//	if (isset($condition['day']) && !_IsNull($condition['day'])) {
//		$sql .= "\n and	day = ".mysql_real_escape_string($condition['day'])."";
//	}
//	//時
//	if (isset($condition['hour']) && !_IsNull($condition['hour'])) {
//		$sql .= "\n and	hour = ".mysql_real_escape_string($condition['hour'])."";
//	}
//	//分
//	if (isset($condition['minute']) && !_IsNull($condition['minute'])) {
//		$sql .= "\n and	minute = ".mysql_real_escape_string($condition['minute'])."";
//	}
//
//
//	_Log("[_DeleteTblReservationPossibleDate] sql='".$sql."'", 2);
//
//    //SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql);
//
//	if ($result === false) {
//    	_Log("[_DeleteTblReservationPossibleDate] mysql_error='".mysql_error()."'");
//    	_Log("[_DeleteTblReservationPossibleDate] mysql_errno='".mysql_errno()."'");
//    	_Log("[_DeleteTblReservationPossibleDate] SQL='".$sql."'");
//	}
//	_Log("[_DeleteTblReservationPossibleDate] end.");
//
//	return $result;
//
//}
//
//
///* end   -------------------------------------------予約可能日テーブル------------------------------------------- end   */
//
//
//
///* start ----------------------------------------------予約テーブル---------------------------------------------- start */
//
///**
// * 予約情報を取得する。
// *
// * @param	mixed   $condition				検索条件
// * @param	string	$order					ソート条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @param	int		$activePage				表示するページ
// * @param	int		$showNumberOfOnePage	1ページの表示件数
// * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
// * @return	array	予約情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetTblReservations($condition = null, $order = null, $undeleteOnly = true, $activePage = 1, $showNumberOfOnePage = null, $countOnly = false) {
//
//	_Log("[_GetTblReservations] start.");
//
//    _Log("[_GetTblReservations] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetTblReservations] (param) ソート条件='".$order."'");
//    _Log("[_GetTblReservations] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//    _Log("[_GetTblReservations] (param) 表示するページ='".$activePage."'");
//    _Log("[_GetTblReservations] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
//    _Log("[_GetTblReservations] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
//
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  t_rsv.*";
//	$sql .= "\n ,concat(t_rsv.year,'/',lpad(t_rsv.month,2,'0'),'/',lpad(t_rsv.day,2,'0')) key_date";
//	$sql .= "\n ,concat(lpad(t_rsv.hour,2,'0'),':',lpad(t_rsv.minute,2,'0')) key_time";
//
//	$sql .= "\n from";
//	$sql .= "\n 	tbl_reservation t_rsv";
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	t_rsv.del_flag = ".DELETE_FLAG_NO;
//
//	//年
//	if (isset($condition['year']) && !_IsNull($condition['year'])) {
//		$sql .= "\n and	t_rsv.year = ".mysql_real_escape_string($condition['year'])."";
//	}
//	//月
//	if (isset($condition['month']) && !_IsNull($condition['month'])) {
//		$sql .= "\n and	t_rsv.month = ".mysql_real_escape_string($condition['month'])."";
//	}
//	//日
//	if (isset($condition['day']) && !_IsNull($condition['day'])) {
//		$sql .= "\n and	t_rsv.day = ".mysql_real_escape_string($condition['day'])."";
//	}
//	//時
//	if (isset($condition['hour']) && !_IsNull($condition['hour'])) {
//		$sql .= "\n and	t_rsv.hour = ".mysql_real_escape_string($condition['hour'])."";
//	}
//	//分
//	if (isset($condition['minute']) && !_IsNull($condition['minute'])) {
//		$sql .= "\n and	t_rsv.minute = ".mysql_real_escape_string($condition['minute'])."";
//	}
//
////	//年From
////	if (isset($condition['year_from']) && !_IsNull($condition['year_from'])) {
////		$sql .= "\n and	t_rsv.year >= ".mysql_real_escape_string($condition['year_from'])."";
////	}
////	//年To
////	if (isset($condition['year_to']) && !_IsNull($condition['year_to'])) {
////		$sql .= "\n and	t_rsv.year <= ".mysql_real_escape_string($condition['year_to'])."";
////	}
////	//月From
////	if (isset($condition['month_from']) && !_IsNull($condition['month_from'])) {
////		$sql .= "\n and	t_rsv.month >= ".mysql_real_escape_string($condition['month_from'])."";
////	}
////	//月To
////	if (isset($condition['month_to']) && !_IsNull($condition['month_to'])) {
////		$sql .= "\n and	t_rsv.month <= ".mysql_real_escape_string($condition['month_to'])."";
////	}
////	//日From
////	if (isset($condition['day_from']) && !_IsNull($condition['day_from'])) {
////		$sql .= "\n and	t_rsv.day >= ".mysql_real_escape_string($condition['day_from'])."";
////	}
////	//日To
////	if (isset($condition['day_to']) && !_IsNull($condition['day_to'])) {
////		$sql .= "\n and	t_rsv.day <= ".mysql_real_escape_string($condition['day_to'])."";
////	}
//
//
//	$from = "";
//	//年From
//	if (isset($condition['year_from']) && !_IsNull($condition['year_from'])) {
//		//月From
//		if (isset($condition['month_from']) && !_IsNull($condition['month_from'])) {
//			//日From
//			if (isset($condition['day_from']) && !_IsNull($condition['day_from'])) {
//				$from = sprintf('%04d%02d%02d', $condition['year_from'], $condition['month_from'], $condition['day_from']);
//			} else {
//				$from = sprintf('%04d%02d%02d', $condition['year_from'], $condition['month_from'], 1);
//			}
//		} else {
//			$from = sprintf('%04d%02d%02d', $condition['year_from'], 1, 1);
//		}
//	}
//	if (!_IsNull($from)) {
//		$sql .= "\n and	concat(t_rsv.year,lpad(t_rsv.month,2,'0'),lpad(t_rsv.day,2,'0')) >= '".mysql_real_escape_string($from)."'";
//	}
//
//	$to = "";
//	//年To
//	if (isset($condition['year_to']) && !_IsNull($condition['year_to'])) {
//		//月To
//		if (isset($condition['month_to']) && !_IsNull($condition['month_to'])) {
//			//日To
//			if (isset($condition['day_to']) && !_IsNull($condition['day_to'])) {
//				$to = sprintf('%04d%02d%02d', $condition['year_to'], $condition['month_to'], $condition['day_to']);
//			} else {
//				$to = sprintf('%04d%02d%02d', $condition['year_to'], $condition['month_to'], 31);
//			}
//		} else {
//			$to = sprintf('%04d%02d%02d', $condition['year_to'], 12, 31);
//		}
//	}
//	if (!_IsNull($to)) {
//		$sql .= "\n and	concat(t_rsv.year,lpad(t_rsv.month,2,'0'),lpad(t_rsv.day,2,'0')) <= '".mysql_real_escape_string($to)."'";
//	}
//
//
//	if (_IsNull($order)) {
//		$order = "\n  t_rsv.year";
//		$order .= "\n ,t_rsv.month";
//		$order .= "\n ,t_rsv.day";
//		$order .= "\n ,t_rsv.hour";
//		$order .= "\n ,t_rsv.minute";
//		$order .= "\n ,t_rsv.no";
//	}
//
//	$sql .= "\n order by";
//	$sql .= " ".$order;
//
//	//検索件数のみ場合、以下の条件は不要
//	if (!$countOnly) {
//		//全件の場合、以下の条件は不要
//		if (!_IsNull($showNumberOfOnePage)) {
//			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
//		}
//	}
//
//	_Log("[_GetTblReservations] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$list = null;
//	$count = null;
//	if ($result === false) {
//    	_Log("[_GetTblReservations] mysql_error='".mysql_error()."'");
//    	_Log("[_GetTblReservations] mysql_errno='".mysql_errno()."'");
//    	_Log("[_GetTblReservations] SQL='".$sql."'");
//	} else {
//		$count = mysql_num_rows($result);
//		if (!$countOnly) {
//			$list = array();
//			//検索結果を配列に格納
//			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//				$list[$line['key_date']][$line['key_time']][$line['no']] = $line;
//			}
//			if (count($list) == 0) 	$list = null;
//		}
//	}
//
//    _Log("[_GetTblReservations] 結果(予約情報件数)='".$count."'");
//    _Log("[_GetTblReservations] 結果(予約情報)='".print_r($list,true)."'");
//    _Log("[_GetTblReservations] end.");
//
//	if ($countOnly) {
//		return $count;
//	} else {
//		return $list;
//	}
//
//}
//
//
///**
// * 予約情報のNoを採番する。
// *
// * @param	mixed   $condition				検索条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @return	int		採番したNoを返す。
// * @access  public
// * @since   3.2.0
// */
//function _GetTblReservationNextNo($condition = null, $undeleteOnly = true) {
//
//	_Log("[_GetTblReservationNextNo] start.");
//
//    _Log("[_GetTblReservationNextNo] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetTblReservationNextNo] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  max(t_rsv.no) max_no";
//	$sql .= "\n from";
//	$sql .= "\n 	tbl_reservation t_rsv";
//
//	$sql .= "\n where 1=1";
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	t_rsv.del_flag = ".DELETE_FLAG_NO;
//
//	//年
//	if (isset($condition['year']) && !_IsNull($condition['year'])) {
//		$sql .= "\n and	t_rsv.year = ".mysql_real_escape_string($condition['year'])."";
//	}
//	//月
//	if (isset($condition['month']) && !_IsNull($condition['month'])) {
//		$sql .= "\n and	t_rsv.month = ".mysql_real_escape_string($condition['month'])."";
//	}
//	//日
//	if (isset($condition['day']) && !_IsNull($condition['day'])) {
//		$sql .= "\n and	t_rsv.day = ".mysql_real_escape_string($condition['day'])."";
//	}
//	//時
//	if (isset($condition['hour']) && !_IsNull($condition['hour'])) {
//		$sql .= "\n and	t_rsv.hour = ".mysql_real_escape_string($condition['hour'])."";
//	}
//	//分
//	if (isset($condition['minute']) && !_IsNull($condition['minute'])) {
//		$sql .= "\n and	t_rsv.minute = ".mysql_real_escape_string($condition['minute'])."";
//	}
//
//
//	_Log("[_GetTblReservationNextNo] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$nextNo = false;
//	if ($result === false) {
//    	_Log("[_GetTblReservationNextNo] mysql_error='".mysql_error()."'");
//    	_Log("[_GetTblReservationNextNo] mysql_errno='".mysql_errno()."'");
//    	_Log("[_GetTblReservationNextNo] SQL='".$sql."'");
//	} else {
//		//検索結果を取得する。
//		$line = mysql_fetch_array($result, MYSQL_ASSOC);
//
//		$maxNo = $line['max_no'];
//		if (_IsNull($maxNo)) {
//			$nextNo = 1;
//		} else {
//			$nextNo = $maxNo + 1;
//		}
//
//    	_Log("[_GetTblReservationNextNo] 最大キャンペーンNo='".$maxNo."'");
//    	_Log("[_GetTblReservationNextNo] 次のキャンペーンNo='".$nextNo."'");
//
//	}
//
//    _Log("[_GetTblReservationNextNo] end.");
//
//	return $nextNo;
//
//}
//
//
//
//
//
///* end   ----------------------------------------------予約テーブル---------------------------------------------- end   */
//
//
///* start ---------------------------------------------管理者テーブル--------------------------------------------- start */
///**
// * 管理者情報を検索する。
// *
// * @param	mixed   $condition				検索条件
// * @param	string	$order					ソート条件
// * @param	boolean	$undeleteOnly			未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * @param	int		$activePage				表示するページ
// * @param	int		$showNumberOfOnePage	1ページの表示件数
// * @param	boolean	$countOnly				返り値指定フラグ{true:検索件数のみ/false:全情報}
// * @return	array	予約可能日情報(取得できなかった場合はnull。)
// * @access  public
// * @since   3.2.0
// */
//function _GetTblManagers($condition = null, $order = null, $undeleteOnly = true, $activePage = 1, $showNumberOfOnePage = null, $countOnly = false) {
//
//	_Log("[_GetTblManager] start.");
//
//    _Log("[_GetTblManager] (param) 検索条件='".print_r($condition,true)."'");
//    _Log("[_GetTblManager] (param) ソート条件='".$order."'");
//    _Log("[_GetTblManager] (param) 未削除データのみ取得するか？='".$undeleteOnly."'");
//    _Log("[_GetTblManager] (param) 表示するページ='".$activePage."'");
//    _Log("[_GetTblManager] (param) 1ページの表示件数='".$showNumberOfOnePage."'");
//    _Log("[_GetTblManager] (param) 返り値指定フラグ{true:検索件数のみ/false:全情報}='".$countOnly."'");
//
//
//	//SQLを作成する。
//	$sql = "";
//	$sql .= "\n select";
//	$sql .= "\n  t_mng.*";
//
//	$sql .= "\n from";
//	$sql .= "\n 	tbl_manager t_mng";
//
//	$sql .= "\n where 1=1";
//
//
//	//検索条件を設定する。
//
//	//削除フラグ
//	if ($undeleteOnly) $sql .= "\n and	t_mng.del_flag = ".DELETE_FLAG_NO;
//
//	//アカウント
//	if (isset($condition['account']) && !_IsNull($condition['account'])) {
//		$sql .= "\n and	t_mng.account = '".mysql_real_escape_string($condition['account'])."'";
//	}
//	//パスワード
//	if (isset($condition['pass']) && !_IsNull($condition['pass'])) {
//		$sql .= "\n and	t_mng.pass = '".mysql_real_escape_string($condition['pass'])."'";
//	}
//
//
//	if (_IsNull($order)) {
//		$order = "\n  t_mng.manager_id";
//	}
//
//	$sql .= "\n order by";
//	$sql .= " ".$order;
//
//	//検索件数のみ場合、以下の条件は不要
//	if (!$countOnly) {
//		//全件の場合、以下の条件は不要
//		if (!_IsNull($showNumberOfOnePage)) {
//			$sql .= "\n limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
//		}
//	}
//
//	_Log("[_GetTblManager] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql);// or die("Query failed-->".$sql." Error-->".mysql_error());
//
//	$list = null;
//	$count = null;
//	if ($result === false) {
//    	_Log("[_GetTblManager] mysql_error='".mysql_error()."'");
//    	_Log("[_GetTblManager] mysql_errno='".mysql_errno()."'");
//    	_Log("[_GetTblManager] SQL='".$sql."'");
//	} else {
//		$count = mysql_num_rows($result);
//		if (!$countOnly) {
//			$list = array();
//			//検索結果を配列に格納
//			while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//				$list[$line['manager_id']] = $line;
//			}
//			if (count($list) == 0) 	$list = null;
//		}
//	}
//
//    _Log("[_GetTblManager] 結果(管理者情報件数)='".$count."'");
//    _Log("[_GetTblManager] 結果(管理者情報)='".print_r($list,true)."'");
//    _Log("[_GetTblManager] end.");
//
//	if ($countOnly) {
//		return $count;
//	} else {
//		return $list;
//	}
//
//}
//
///* end   ---------------------------------------------管理者テーブル--------------------------------------------- end   */
//
//
//
//////////////////////以下は不要/////////////////////////////////
//
//
///* start ----------------------------------------------作家情報関連---------------------------------------------- start */
//
//
///**
// * 作家情報を取得する。
// * 引き数	$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 			$order			:ソート順(order by句に設定するSQLを直接指定する。nullの場合、デフォルトで作家IDの昇順となる。)
// * 戻り値  	作家情報の配列
// */
//function _GetArtistList($undeleteOnly = true, $order = null) {
//	_Log("[_GetArtistList] start.");
//	_Log("[_GetArtistList] (引数)未削除データのみ取得するか？='".$undeleteOnly."'");
//
//	//SQLを作成する。
//	$sql .= "\n select";
//	$sql .= "\n		 art.*";
//	$sql .= "\n		,m_prf.NAME PREF_NAME";														//都道府県名
//	$sql .= "\n 	,concat(art.FAMILY_NAME,' ',art.FIRST_NAME) ARTIST_NAME";					//作家名(姓+名)
//	$sql .= "\n 	,concat(art.FAMILY_NAME_KANA,' ',art.FIRST_NAME_KANA) ARTIST_NAME_KANA";	//作家名かな(姓+名)
//	$sql .= "\n 	,rand() RAND";																//ランダム表示用→これでソートする。
//	$sql .= "\n from";
//	$sql .= "\n 	artist art";
//	$sql .= "\n  	 	left outer join mst_pref m_prf on art.PREF_ID = m_prf.ID";	//都道府県マスタ
//
//	$sql .= "\n where 1=1";
//	if ($undeleteOnly) $sql .= "\n and	art.DEL_FLAG = ".DELETE_FLAG_NO;
//
//	if (_IsNull($order)) $order = "art.ARTIST_ID";
//
//	$sql .= "\n order by";
//	$sql .= "\n ".$order;
//
//	_Log("[_GetArtistList] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$resultList = array();
//	//検索結果を配列に格納
//	while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//		$resultList[$line['ARTIST_ID']] = $line;
//	}
//
//	_Log("[_GetArtistList] count(\$resultList)='".count($resultList)."'");
//	_Log("[_GetArtistList] \$resultList='".print_r($resultList,true)."'");
//
//	if (count($resultList)==0) $resultList = null;
//
//	_Log("[_GetArtistList] end.");
//	return $resultList;
//}
//
//
///**
// * 指定した作家IDに関連する作家情報を取得する。
// * 引き数	$artistId		:作家ID
// * 			$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	マスタ情報
// */
//function _GetArtistInfo($artistId, $undeleteOnly = true) {
//	_Log("[_GetArtistInfo] start.");
//	_Log("[_GetArtistInfo] (引数)作家ID='".$artistId."'");
//	_Log("[_GetArtistInfo] (引数)未削除データのみ取得するか？='".$undeleteOnly."'");
//
//	if (_IsNull($artistId)) {
//		_Log("[_GetArtistInfo] ArtistId is null.");
//		_Log("[_GetArtistInfo] end.");
//		return null;
//	}
//
//	//SQLを作成する。
//	$sql .= "\n select";
//	$sql .= "\n		 art.*";
//	$sql .= "\n		,m_prf.NAME PREF_NAME";														//都道府県名
//	$sql .= "\n 	,concat(art.FAMILY_NAME,' ',art.FIRST_NAME) ARTIST_NAME";					//作家名(姓+名)
//	$sql .= "\n 	,concat(art.FAMILY_NAME_KANA,' ',art.FIRST_NAME_KANA) ARTIST_NAME_KANA";	//作家名かな(姓+名)
//	$sql .= "\n from";
//	$sql .= "\n 	artist art";
//	$sql .= "\n  	 	left outer join mst_pref m_prf on art.PREF_ID = m_prf.ID";	//都道府県マスタ
//
//	$sql .= "\n where 1=1";
//	$sql .= "\n and	art.ARTIST_ID = ".mysql_real_escape_string($artistId)."";
//	if ($undeleteOnly) $sql .= "\n and	art.DEL_FLAG = ".DELETE_FLAG_NO;
//
//	_Log("[_GetArtistInfo] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$line = mysql_fetch_array($result, MYSQL_ASSOC);
//
//	_Log("[_GetArtistInfo] count(\$line)='".count($line)."'");
//	_Log("[_GetArtistInfo] \$line='".print_r($line,true)."'");
//
//	if (count($line) == 1) $line = null;
//
//	return $line;
//}
//
///**
// * 指定した作家IDに関連する作家情報の指定したフィールドの値を取得する。
// * 引き数	$artistId		:作家ID
// * 			$name			:取得対象フィールド名
// * 			$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	作家情報
// */
//function _GetArtistValue($artistId, $name = 'ARTIST_NAME', $undeleteOnly = true) {
//	$info = _GetArtistInfo($artistId, $undeleteOnly);
//	if (_IsNull($info)) return null;
//	return $info[$name];
//}
//
///* end   ----------------------------------------------作家情報関連---------------------------------------------- end   */
//
//////以下は柴犬用。参考までにとってある。

///* start ------------------------------------------ブリーダーマスタ関連------------------------------------------ start */
///**
// * 指定したアカウントに関連するブリーダーマスタ情報を取得する。
// * 引き数	$account		:アカウント
// * 			$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	ブリーダーマスタ情報
// */
//function _GetMstBreederInfoByAccount($account, $undeleteOnly = true) {
//
//	if (_IsNull($account)) return null;
//
//	//SQLを作成する。
//	$sql = "\n select";
//	$sql .= "\n 	*";
//	$sql .= "\n from ";
//	$sql .= "\n 	mst_breeder";
//	$sql .= "\n where";
//	$sql .= "\n		account = '".mysql_real_escape_string($account)."'";
//
//	if ($undeleteOnly) $sql .= "\n  and	DEL_FLAG = ".DELETE_FLAG_NO;
//
//	_Log("[_GetMstBreederInfoByAccount] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$line = mysql_fetch_array($result, MYSQL_ASSOC);
//
//	_Log("[_GetMstBreederInfoByAccount] count(\$line)='".count($line)."'");
//	_Log("[_GetMstBreederInfoByAccount] \$line='".print_r($line,true)."'");
//
//	if (count($line) == 1) $line = null;
//
//	return $line;
//}
//
///**
// * 指定したブリーダーIDに関連するブリーダーマスタ情報を取得する。
// * 引き数	$breederId		:ブリーダーID
// * 			$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	ブリーダーマスタ情報
// */
//function _GetMstBreederInfo($breederId, $undeleteOnly = true) {
//
//	if (_IsNull($breederId)) return null;
//
//	//SQLを作成する。
//	$sql = "\n select";
//	$sql .= "\n 	*";
//	$sql .= "\n from ";
//	$sql .= "\n 	mst_breeder";
//	$sql .= "\n where";
//	$sql .= "\n		id = '".mysql_real_escape_string($breederId)."'";
//
//	if ($undeleteOnly) $sql .= "\n  and	DEL_FLAG = ".DELETE_FLAG_NO;
//
//	_Log("[_GetMstBreederInfo] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$line = mysql_fetch_array($result, MYSQL_ASSOC);
//
//	_Log("[_GetMstBreederInfo] count(\$line)='".count($line)."'");
//	_Log("[_GetMstBreederInfo] \$line='".print_r($line,true)."'");
//
//	if (count($line) == 1) $line = null;
//
//	return $line;
//}
///* end   ------------------------------------------ブリーダーマスタ関連------------------------------------------ end   */
//
///* start -----------------------------------------------犬情報関連----------------------------------------------- start */
///**
// * 犬情報を登録する。
// * 引き数	$info	：犬情報
// * 戻り値  	なし
// */
//function _CreateDogInfo($info) {
//	_Log("[_CreateDogInfo] start.");
//	_Log("[_CreateDogInfo] info='".print_r($info, true)."'");
//
//	//SQLを作成する。
//	$sql = "\n insert into dog (";
//	$sql .= "\n  BREEDER_ID";							//ブリーダーID
//	$sql .= "\n ,STATUS_ID";							//状況
//	$sql .= "\n ,PRICE";								//価格
//	$sql .= "\n ,CARRY_ID";								//掲載フラグ
//	$sql .= "\n ,CARRY_YEAR";							//掲載日(年)
//	$sql .= "\n ,CARRY_MONTH";							//掲載日(月)
//	$sql .= "\n ,CARRY_DAY";							//掲載日(日)
//	$sql .= "\n ,PUPPY_NAME";							//仔犬の名前
//	$sql .= "\n ,FATHER_NAME";							//父犬の名前
//	$sql .= "\n ,MOTHER_NAME";							//母犬の名前
//	$sql .= "\n ,FATHER_ANCHOR";						//父犬アンカー
//	$sql .= "\n ,MOTHER_ANCHOR";						//母犬アンカー
//	$sql .= "\n ,SEX_ID";								//性別
//	$sql .= "\n ,BIRTH_YEAR";							//誕生日(年)
//	$sql .= "\n ,BIRTH_MONTH";							//誕生日(月)
//	$sql .= "\n ,BIRTH_DAY";							//誕生日(日)
//	$sql .= "\n ,SIBLING_COUNT";						//兄弟人数
//	$sql .= "\n ,SIBLING_NUM";							//兄弟何番目
//	$sql .= "\n ,TRANSFER_YEAR";						//お渡し時期(年)
//	$sql .= "\n ,TRANSFER_MONTH";						//お渡し時期(月)
//	$sql .= "\n ,TRANSFER_DAY";							//お渡し時期(日)
//	$sql .= "\n ,PEDIGREE_ID";							//血統書
//	$sql .= "\n ,HEREDITY_ID";							//遺伝性疾患
//	$sql .= "\n ,CONTRACEPTION_ID";						//避妊
//	$sql .= "\n ,VACCINE_ID";							//ワクチン
//	$sql .= "\n ,MEDICAL_HISTORY_ID";					//病歴
//	$sql .= "\n ,COMMENT";								//コメント
//	$sql .= "\n ,DOG_COLOR_ID";							//色
//	$sql .= "\n ,BODY_HEIGHT";							//体高
//	$sql .= "\n ,BODY_LONG";							//体長
//	$sql .= "\n ,BODY_WEIGHT";							//体重
//	$sql .= "\n ,GRADE_ID";								//グレード
//	$sql .= "\n ,PRIDE_PARTS";							//自慢のパーツ
//	$sql .= "\n ,SIZE_ID";								//大きさ
//	$sql .= "\n ,LOOKS_ID";								//顔立ち
//	$sql .= "\n ,CHARACTER_CURIOSITY_ID";				//性格(おとなしい-好奇心旺盛)
//	$sql .= "\n ,CHARACTER_PERMISSIVE_ID";				//性格(あまえんぼう-独り立ち気質)
//	$sql .= "\n ,CHARACTER_HEALING_ID";					//性格(癒し系-迫力あり)
//	$sql .= "\n ,CHARACTER_OTHERS";						//性格(その他)
//	$sql .= "\n ,HABIT";								//くせ＆好きなこと
//	$sql .= "\n ,CONSIDERATION";						//心配していること
//	$sql .= "\n ,NOTE";									//備考
//	$sql .= "\n ,DEL_FLAG";								//削除フラグ
//	$sql .= "\n ,CREATE_IP";							//作成IP
//	$sql .= "\n ,CREATE_DATE";							//作成日
//	$sql .= "\n ,UPDATE_IP";							//更新IP
//	$sql .= "\n ,UPDATE_DATE";							//更新日
//
//	$sql .= "\n  ) values (";
//
//	//ブリーダーID int
//	if (_IsNull($info['BREEDER_ID'])) {
//		$sql .= "\n  null";
//	} else {
//		$sql .= "\n  '".mysql_real_escape_string($info['BREEDER_ID'])."'";
//	}
//	//状況 int
//	if (_IsNull($info['STATUS_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['STATUS_ID'])."'";
//	}
//	//価格 int
//	if (_IsNull($info['PRICE'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['PRICE'])."'";
//	}
//	//掲載フラグ int
//	if (_IsNull($info['CARRY_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CARRY_ID'])."'";
//	}
//	//掲載日(年) int
//	if (_IsNull($info['CARRY_YEAR'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CARRY_YEAR'])."'";
//	}
//	//掲載日(月) int
//	if (_IsNull($info['CARRY_MONTH'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CARRY_MONTH'])."'";
//	}
//	//掲載日(日) int
//	if (_IsNull($info['CARRY_DAY'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CARRY_DAY'])."'";
//	}
//	//仔犬の名前 varchar
//	if (_IsNull($info['PUPPY_NAME'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['PUPPY_NAME'])."'";
//	}
//	//父犬の名前 varchar
//	if (_IsNull($info['FATHER_NAME'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['FATHER_NAME'])."'";
//	}
//	//母犬の名前 varchar
//	if (_IsNull($info['MOTHER_NAME'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['MOTHER_NAME'])."'";
//	}
//	//父犬アンカー varchar
//	if (_IsNull($info['FATHER_ANCHOR'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['FATHER_ANCHOR'])."'";
//	}
//	//母犬アンカー varchar
//	if (_IsNull($info['MOTHER_ANCHOR'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['MOTHER_ANCHOR'])."'";
//	}
//	//性別 int
//	if (_IsNull($info['SEX_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['SEX_ID'])."'";
//	}
//	//誕生日(年) int
//	if (_IsNull($info['BIRTH_YEAR'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['BIRTH_YEAR'])."'";
//	}
//	//誕生日(月) int
//	if (_IsNull($info['BIRTH_MONTH'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['BIRTH_MONTH'])."'";
//	}
//	//誕生日(日) int
//	if (_IsNull($info['BIRTH_DAY'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['BIRTH_DAY'])."'";
//	}
//	//兄弟人数 int
//	if (_IsNull($info['SIBLING_COUNT'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['SIBLING_COUNT'])."'";
//	}
//	//兄弟何番目 int
//	if (_IsNull($info['SIBLING_NUM'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['SIBLING_NUM'])."'";
//	}
//	//お渡し時期(年) int
//	if (_IsNull($info['TRANSFER_YEAR'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['TRANSFER_YEAR'])."'";
//	}
//	//お渡し時期(月) int
//	if (_IsNull($info['TRANSFER_MONTH'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['TRANSFER_MONTH'])."'";
//	}
//	//お渡し時期(日) int
//	if (_IsNull($info['TRANSFER_DAY'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['TRANSFER_DAY'])."'";
//	}
//	//血統書 int
//	if (_IsNull($info['PEDIGREE_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['PEDIGREE_ID'])."'";
//	}
//	//遺伝性疾患 int
//	if (_IsNull($info['HEREDITY_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['HEREDITY_ID'])."'";
//	}
//	//避妊 int
//	if (_IsNull($info['CONTRACEPTION_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CONTRACEPTION_ID'])."'";
//	}
//	//ワクチン int
//	if (_IsNull($info['VACCINE_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['VACCINE_ID'])."'";
//	}
//	//病歴 int
//	if (_IsNull($info['MEDICAL_HISTORY_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['MEDICAL_HISTORY_ID'])."'";
//	}
//	//コメント text
//	if (_IsNull($info['COMMENT'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['COMMENT'])."'";
//	}
//	//色 int
//	if (_IsNull($info['DOG_COLOR_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['DOG_COLOR_ID'])."'";
//	}
//	//体高 double
//	if (_IsNull($info['BODY_HEIGHT'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['BODY_HEIGHT'])."'";
//	}
//	//体長 double
//	if (_IsNull($info['BODY_LONG'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['BODY_LONG'])."'";
//	}
//	//体重 double
//	if (_IsNull($info['BODY_WEIGHT'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['BODY_WEIGHT'])."'";
//	}
//	//グレード int
//	if (_IsNull($info['GRADE_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['GRADE_ID'])."'";
//	}
//	//自慢のパーツ text
//	if (_IsNull($info['PRIDE_PARTS'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['PRIDE_PARTS'])."'";
//	}
//	//大きさ int
//	if (_IsNull($info['SIZE_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['SIZE_ID'])."'";
//	}
//	//顔立ち int
//	if (_IsNull($info['LOOKS_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['LOOKS_ID'])."'";
//	}
//	//性格(おとなしい-好奇心旺盛) int
//	if (_IsNull($info['CHARACTER_CURIOSITY_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CHARACTER_CURIOSITY_ID'])."'";
//	}
//	//性格(あまえんぼう-独り立ち気質) int
//	if (_IsNull($info['CHARACTER_PERMISSIVE_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CHARACTER_PERMISSIVE_ID'])."'";
//	}
//	//性格(癒し系-迫力あり) int
//	if (_IsNull($info['CHARACTER_HEALING_ID'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CHARACTER_HEALING_ID'])."'";
//	}
//	//性格(その他) text
//	if (_IsNull($info['CHARACTER_OTHERS'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CHARACTER_OTHERS'])."'";
//	}
//	//くせ＆好きなこと text
//	if (_IsNull($info['HABIT'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['HABIT'])."'";
//	}
//	//心配していること text
//	if (_IsNull($info['CONSIDERATION'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CONSIDERATION'])."'";
//	}
//	//備考 text
//	if (_IsNull($info['NOTE'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['NOTE'])."'";
//	}
//	//削除フラグ int
//	if (_IsNull($info['DEL_FLAG'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['DEL_FLAG'])."'";
//	}
//	//作成IP varchar
//	if (_IsNull($info['CREATE_IP'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CREATE_IP'])."'";
//	}
//	//作成日 datetime
//	if (_IsNull($info['CREATE_DATE'])) {
//		$sql .= "\n ,now()";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CREATE_DATE'])."'";
//	}
//	//更新IP varchar
//	if (_IsNull($info['UPDATE_IP'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['UPDATE_IP'])."'";
//	}
//	//更新日 datetime
//	if (_IsNull($info['UPDATE_DATE'])) {
//		$sql .= "\n ,now()";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['UPDATE_DATE'])."'";
//	}
//
//	$sql .= "\n )";
//
//	_Log("[_CreateDogInfo] sql='".$sql."'", 2);
//
//    //SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	_Log("[_CreateDogInfo] end.");
//
//}
//
///**
// * 犬情報を更新する。
// * 引き数	$info				:犬情報
// * 戻り値  なし
// */
//function _SaveDogInfo($info) {
//	_Log("[_SaveDogInfo] start.");
//
//	//SQLを作成する。
//    $sql = "\n update dog set";
//	//ブリーダーID int
//	if (_IsNull($info['BREEDER_ID'])) {
//		$sql .= "\n  BREEDER_ID = null";
//	} else {
//		$sql .= "\n  BREEDER_ID = '".mysql_real_escape_string($info['BREEDER_ID'])."'";
//	}
//	//状況 int
//	if (_IsNull($info['STATUS_ID'])) {
//		$sql .= "\n ,STATUS_ID = null";
//	} else {
//		$sql .= "\n ,STATUS_ID = '".mysql_real_escape_string($info['STATUS_ID'])."'";
//	}
//	//価格 int
//	if (_IsNull($info['PRICE'])) {
//		$sql .= "\n ,PRICE = null";
//	} else {
//		$sql .= "\n ,PRICE = '".mysql_real_escape_string($info['PRICE'])."'";
//	}
//	//掲載フラグ int
//	if (_IsNull($info['CARRY_ID'])) {
//		$sql .= "\n ,CARRY_ID = null";
//	} else {
//		$sql .= "\n ,CARRY_ID = '".mysql_real_escape_string($info['CARRY_ID'])."'";
//	}
//	//掲載日(年) int
//	if (_IsNull($info['CARRY_YEAR'])) {
//		$sql .= "\n ,CARRY_YEAR = null";
//	} else {
//		$sql .= "\n ,CARRY_YEAR = '".mysql_real_escape_string($info['CARRY_YEAR'])."'";
//	}
//	//掲載日(月) int
//	if (_IsNull($info['CARRY_MONTH'])) {
//		$sql .= "\n ,CARRY_MONTH = null";
//	} else {
//		$sql .= "\n ,CARRY_MONTH = '".mysql_real_escape_string($info['CARRY_MONTH'])."'";
//	}
//	//掲載日(日) int
//	if (_IsNull($info['CARRY_DAY'])) {
//		$sql .= "\n ,CARRY_DAY = null";
//	} else {
//		$sql .= "\n ,CARRY_DAY = '".mysql_real_escape_string($info['CARRY_DAY'])."'";
//	}
//	//仔犬の名前 varchar
//	if (_IsNull($info['PUPPY_NAME'])) {
//		$sql .= "\n ,PUPPY_NAME = null";
//	} else {
//		$sql .= "\n ,PUPPY_NAME = '".mysql_real_escape_string($info['PUPPY_NAME'])."'";
//	}
//	//父犬の名前 varchar
//	if (_IsNull($info['FATHER_NAME'])) {
//		$sql .= "\n ,FATHER_NAME = null";
//	} else {
//		$sql .= "\n ,FATHER_NAME = '".mysql_real_escape_string($info['FATHER_NAME'])."'";
//	}
//	//母犬の名前 varchar
//	if (_IsNull($info['MOTHER_NAME'])) {
//		$sql .= "\n ,MOTHER_NAME = null";
//	} else {
//		$sql .= "\n ,MOTHER_NAME = '".mysql_real_escape_string($info['MOTHER_NAME'])."'";
//	}
//	//父犬アンカー varchar
//	if (_IsNull($info['FATHER_ANCHOR'])) {
//		$sql .= "\n ,FATHER_ANCHOR = null";
//	} else {
//		$sql .= "\n ,FATHER_ANCHOR = '".mysql_real_escape_string($info['FATHER_ANCHOR'])."'";
//	}
//	//母犬アンカー varchar
//	if (_IsNull($info['MOTHER_ANCHOR'])) {
//		$sql .= "\n ,MOTHER_ANCHOR = null";
//	} else {
//		$sql .= "\n ,MOTHER_ANCHOR = '".mysql_real_escape_string($info['MOTHER_ANCHOR'])."'";
//	}
//	//性別 int
//	if (_IsNull($info['SEX_ID'])) {
//		$sql .= "\n ,SEX_ID = null";
//	} else {
//		$sql .= "\n ,SEX_ID = '".mysql_real_escape_string($info['SEX_ID'])."'";
//	}
//	//誕生日(年) int
//	if (_IsNull($info['BIRTH_YEAR'])) {
//		$sql .= "\n ,BIRTH_YEAR = null";
//	} else {
//		$sql .= "\n ,BIRTH_YEAR = '".mysql_real_escape_string($info['BIRTH_YEAR'])."'";
//	}
//	//誕生日(月) int
//	if (_IsNull($info['BIRTH_MONTH'])) {
//		$sql .= "\n ,BIRTH_MONTH = null";
//	} else {
//		$sql .= "\n ,BIRTH_MONTH = '".mysql_real_escape_string($info['BIRTH_MONTH'])."'";
//	}
//	//誕生日(日) int
//	if (_IsNull($info['BIRTH_DAY'])) {
//		$sql .= "\n ,BIRTH_DAY = null";
//	} else {
//		$sql .= "\n ,BIRTH_DAY = '".mysql_real_escape_string($info['BIRTH_DAY'])."'";
//	}
//	//兄弟人数 int
//	if (_IsNull($info['SIBLING_COUNT'])) {
//		$sql .= "\n ,SIBLING_COUNT = null";
//	} else {
//		$sql .= "\n ,SIBLING_COUNT = '".mysql_real_escape_string($info['SIBLING_COUNT'])."'";
//	}
//	//兄弟何番目 int
//	if (_IsNull($info['SIBLING_NUM'])) {
//		$sql .= "\n ,SIBLING_NUM = null";
//	} else {
//		$sql .= "\n ,SIBLING_NUM = '".mysql_real_escape_string($info['SIBLING_NUM'])."'";
//	}
//	//お渡し時期(年) int
//	if (_IsNull($info['TRANSFER_YEAR'])) {
//		$sql .= "\n ,TRANSFER_YEAR = null";
//	} else {
//		$sql .= "\n ,TRANSFER_YEAR = '".mysql_real_escape_string($info['TRANSFER_YEAR'])."'";
//	}
//	//お渡し時期(月) int
//	if (_IsNull($info['TRANSFER_MONTH'])) {
//		$sql .= "\n ,TRANSFER_MONTH = null";
//	} else {
//		$sql .= "\n ,TRANSFER_MONTH = '".mysql_real_escape_string($info['TRANSFER_MONTH'])."'";
//	}
//	//お渡し時期(日) int
//	if (_IsNull($info['TRANSFER_DAY'])) {
//		$sql .= "\n ,TRANSFER_DAY = null";
//	} else {
//		$sql .= "\n ,TRANSFER_DAY = '".mysql_real_escape_string($info['TRANSFER_DAY'])."'";
//	}
//	//血統書 int
//	if (_IsNull($info['PEDIGREE_ID'])) {
//		$sql .= "\n ,PEDIGREE_ID = null";
//	} else {
//		$sql .= "\n ,PEDIGREE_ID = '".mysql_real_escape_string($info['PEDIGREE_ID'])."'";
//	}
//	//遺伝性疾患 int
//	if (_IsNull($info['HEREDITY_ID'])) {
//		$sql .= "\n ,HEREDITY_ID = null";
//	} else {
//		$sql .= "\n ,HEREDITY_ID = '".mysql_real_escape_string($info['HEREDITY_ID'])."'";
//	}
//	//避妊 int
//	if (_IsNull($info['CONTRACEPTION_ID'])) {
//		$sql .= "\n ,CONTRACEPTION_ID = null";
//	} else {
//		$sql .= "\n ,CONTRACEPTION_ID = '".mysql_real_escape_string($info['CONTRACEPTION_ID'])."'";
//	}
//	//ワクチン int
//	if (_IsNull($info['VACCINE_ID'])) {
//		$sql .= "\n ,VACCINE_ID = null";
//	} else {
//		$sql .= "\n ,VACCINE_ID = '".mysql_real_escape_string($info['VACCINE_ID'])."'";
//	}
//	//病歴 int
//	if (_IsNull($info['MEDICAL_HISTORY_ID'])) {
//		$sql .= "\n ,MEDICAL_HISTORY_ID = null";
//	} else {
//		$sql .= "\n ,MEDICAL_HISTORY_ID = '".mysql_real_escape_string($info['MEDICAL_HISTORY_ID'])."'";
//	}
//	//コメント text
//	if (_IsNull($info['COMMENT'])) {
//		$sql .= "\n ,COMMENT = null";
//	} else {
//		$sql .= "\n ,COMMENT = '".mysql_real_escape_string($info['COMMENT'])."'";
//	}
//	//色 int
//	if (_IsNull($info['DOG_COLOR_ID'])) {
//		$sql .= "\n ,DOG_COLOR_ID = null";
//	} else {
//		$sql .= "\n ,DOG_COLOR_ID = '".mysql_real_escape_string($info['DOG_COLOR_ID'])."'";
//	}
//	//体高 double
//	if (_IsNull($info['BODY_HEIGHT'])) {
//		$sql .= "\n ,BODY_HEIGHT = null";
//	} else {
//		$sql .= "\n ,BODY_HEIGHT = '".mysql_real_escape_string($info['BODY_HEIGHT'])."'";
//	}
//	//体長 double
//	if (_IsNull($info['BODY_LONG'])) {
//		$sql .= "\n ,BODY_LONG = null";
//	} else {
//		$sql .= "\n ,BODY_LONG = '".mysql_real_escape_string($info['BODY_LONG'])."'";
//	}
//	//体重 double
//	if (_IsNull($info['BODY_WEIGHT'])) {
//		$sql .= "\n ,BODY_WEIGHT = null";
//	} else {
//		$sql .= "\n ,BODY_WEIGHT = '".mysql_real_escape_string($info['BODY_WEIGHT'])."'";
//	}
//	//グレード int
//	if (_IsNull($info['GRADE_ID'])) {
//		$sql .= "\n ,GRADE_ID = null";
//	} else {
//		$sql .= "\n ,GRADE_ID = '".mysql_real_escape_string($info['GRADE_ID'])."'";
//	}
//	//自慢のパーツ text
//	if (_IsNull($info['PRIDE_PARTS'])) {
//		$sql .= "\n ,PRIDE_PARTS = null";
//	} else {
//		$sql .= "\n ,PRIDE_PARTS = '".mysql_real_escape_string($info['PRIDE_PARTS'])."'";
//	}
//	//大きさ int
//	if (_IsNull($info['SIZE_ID'])) {
//		$sql .= "\n ,SIZE_ID = null";
//	} else {
//		$sql .= "\n ,SIZE_ID = '".mysql_real_escape_string($info['SIZE_ID'])."'";
//	}
//	//顔立ち int
//	if (_IsNull($info['LOOKS_ID'])) {
//		$sql .= "\n ,LOOKS_ID = null";
//	} else {
//		$sql .= "\n ,LOOKS_ID = '".mysql_real_escape_string($info['LOOKS_ID'])."'";
//	}
//	//性格(おとなしい-好奇心旺盛) int
//	if (_IsNull($info['CHARACTER_CURIOSITY_ID'])) {
//		$sql .= "\n ,CHARACTER_CURIOSITY_ID = null";
//	} else {
//		$sql .= "\n ,CHARACTER_CURIOSITY_ID = '".mysql_real_escape_string($info['CHARACTER_CURIOSITY_ID'])."'";
//	}
//	//性格(あまえんぼう-独り立ち気質) int
//	if (_IsNull($info['CHARACTER_PERMISSIVE_ID'])) {
//		$sql .= "\n ,CHARACTER_PERMISSIVE_ID = null";
//	} else {
//		$sql .= "\n ,CHARACTER_PERMISSIVE_ID = '".mysql_real_escape_string($info['CHARACTER_PERMISSIVE_ID'])."'";
//	}
//	//性格(癒し系-迫力あり) int
//	if (_IsNull($info['CHARACTER_HEALING_ID'])) {
//		$sql .= "\n ,CHARACTER_HEALING_ID = null";
//	} else {
//		$sql .= "\n ,CHARACTER_HEALING_ID = '".mysql_real_escape_string($info['CHARACTER_HEALING_ID'])."'";
//	}
//	//性格(その他) text
//	if (_IsNull($info['CHARACTER_OTHERS'])) {
//		$sql .= "\n ,CHARACTER_OTHERS = null";
//	} else {
//		$sql .= "\n ,CHARACTER_OTHERS = '".mysql_real_escape_string($info['CHARACTER_OTHERS'])."'";
//	}
//	//くせ＆好きなこと text
//	if (_IsNull($info['HABIT'])) {
//		$sql .= "\n ,HABIT = null";
//	} else {
//		$sql .= "\n ,HABIT = '".mysql_real_escape_string($info['HABIT'])."'";
//	}
//	//心配していること text
//	if (_IsNull($info['CONSIDERATION'])) {
//		$sql .= "\n ,CONSIDERATION = null";
//	} else {
//		$sql .= "\n ,CONSIDERATION = '".mysql_real_escape_string($info['CONSIDERATION'])."'";
//	}
//	//備考 text
//	if (_IsNull($info['NOTE'])) {
//		$sql .= "\n ,NOTE = null";
//	} else {
//		$sql .= "\n ,NOTE = '".mysql_real_escape_string($info['NOTE'])."'";
//	}
//	//削除フラグ int
//	if (_IsNull($info['DEL_FLAG'])) {
//		$sql .= "\n ,DEL_FLAG = null";
//	} else {
//		$sql .= "\n ,DEL_FLAG = '".mysql_real_escape_string($info['DEL_FLAG'])."'";
//	}
//	//更新IP varchar
//	if (_IsNull($info['UPDATE_IP'])) {
//		$sql .= "\n ,UPDATE_IP = null";
//	} else {
//		$sql .= "\n ,UPDATE_IP = '".mysql_real_escape_string($info['UPDATE_IP'])."'";
//	}
//	//更新日 datetime
//	if (_IsNull($info['UPDATE_DATE'])) {
//		$sql .= "\n ,UPDATE_DATE = now()";
//	} else {
//		$sql .= "\n ,UPDATE_DATE = '".mysql_real_escape_string($info['UPDATE_DATE'])."'";
//	}
//
//    $sql .= "\n  where";
//	$sql .= "\n 	DOG_ID = '".mysql_real_escape_string($info['DOG_ID'])."'";
//
// 	_Log("[_SaveDogInfo] sql='".$sql."'", 2);
//
//    //SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	_Log("[_SaveDogInfo] end.");
//
//}
//
///**
// * 最大の犬IDを取得する。
// * 引き数	$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	最大の犬ID
// */
//function _GetMaxDogID($undeleteOnly = true) {
//	_Log("[_GetMaxDogID] start.");
//
//	//SQLを作成する。
//	$sql .= "\n select";
//	$sql .= "\n 		max(DOG_ID) max_id";
//	$sql .= "\n  from";
//	$sql .= "\n 		dog";
//
//	if ($undeleteOnly) $sql .= "\n  where	DEL_FLAG = ".DELETE_FLAG_NO;
//
//	_Log("[_GetMaxDogID] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$line = mysql_fetch_array($result, MYSQL_ASSOC);
//
//	$maxId = 0;
//	if ($line['max_id']!="") $maxId = $line['max_id'];
//
//	_Log("[_GetMaxDogID] now max user_id='".$line['max_id']."'");
//
//	_Log("[_GetMaxDogID] end.");
//
//	return $maxId;
//}
//
///**
// * 指定したブリーダーIDに関連する犬情報を取得する。
// * 引き数	$breederId		:ブリーダーID
// * 			$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	犬情報の配列
// */
//function _GetDogList($breederId, $undeleteOnly = true) {
//	_Log("[_GetDogList] start.");
//	_Log("[_GetDogList] (引数)ブリーダーID='".$breederId."'");
//	_Log("[_GetDogList] (引数)未削除データのみ取得するか？='".$undeleteOnly."'");
//
//
//	if (_IsNull($breederId)) {
//		_Log("[_GetDogList] breederId is null.");
//		_Log("[_GetDogList] end.");
//		return null;
//	}
//
//	//SQLを作成する。
//	$sql .= "\n select";
//	$sql .= "\n		*";
//	$sql .= "\n from";
//	$sql .= "\n		dog";
//	$sql .= "\n where 1=1";
//	$sql .= "\n and	BREEDER_ID = ".mysql_real_escape_string($breederId);
//
//	if ($undeleteOnly) $sql .= "\n and	DEL_FLAG = ".DELETE_FLAG_NO;
//
//	$sql .= "\n order by";
//	$sql .= "\n  DOG_ID";
//
//	_Log("[_GetDogList] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$resultList = array();
//	//検索結果を配列に格納
//	while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//		$resultList[$line['DOG_ID']] = $line;
//	}
//
//	_Log("[_GetDogList] count(\$resultList)='".count($resultList)."'");
//	_Log("[_GetDogList] \$resultList='".print_r($resultList,true)."'");
//
//	if (count($resultList)==0) $resultList = null;
//
//	_Log("[_GetDogList] end.");
//	return $resultList;
//}
//
///**
// * 指定した犬IDに関連する犬情報を取得する。
// * 引き数	$dogId			:犬ID
// * 			$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	マスタ情報
// */
//function _GetDogInfo($dogId, $undeleteOnly = true) {
//	_Log("[_GetDogInfo] start.");
//
//	if (_IsNull($dogId)) {
//		_Log("[_GetDogInfo] DogId is null.");
//		_Log("[_GetDogInfo] end.");
//		return null;
//	}
//	if (!_IsHalfSizeNumeric($dogId)) {
//		_Log("[_GetDogInfo] DogId is not Half Size Numeric.");
//		_Log("[_GetDogInfo] end.");
//		return null;
//	}
//
//	//SQLを作成する。
//	$sql = "\n select";
//	$sql .= "\n 	 dg.*";
//	$sql .= "\n 	,m_brdr.NAME BREEDER_NAME";							//ブリーダー名
//	$sql .= "\n 	,m_brdr.HTML_FILE_NAME BREEDER_HTML_FILE_NAME";		//ブリーダー紹介ページHTMLファイル名
//	$sql .= "\n 	,m_sts.NAME STATUS_NAME";							//状況名
//	$sql .= "\n 	,m_cry.NAME CARRY_NAME";							//掲載フラグ名
//	$sql .= "\n 	,m_dg_sex.NAME DOG_SEX_NAME";						//性別名
//	$sql .= "\n 	,m_pdgr.NAME PEDIGREE_NAME";						//血統書名
//	$sql .= "\n 	,m_hrdty.NAME HEREDITY_NAME";						//遺伝性疾患名
//	$sql .= "\n 	,m_cntr.NAME CONTRACEPTION_NAME";					//避妊名
//	$sql .= "\n 	,m_vcin.NAME VACCINE_NAME";							//ワクチン名
//	$sql .= "\n 	,m_mdcl_his.NAME MEDICAL_HISTORY_NAME";				//病歴名
//	$sql .= "\n 	,m_dg_clr.NAME DOG_COLOR_NAME";						//毛色名
//	$sql .= "\n 	,m_grd.NAME GRADE_NAME";							//グレード名
//	$sql .= "\n 	,m_siz.NAME SIZE_NAME";								//大きさ名
//	$sql .= "\n 	,m_lks.NAME LOOKS_NAME";							//顔立ち名
//	$sql .= "\n 	,m_chr_cri.NAME CHARACTER_CURIOSITY_NAME";			//性格(おとなしい-好奇心旺盛)名
//	$sql .= "\n 	,m_chr_prm.NAME CHARACTER_PERMISSIVE_NAME";			//性格(あまえんぼう-独り立ち気質)名
//	$sql .= "\n 	,m_chr_hel.NAME CHARACTER_HEALING_NAME";			//性格(癒し系-迫力あり)名
//
//	$sql .= "\n from ";
//	$sql .= "\n  	 dog dg";
//	$sql .= "\n  	 	left outer join mst_breeder m_brdr on dg.BREEDER_ID = m_brdr.ID";										//ブリーダーマスタ
//	$sql .= "\n  	 	left outer join mst_status m_sts on dg.STATUS_ID = m_sts.ID";											//状況マスタ
//	$sql .= "\n  	 	left outer join mst_carry m_cry on dg.CARRY_ID = m_cry.ID";												//掲載マスタ
//	$sql .= "\n  	 	left outer join mst_dog_sex m_dg_sex on dg.SEX_ID = m_dg_sex.ID";										//性別マスタ
//	$sql .= "\n  	 	left outer join mst_pedigree m_pdgr on dg.PEDIGREE_ID = m_pdgr.ID";										//血統書マスタ
//	$sql .= "\n  	 	left outer join mst_heredity m_hrdty on dg.HEREDITY_ID = m_hrdty.ID";									//遺伝性疾患マスタ
//	$sql .= "\n  	 	left outer join mst_contraception m_cntr on dg.CONTRACEPTION_ID = m_cntr.ID";							//避妊マスタ
//	$sql .= "\n  	 	left outer join mst_vaccine m_vcin on dg.VACCINE_ID = m_vcin.ID";										//ワクチンマスタ
//	$sql .= "\n  	 	left outer join mst_medical_history m_mdcl_his on dg.MEDICAL_HISTORY_ID = m_mdcl_his.ID";				//病歴マスタ
//	$sql .= "\n  	 	left outer join mst_dog_color m_dg_clr on dg.DOG_COLOR_ID = m_dg_clr.ID";								//毛色マスタ
//	$sql .= "\n  	 	left outer join mst_grade m_grd on dg.GRADE_ID = m_grd.ID";												//グレードマスタ
//	$sql .= "\n  	 	left outer join mst_size m_siz on dg.SIZE_ID = m_siz.ID";												//大きさマスタ
//	$sql .= "\n  	 	left outer join mst_looks m_lks on dg.LOOKS_ID = m_lks.ID";												//顔立ちマスタ
//	$sql .= "\n  	 	left outer join mst_character_curiosity m_chr_cri on dg.CHARACTER_CURIOSITY_ID = m_chr_cri.ID";			//性格（おとなしい-好奇心旺盛）マスタ
//	$sql .= "\n  	 	left outer join mst_character_permissive m_chr_prm on dg.CHARACTER_PERMISSIVE_ID = m_chr_prm.ID";		//性格（あまえんぼう-独り立ち気質）マスタ
//	$sql .= "\n  	 	left outer join mst_character_healing m_chr_hel on dg.CHARACTER_HEALING_ID = m_chr_hel.ID";				//性格（癒し系-迫力あり）マスタ
//
//	$sql .= "\n where";
//	$sql .= "\n		dg.DOG_ID = ".mysql_real_escape_string($dogId)."";
//
//	if ($undeleteOnly) $sql .= "\n  and	dg.DEL_FLAG = ".DELETE_FLAG_NO;
//
//	_Log("[_GetDogInfo] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$line = mysql_fetch_array($result, MYSQL_ASSOC);
//
//	_Log("[_GetDogInfo] count(\$line)='".count($line)."'");
//	_Log("[_GetDogInfo] \$line='".print_r($line,true)."'");
//
//	if (count($line) == 1) $line = null;
//
//	_Log("[_GetDogInfo] end.");
//
//	return $line;
//}
//
///**
// * 犬情報を検索する。
// * 引き数	$condition				:検索条件を格納した配列
// *  	 	$countOnly				:(Option)返り値指定フラウ{true:検索件数のみ/false:全情報}
// *   	 	$activePage				:(Option)表示するページ
// * 			$showNumberOfOnePage	:(Option)1ページの表示件数
// * 戻り値  検索結果を格納した配列
// */
//function _SearchDog($condition, $countOnly = false, $activePage = 1, $showNumberOfOnePage = PAGE_LINK_SHOW_NUM_OF_ONE_PAGE) {
//	_Log("[_SearchDog] start.");
//
//	//SQLを作成する。
//	$sql = "\n select ";
//
//	if ($countOnly) {
//		$sql .= "\n   count(*) CNT";
//	} else {
//		$sql .= "\n 	 dg.*";
//		$sql .= "\n 	,m_brdr.NAME BREEDER_NAME";							//ブリーダー名
//		$sql .= "\n 	,m_brdr.HTML_FILE_NAME BREEDER_HTML_FILE_NAME";		//ブリーダー紹介ページHTMLファイル名
//		$sql .= "\n 	,m_sts.NAME STATUS_NAME";							//状況名
//		$sql .= "\n 	,m_cry.NAME CARRY_NAME";							//掲載フラグ名
//		$sql .= "\n 	,m_dg_sex.NAME DOG_SEX_NAME";						//性別名
//		$sql .= "\n 	,m_pdgr.NAME PEDIGREE_NAME";						//血統書名
//		$sql .= "\n 	,m_hrdty.NAME HEREDITY_NAME";						//遺伝性疾患名
//		$sql .= "\n 	,m_cntr.NAME CONTRACEPTION_NAME";					//避妊名
//		$sql .= "\n 	,m_vcin.NAME VACCINE_NAME";							//ワクチン名
//		$sql .= "\n 	,m_mdcl_his.NAME MEDICAL_HISTORY_NAME";				//病歴名
//		$sql .= "\n 	,m_dg_clr.NAME DOG_COLOR_NAME";						//毛色名
//		$sql .= "\n 	,m_grd.NAME GRADE_NAME";							//グレード名
//		$sql .= "\n 	,m_siz.NAME SIZE_NAME";								//大きさ名
//		$sql .= "\n 	,m_lks.NAME LOOKS_NAME";							//顔立ち名
//		$sql .= "\n 	,m_chr_cri.NAME CHARACTER_CURIOSITY_NAME";			//性格(おとなしい-好奇心旺盛)名
//		$sql .= "\n 	,m_chr_prm.NAME CHARACTER_PERMISSIVE_NAME";			//性格(あまえんぼう-独り立ち気質)名
//		$sql .= "\n 	,m_chr_hel.NAME CHARACTER_HEALING_NAME";			//性格(癒し系-迫力あり)名
//	}
//
//	$sql .= "\n from ";
//	$sql .= "\n  	 dog dg";
//	$sql .= "\n  	 	left outer join mst_breeder m_brdr on dg.BREEDER_ID = m_brdr.ID";										//ブリーダーマスタ
//	$sql .= "\n  	 	left outer join mst_status m_sts on dg.STATUS_ID = m_sts.ID";											//状況マスタ
//	$sql .= "\n  	 	left outer join mst_carry m_cry on dg.CARRY_ID = m_cry.ID";												//掲載マスタ
//	$sql .= "\n  	 	left outer join mst_dog_sex m_dg_sex on dg.SEX_ID = m_dg_sex.ID";										//性別マスタ
//	$sql .= "\n  	 	left outer join mst_pedigree m_pdgr on dg.PEDIGREE_ID = m_pdgr.ID";										//血統書マスタ
//	$sql .= "\n  	 	left outer join mst_heredity m_hrdty on dg.HEREDITY_ID = m_hrdty.ID";									//遺伝性疾患マスタ
//	$sql .= "\n  	 	left outer join mst_contraception m_cntr on dg.CONTRACEPTION_ID = m_cntr.ID";							//避妊マスタ
//	$sql .= "\n  	 	left outer join mst_vaccine m_vcin on dg.VACCINE_ID = m_vcin.ID";										//ワクチンマスタ
//	$sql .= "\n  	 	left outer join mst_medical_history m_mdcl_his on dg.MEDICAL_HISTORY_ID = m_mdcl_his.ID";				//病歴マスタ
//	$sql .= "\n  	 	left outer join mst_dog_color m_dg_clr on dg.DOG_COLOR_ID = m_dg_clr.ID";								//毛色マスタ
//	$sql .= "\n  	 	left outer join mst_grade m_grd on dg.GRADE_ID = m_grd.ID";												//グレードマスタ
//	$sql .= "\n  	 	left outer join mst_size m_siz on dg.SIZE_ID = m_siz.ID";												//大きさマスタ
//	$sql .= "\n  	 	left outer join mst_looks m_lks on dg.LOOKS_ID = m_lks.ID";												//顔立ちマスタ
//	$sql .= "\n  	 	left outer join mst_character_curiosity m_chr_cri on dg.CHARACTER_CURIOSITY_ID = m_chr_cri.ID";			//性格（おとなしい-好奇心旺盛）マスタ
//	$sql .= "\n  	 	left outer join mst_character_permissive m_chr_prm on dg.CHARACTER_PERMISSIVE_ID = m_chr_prm.ID";		//性格（あまえんぼう-独り立ち気質）マスタ
//	$sql .= "\n  	 	left outer join mst_character_healing m_chr_hel on dg.CHARACTER_HEALING_ID = m_chr_hel.ID";				//性格（癒し系-迫力あり）マスタ
//
//	$sql .= "\n  where 1=1";
//
//
//	//条件を設定する。
//	//ブリーダー
//	if (!_IsNull($condition['BREEDER_ID'])) {
//		$buf = "";
//		foreach ($condition['BREEDER_ID'] as $value) {
//			if ($buf != "") $buf .= ",";
//			$buf .= mysql_real_escape_string($value);
//		}
//		if ($buf != "") {
//			$sql .= "\n  and dg.BREEDER_ID in (".$buf.")";
//		}
//	}
//	//毛色
//	if (!_IsNull($condition['DOG_COLOR_ID'])) {
//		$buf = "";
//		foreach ($condition['DOG_COLOR_ID'] as $value) {
//			if ($buf != "") $buf .= ",";
//			$buf .= mysql_real_escape_string($value);
//		}
//		if ($buf != "") {
//			$sql .= "\n  and dg.DOG_COLOR_ID in (".$buf.")";
//		}
//	}
//	//性別
//	if (!_IsNull($condition['SEX_ID'])) {
//		$buf = "";
//		foreach ($condition['SEX_ID'] as $value) {
//			if ($buf != "") $buf .= ",";
//			$buf .= mysql_real_escape_string($value);
//		}
//		if ($buf != "") {
//			$sql .= "\n  and dg.SEX_ID in (".$buf.")";
//		}
//	}
//
//	//価格(From)
//	if (!_IsNull($condition['PRICE_FROM'])) {
//		$sql .= "\n  and dg.PRICE >= ".$condition['PRICE_FROM']."";
//	}
//	//価格(To)
//	if (!_IsNull($condition['PRICE_TO'])) {
//		$sql .= "\n  and dg.PRICE <= ".$condition['PRICE_TO']."";
//	}
//
//	//掲載フラグ
//	if (!_IsNull($condition['CARRY_ID'])) {
//		$buf = "";
//		foreach ($condition['CARRY_ID'] as $value) {
//			if ($buf != "") $buf .= ",";
//			$buf .= mysql_real_escape_string($value);
//		}
//		if ($buf != "") {
//			$sql .= "\n  and dg.CARRY_ID in (".$buf.")";
//		}
//	}
//	//削除フラグ
//	if (!_IsNull($condition['DEL_FLAG'])) {
//		$buf = "";
//		foreach ($condition['DEL_FLAG'] as $value) {
//			if ($buf != "") $buf .= ",";
//			$buf .= mysql_real_escape_string($value);
//		}
//		if ($buf != "") {
//			$sql .= "\n  and dg.DEL_FLAG in (".$buf.")";
//		}
//	}
//	$sql .= "\n  order by";
//	$sql .= "\n		 dg.CARRY_YEAR desc";
//	$sql .= "\n		,dg.CARRY_MONTH desc";
//	$sql .= "\n		,dg.CARRY_DAY desc";
//	$sql .= "\n		,dg.DOG_ID desc";
//
//	//検索件数のみ場合、以下の条件は不要
//	if (!$countOnly) $sql .= "\n  limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
//
//
//	_Log("[_SearchDog] sql='".$sql."'" ,2);
////echo ("[_SearchDog] sql='".$sql."'");
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$listResult = array();
//	//検索結果を配列に格納
//	while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//		if ($countOnly) {
//			$listResult = $line;
//		} else {
//			$listResult[$line['DOG_ID']] = $line;
//		}
//	}
//
//	_Log("[_SearchDog] listResult='".print_r($listResult,true)."'");
//	_Log("[_SearchDog] end.");
//
//
//	if ($countOnly) {
//		return $listResult['CNT'];
//	} else {
//		if (count($listResult) == 0) $listResult = null;
//		return $listResult;
//	}
//}
//
///**
// * 犬情報を手色毎にカウントする。
// * 引き数	$condition				:検索条件を格納した配列
// * 戻り値  	検索結果を格納した配列
// */
//function _CountDogEveryColor($condition) {
//	_Log("[_CountDogEveryColor] start.");
//
//	//SQLを作成する。
//	$sql = "\n select ";
//	$sql .= "\n 	 dg.DOG_COLOR_ID";
//	$sql .= "\n 	,m_dg_clr.NAME DOG_COLOR_NAME";						//毛色名
//	$sql .= "\n 	,count(*) COUNT";
//	$sql .= "\n from ";
//	$sql .= "\n  	 dog dg";
//	$sql .= "\n  	 	left outer join mst_dog_color m_dg_clr on dg.DOG_COLOR_ID = m_dg_clr.ID";								//毛色マスタ
//
//	$sql .= "\n  where 1=1";
//
//
//	//条件を設定する。
//	//ブリーダー
//	if (!_IsNull($condition['BREEDER_ID'])) {
//		$buf = "";
//		foreach ($condition['BREEDER_ID'] as $value) {
//			if ($buf != "") $buf .= ",";
//			$buf .= mysql_real_escape_string($value);
//		}
//		if ($buf != "") {
//			$sql .= "\n  and dg.BREEDER_ID in (".$buf.")";
//		}
//	}
//	//毛色
//	if (!_IsNull($condition['DOG_COLOR_ID'])) {
//		$buf = "";
//		foreach ($condition['DOG_COLOR_ID'] as $value) {
//			if ($buf != "") $buf .= ",";
//			$buf .= mysql_real_escape_string($value);
//		}
//		if ($buf != "") {
//			$sql .= "\n  and dg.DOG_COLOR_ID in (".$buf.")";
//		}
//	}
//	//性別
//	if (!_IsNull($condition['SEX_ID'])) {
//		$buf = "";
//		foreach ($condition['SEX_ID'] as $value) {
//			if ($buf != "") $buf .= ",";
//			$buf .= mysql_real_escape_string($value);
//		}
//		if ($buf != "") {
//			$sql .= "\n  and dg.SEX_ID in (".$buf.")";
//		}
//	}
//
//	//価格(From)
//	if (!_IsNull($condition['PRICE_FROM'])) {
//		$sql .= "\n  and dg.PRICE >= ".$condition['PRICE_FROM']."";
//	}
//	//価格(To)
//	if (!_IsNull($condition['PRICE_TO'])) {
//		$sql .= "\n  and dg.PRICE <= ".$condition['PRICE_TO']."";
//	}
//
//	//掲載フラグ
//	$buf = "";
//	foreach ($condition['CARRY_ID'] as $value) {
//		if ($buf != "") $buf .= ",";
//		$buf .= mysql_real_escape_string($value);
//	}
//	if ($buf != "") {
//		$sql .= "\n  and dg.CARRY_ID in (".$buf.")";
//	}
//	//削除フラグ
//	$buf = "";
//	foreach ($condition['DEL_FLAG'] as $value) {
//		if ($buf != "") $buf .= ",";
//		$buf .= mysql_real_escape_string($value);
//	}
//	if ($buf != "") {
//		$sql .= "\n  and dg.DEL_FLAG in (".$buf.")";
//	}
//
//	$sql .= "\n  group by";
//	$sql .= "\n		  dg.DOG_COLOR_ID";
//	$sql .= "\n  order by";
//	$sql .= "\n		  COUNT desc";
//	$sql .= "\n		 ,dg.DOG_COLOR_ID";
//
//
//	_Log("[_CountDogEveryColor] sql='".$sql."'" ,2);
////echo ("[_CountDogEveryColor] sql='".$sql."'");
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$listResult = array();
//	//検索結果を配列に格納
//	while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//		$listResult[$line['DOG_COLOR_ID']] = $line;
//	}
//
//	_Log("[_CountDogEveryColor] listResult='".print_r($listResult,true)."'");
//	_Log("[_CountDogEveryColor] end.");
//
//	if (count($listResult) == 0) $listResult = null;
//	return $listResult;
//}
//
///* end   -----------------------------------------------犬情報関連----------------------------------------------- end   */
//
///* start ---------------------------------------------犬画像情報関連--------------------------------------------- start */
///**
// * 犬画像情報の画像Noを採番する。
// * 引き数  	$dogId			:犬ID
// *   		$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	次の連番
// */
//function _GetNextDogImageNo($dogId, $undeleteOnly = true) {
//	_Log("[_GetNextDogImageNo] start.");
//	_Log("[_GetNextDogImageNo] (引数)犬ID='".$dogId."'");
//	_Log("[_GetNextDogImageNo] (引数)未削除データのみ取得するか？='".$undeleteOnly."'");
//
//	$sql = "\n select	max(IMG_NO) max_no";
//	$sql .= "\n from	dog_image";
//	$sql .= "\n where	1=1";
//	$sql .= "\n and	DOG_ID = ".mysql_real_escape_string($dogId);
//	if ($undeleteOnly) $sql .= "\n and DEL_FLAG = ".DELETE_FLAG_NO;
//
//	_Log("[_GetNextDogImageNo] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	//検索結果を取得する。
//	$line = mysql_fetch_array($result, MYSQL_ASSOC);
//
//	$maxNo = $line['max_no'];
//	if (_IsNull($maxNo)) {
//		$nextNo = 1;
//	} else {
//		$nextNo = $maxNo + 1;
//	}
//
//	_Log("[_GetNextDogImageNo] 最大連番='".$maxNo."'");
//	_Log("[_GetNextDogImageNo] 次の連番='".$nextNo."'");
//	_Log("[_GetNextDogImageNo] end.");
//	return $nextNo;
//}
//
///**
// * 犬画像情報を登録する。
// * 引き数	$info	：犬情報
// * 戻り値  	なし
// */
//function _CreateDogImageInfo($info) {
//	_Log("[_CreateDogImageInfo] start.");
//	_Log("[_CreateDogImageInfo] info='".print_r($info, true)."'");
//
//	//SQLを作成する。
//	$sql = "\n insert into dog_image (";
//	$sql .= "\n  DOG_ID";						//犬ID
//	$sql .= "\n ,IMG_NO";						//画像No
//	$sql .= "\n ,FILE_NAME";					//オリジナルファイル名
//	$sql .= "\n ,FILE_NAME_SYS";				//システムファイル名
//	$sql .= "\n ,NOTE";							//備考
//	$sql .= "\n ,DEL_FLAG";						//削除フラグ
//	$sql .= "\n ,CREATE_IP";					//作成IP
//	$sql .= "\n ,CREATE_DATE";					//作成日
//	$sql .= "\n ,UPDATE_IP";					//更新IP
//	$sql .= "\n ,UPDATE_DATE";					//更新日
//
//	$sql .= "\n  ) values (";
//
//	//犬ID int
//	if (_IsNull($info['DOG_ID'])) {
//		$sql .= "\n  null";
//	} else {
//		$sql .= "\n  '".mysql_real_escape_string($info['DOG_ID'])."'";
//	}
//	//画像No int
//	if (_IsNull($info['IMG_NO'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['IMG_NO'])."'";
//	}
//	//オリジナルファイル名 varchar
//	if (_IsNull($info['FILE_NAME'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['FILE_NAME'])."'";
//	}
//	//システムファイル名 varchar
//	if (_IsNull($info['FILE_NAME_SYS'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['FILE_NAME_SYS'])."'";
//	}
//	//備考 varchar
//	if (_IsNull($info['NOTE'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['NOTE'])."'";
//	}
//	//削除フラグ int
//	if (_IsNull($info['DEL_FLAG'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['DEL_FLAG'])."'";
//	}
//	//作成IP varchar
//	if (_IsNull($info['CREATE_IP'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CREATE_IP'])."'";
//	}
//	//作成日 datetime
//	if (_IsNull($info['CREATE_DATE'])) {
//		$sql .= "\n ,now()";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CREATE_DATE'])."'";
//	}
//	//更新IP varchar
//	if (_IsNull($info['UPDATE_IP'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['UPDATE_IP'])."'";
//	}
//	//更新日 datetime
//	if (_IsNull($info['UPDATE_DATE'])) {
//		$sql .= "\n ,now()";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['UPDATE_DATE'])."'";
//	}
//
//	$sql .= "\n )";
//
//	_Log("[_CreateDogImageInfo] sql='".$sql."'", 2);
//
//    //SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	_Log("[_CreateDogImageInfo] end.");
//
//}
//
//
///**
// * 指定した犬IDに関連する犬画像情報を取得する。
// * 引き数	$dogId			:犬ID
// * 			$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	犬画像情報の配列
// */
//function _GetDogImageList($dogId, $undeleteOnly = true) {
//	_Log("[_GetDogImageList] start.");
//	_Log("[_GetDogImageList] (引数)犬ID='".$dogId."'");
//	_Log("[_GetDogImageList] (引数)未削除データのみ取得するか？='".$undeleteOnly."'");
//
//
//	if (_IsNull($dogId)) {
//		_Log("[_GetDogList] breederId is null.");
//		_Log("[_GetDogList] end.");
//		return null;
//	}
//
//	//SQLを作成する。
//	$sql .= "\n select";
//	$sql .= "\n		*";
//	$sql .= "\n from";
//	$sql .= "\n		dog_image";
//	$sql .= "\n where 1=1";
//	$sql .= "\n and	DOG_ID = ".mysql_real_escape_string($dogId);
//
//	if ($undeleteOnly) $sql .= "\n and	DEL_FLAG = ".DELETE_FLAG_NO;
//
//	$sql .= "\n order by";
//	$sql .= "\n  IMG_NO";
//
//	_Log("[_GetDogImageList] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$resultList = array();
//	//検索結果を配列に格納
//	while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//		$resultList[$line['IMG_NO']] = $line;
//	}
//
//	_Log("[_GetDogImageList] count(\$resultList)='".count($resultList)."'");
//	_Log("[_GetDogImageList] \$resultList='".print_r($resultList,true)."'");
//
//	if (count($resultList)==0) $resultList = null;
//
//	_Log("[_GetDogImageList] end.");
//	return $resultList;
//}
///* end   ---------------------------------------------犬画像情報関連--------------------------------------------- end   */


///////////////////////以下はmanimani用です。参考までにとってあります。

///* start ----------------------------------お客様情報-注文情報-注文明細情報関連---------------------------------- start */
///**
// * 注文情報(お客様情報、注文情報、注文明細情報)を登録する。
// * 引き数	$userInfo			：お客様情報
// * 			$orderInfo			：注文情報
// * 			$listOrderDetails	：注文明細情報
// * 戻り値  	なし
// */
//function _CreateOrder($userInfo, $orderInfo, $listOrderDetails) {
//	_Log("[_CreateOrder] start.");
//
//
//	//データベースを開く。
//	$cid = _DB_Open();
//
//	//お客様情報を登録する。
//	_CreateUserInfo($userInfo);
//	//今登録した最新のユーザーIDを取得する。
//	$userId = _GetMaxUserID(false);
//
//	//注文情報にユーザーIDを設定する。
//	$orderInfo['USER_ID'] = $userId;
//	//注文情報を登録する。
//	_CreateOrderSheetInfo($orderInfo);
//	//今登録した最新の注文IDを取得する。
//	$orderId = _GetMaxOrderID(false);
//
//	foreach ($listOrderDetails as $orderDetailsInfo) {
//		//注文明細情報に注文IDを設定する。
//		$orderDetailsInfo['ORDER_ID'] = $orderId;
//		//注文明細情報を登録する。
//		_CreateOrderSheetDetailsInfo($orderDetailsInfo);
//	}
//
//	//データベースを閉じる。
//	_DB_Close($cid);
//
//	_Log("[_CreateOrder] end.");
//
//}
//
///* end   ----------------------------------お客様情報-注文情報-注文明細情報関連---------------------------------- end   */
//
//
//
//
///* start ---------------------------------------------お客様情報関連--------------------------------------------- start */
///**
// * お客様情報を登録する。
// * 引き数	$info	：お客様情報
// * 戻り値  	なし
// */
//function _CreateUserInfo($info) {
//
//	_Log("[_CreateUserInfo] info='".print_r($info, true)."'");
//
//	//SQLを作成する。
//	$sql = "\n insert into user (";
//	$sql .= "\n  ACCOUNT";                         		//アカウントID
//	$sql .= "\n ,PASS";                         		//PASS
//	$sql .= "\n ,E_MAIL";                         		//E-Mail
//	$sql .= "\n ,FAMILY_NAME";                         	//名前(姓)
//	$sql .= "\n ,FIRST_NAME";                         	//名前(名)
//	$sql .= "\n ,FAMILY_NAME_KANA";                    	//ふりがな(姓)
//	$sql .= "\n ,FIRST_NAME_KANA";                     	//ふりがな(名)
//	$sql .= "\n ,ZIP1";                        	 		//郵便番号1
//	$sql .= "\n ,ZIP2";                         		//郵便番号2
//	$sql .= "\n ,PREF";                         		//住所(都道府県)
//	$sql .= "\n ,ADDRESS1";                         	//住所(市町村番地)
//	$sql .= "\n ,ADDRESS2";                         	//住所(マンション等)
//	$sql .= "\n ,TEL1";                         		//電話番号1
//	$sql .= "\n ,TEL2";                         		//電話番号2
//	$sql .= "\n ,TEL3";                         		//電話番号3
//	$sql .= "\n ,AGE";                         			//年代
//	$sql .= "\n ,AUTH_ID";                       	  	//権限
//	$sql .= "\n ,NOTE";                         		//備考
//	$sql .= "\n ,DEL_FLAG";                         	//削除フラグ
//	$sql .= "\n ,CREATE_IP";                         	//作成IP
//	$sql .= "\n ,CREATE_DATE";                         	//作成日
//	$sql .= "\n ,UPDATE_IP";                         	//更新IP
//	$sql .= "\n ,UPDATE_DATE";                         	//更新日
//	$sql .= "\n  ) values (";
//
//	//アカウントID
//	if (_IsNull($info['ACCOUNT'])) {
//		$sql .= "\n  null";
//	} else {
//		$sql .= "\n  '".mysql_real_escape_string($info['ACCOUNT'])."'";
//	}
//	//PASS
//	if (_IsNull($info['PASS'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['PASS'])."'";
//	}
//	//E-Mail
//	if (_IsNull($info['E_MAIL'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['E_MAIL'])."'";
//	}
//	//名前(姓)
//	if (_IsNull($info['FAMILY_NAME'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['FAMILY_NAME'])."'";
//	}
//	//名前(名)
//	if (_IsNull($info['FIRST_NAME'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['FIRST_NAME'])."'";
//	}
//	//ふりがな(姓)
//	if (_IsNull($info['FAMILY_NAME_KANA'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['FAMILY_NAME_KANA'])."'";
//	}
//	//ふりがな(名)
//	if (_IsNull($info['FIRST_NAME_KANA'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['FIRST_NAME_KANA'])."'";
//	}
//	//郵便番号1
//	if (_IsNull($info['ZIP1'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['ZIP1'])."'";
//	}
//	//郵便番号2
//	if (_IsNull($info['ZIP2'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['ZIP2'])."'";
//	}
//    //住所(都道府県)
//	if (_IsNull($info['PREF'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['PREF'])."'";
//	}
//	//住所(市町村番地)
//	if (_IsNull($info['ADDRESS1'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['ADDRESS1'])."'";
//	}
//	//住所(マンション等)
//	if (_IsNull($info['ADDRESS2'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['ADDRESS2'])."'";
//	}
//	//電話番号1
//	if (_IsNull($info['TEL1'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['TEL1'])."'";
//	}
//	//電話番号2
//	if (_IsNull($info['TEL2'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['TEL2'])."'";
//	}
//	//電話番号3
//	if (_IsNull($info['TEL3'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['TEL3'])."'";
//	}
//	//年代
//	if (_IsNull($info['AGE'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['AGE'])."'";
//	}
//	//権限
//	$sql .= "\n ,".mysql_real_escape_string($info['AUTH_ID'])."";
//	//備考
//	if (_IsNull($info['NOTE'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['NOTE'])."'";
//	}
//	//削除フラグ
//	$sql .= "\n ,".mysql_real_escape_string($info['DEL_FLAG'])."";
//	//作成IP
//	if (_IsNull($info['CREATE_IP'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CREATE_IP'])."'";
//	}
//	//作成日
//	$sql .= "\n ,now()";
//	//更新IP
//	if (_IsNull($info['UPDATE_IP'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['UPDATE_IP'])."'";
//	}
//	//更新日
//	$sql .= "\n ,now()";
//	$sql .= "\n )";
//
//	_Log("[_CreateUserInfo] sql='".$sql."'", 2);
//
//    //SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//}
//
///**
// * 最大のユーザーIDを取得する。
// * 引き数	$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	最大のユーザーID
// */
//function _GetMaxUserID($undeleteOnly = true) {
//
//	//SQLを作成する。
//	$sql .= "\n select";
//	$sql .= "\n 		max(USER_ID) max_id";
//	$sql .= "\n  from";
//	$sql .= "\n 		user";
//
//	if ($undeleteOnly) $sql .= "\n  where	DEL_FLAG = 0";
//
//	_Log("[_GetMaxUserID] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$line = mysql_fetch_array($result, MYSQL_ASSOC);
//
//	$maxId = 0;
//	if ($line['max_id']!="") $maxId = $line['max_id'];
//
//	_Log("[_GetMaxUserID] now max user_id='".$line['max_id']."'");
//
//	return $maxId;
//}
//
//
///**
// * 指定したアカウントID、PASSに関連するお客様情報を取得する。
// * 引き数	$account		：アカウントID
// *			$pass			:パスワード
// * *		$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	お客様情報
// */
//function _GetUserInfoByAccountPass($account, $pass, $undeleteOnly = true) {
//
//	//SQLを作成する。
//	$sql .= "\n select";
//	$sql .= "\n 		*";
//	$sql .= "\n  from";
//	$sql .= "\n 		user";
//	$sql .= "\n  where";
//	$sql .= "\n 		ACCOUNT = '".mysql_real_escape_string($account)."'";
//	$sql .= "\n  and	PASS = '".mysql_real_escape_string($pass)."'";
//	if ($undeleteOnly) $sql .= "\n  and	DEL_FLAG = 0";
//
//	_Log("[_GetUserInfoByAccountPass] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$line = mysql_fetch_array($result, MYSQL_ASSOC);
//
//	_Log("[_GetUserInfoByAccountPass] count(\$line)='".count($line)."'");
//	_Log("[_GetUserInfoByAccountPass] print_r(\$line)='".print_r($line,true)."'");
//	_Log("[_GetUserInfoByAccountPass] isset(\$line)='".isset($line)."'");
//
//	if (count($line) == 1) $line = null;
//
//	return $line;
//}
//
///**
// * 指定したユーザーIDに関連するお客様情報を取得する。
// * 引き数	$userId			:ユーザーID
// * 			$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	注文情報
// */
//function _GetUserInfo($userId, $undeleteOnly = true) {
//
//	//SQLを作成する。
//	$sql = "\n select";
//	$sql .= "\n   	usr.*";											//お客様情報
//	$sql .= "\n   ,m_auth.NAME AUTH_NAME";							//権限名称
//	$sql .= "\n  from ";
//	$sql .= "\n  	user usr left outer join mst_auth m_auth on usr.AUTH_ID = m_auth.ID";
//	$sql .= "\n  where";
//	$sql .= "\n  	usr.USER_ID = ".mysql_real_escape_string($userId)."";
//
//	if ($undeleteOnly) $sql .= "\n  and	usr.DEL_FLAG = 0";
//
//	_Log("[_GetUserInfo] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$line = mysql_fetch_array($result, MYSQL_ASSOC);
//
//	_Log("[_GetUserInfo] count(\$line)='".count($line)."'");
//	_Log("[_GetUserInfo] \$line='".print_r($line,true)."'");
//
//	if (count($line) == 1) $line = null;
//
//	return $line;
//}
//
///* end   ---------------------------------------------お客様情報関連--------------------------------------------- end   */
//
///* start ----------------------------------------------注文情報関連---------------------------------------------- start */
///**
// * 注文情報を登録する。
// * 引き数	$info	：注文情報
// * 戻り値  	なし
// */
//function _CreateOrderSheetInfo($info) {
//
//	_Log("[_CreateOrderSheetInfo] \$info='".print_r($info, true)."'");
//
//	//SQLを作成する。
//	$sql = "\n insert into order_sheet (";
//	$sql .= "\n  USER_ID";                           	//ユーザーID
//	$sql .= "\n ,STATUS_ID";                           	//状態
//	$sql .= "\n ,ORDER_NO";                           	//オーダー番号
//	$sql .= "\n ,ORDER_DATE";                          	//注文日付
//	$sql .= "\n ,END_DATE";                           	//完了日付
//	$sql .= "\n ,SETTLE_WAY";                          	//決済方法
//	$sql .= "\n ,SUBSTITUTE_CHARGE";                   	//代引き手数料
//	$sql .= "\n ,DELIVERY_WAY";                        	//配送方法
//	$sql .= "\n ,DELIVERY_CHARGE_WAY";                 	//送料方法
//	$sql .= "\n ,DELIVERY_CHARGE";                     	//送料
//	$sql .= "\n ,TOTAL_CHARGE";                        	//合計金額
//	$sql .= "\n ,DELIVERY_TIME";                       	//お届け時間
//	$sql .= "\n ,NOTE";                           		//備考
//	$sql .= "\n ,COMMENT";                           	//コメント
//	$sql .= "\n ,DEL_FLAG";                           	//削除フラグ
//	$sql .= "\n ,CREATE_IP";                           	//作成IP
//	$sql .= "\n ,CREATE_DATE";                         	//作成日
//	$sql .= "\n ,UPDATE_IP";                           	//更新IP
//	$sql .= "\n ,UPDATE_DATE";                         	//更新日
//	$sql .= "\n  ) values (";
//
//	//ユーザーID  int
//	$sql .= "\n  ".mysql_real_escape_string($info['USER_ID'])."";
//
//	//状態  int
//	$sql .= "\n ,".mysql_real_escape_string($info['STATUS_ID'])."";
//
//	//オーダー番号  varchar
//	if (_IsNull($info['ORDER_NO'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['ORDER_NO'])."'";
//	}
//
//	//注文日付  datetime
//	if (_IsNull($info['ORDER_DATE'])) {
//		$sql .= "\n ,now()";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['ORDER_DATE'])."'";
//	}
//
//	//完了日付  datetime
//	if (_IsNull($info['END_DATE'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['END_DATE'])."'";
//	}
//
//	//決済方法  varchar
//	if (_IsNull($info['SETTLE_WAY'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['SETTLE_WAY'])."'";
//	}
//
//	//代引き手数料  varchar
//	if (_IsNull($info['SUBSTITUTE_CHARGE'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['SUBSTITUTE_CHARGE'])."'";
//	}
//
//	//配送方法  varchar
//	if (_IsNull($info['DELIVERY_WAY'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['DELIVERY_WAY'])."'";
//	}
//
//	//送料方法  varchar
//	if (_IsNull($info['DELIVERY_CHARGE_WAY'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['DELIVERY_CHARGE_WAY'])."'";
//	}
//
//	//送料  varchar
//	if (_IsNull($info['DELIVERY_CHARGE'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['DELIVERY_CHARGE'])."'";
//	}
//
//	//合計金額  varchar
//	if (_IsNull($info['TOTAL_CHARGE'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['TOTAL_CHARGE'])."'";
//	}
//
//	//お届け時間  varchar
//	if (_IsNull($info['DELIVERY_TIME'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['DELIVERY_TIME'])."'";
//	}
//
//	//備考  text
//	if (_IsNull($info['NOTE'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['NOTE'])."'";
//	}
//
//	//コメント  text
//	if (_IsNull($info['COMMENT'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['COMMENT'])."'";
//	}
//
//	//削除フラグ  int
//	$sql .= "\n ,".mysql_real_escape_string($info['DEL_FLAG'])."";
//
//	//作成IP  varchar
//	if (_IsNull($info['CREATE_IP'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CREATE_IP'])."'";
//	}
//
//	//作成日  datetime
//	if (_IsNull($info['CREATE_DATE'])) {
//		$sql .= "\n ,now()";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['CREATE_DATE'])."'";
//	}
//
//	//更新IP  varchar
//	if (_IsNull($info['UPDATE_IP'])) {
//		$sql .= "\n ,null";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['UPDATE_IP'])."'";
//	}
//
//	//更新日  datetime
//	if (_IsNull($info['UPDATE_DATE'])) {
//		$sql .= "\n ,now()";
//	} else {
//		$sql .= "\n ,'".mysql_real_escape_string($info['UPDATE_DATE'])."'";
//	}
//
//
//	$sql .= "\n )";
//
//	_Log("[_CreateOrderSheetInfo] sql='".$sql."'", 2);
//
//    //SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//}
//
///**
// * 最大の注文IDを取得する。
// * 引き数	$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	最大の注文ID
// */
//function _GetMaxOrderID($undeleteOnly = true) {
//
//	//SQLを作成する。
//	$sql .= "\n select";
//	$sql .= "\n 		max(ORDER_ID) max_id";
//	$sql .= "\n  from";
//	$sql .= "\n 		order_sheet";
//
//	if ($undeleteOnly) $sql .= "\n  where	DEL_FLAG = 0";
//
//	_Log("[_GetMaxOrderID] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$line = mysql_fetch_array($result, MYSQL_ASSOC);
//
//	$maxId = 0;
//	if ($line['max_id']!="") $maxId = $line['max_id'];
//
//	_Log("[_GetMaxOrderID] now max order_id='".$line['max_id']."'");
//
//	return $maxId;
//}
//
///**
// * 注文情報を検索する。
// * 引き数	$condition				:検索条件を格納した配列
// *  	 	$countOnly				:(Option)返り値指定フラウ{true:検索件数のみ/false:全情報}
// *   	 	$activePage				:(Option)表示するページ
// * 			$showNumberOfOnePage	:(Option)1ページの表示件数
// * 戻り値  検索結果を格納した配列
// */
//function _SearchOrderSheet($condition, $countOnly = false, $activePage = 1, $showNumberOfOnePage = PAGE_LINK_SHOW_NUM_OF_ONE_PAGE) {
//
//	//SQLを作成する。
//	$sql = "\n select ";
//
//	if ($countOnly) {
//		$sql .= "\n   count(*) CNT";
//	} else {
//		$sql .= "\n   ord.*";											//注文情報
//
//		$sql .= "\n  ,usr.USER_ID USER_USER_ID"; 						//ユーザーID
//		$sql .= "\n  ,usr.ACCOUNT USER_ACCOUNT"; 						//アカウントID
//		$sql .= "\n  ,usr.PASS USER_PASS"; 								//PASS
//		$sql .= "\n  ,usr.E_MAIL USER_E_MAIL"; 							//E-Mail
//		$sql .= "\n  ,usr.FAMILY_NAME USER_FAMILY_NAME"; 				//名前(姓)
//		$sql .= "\n  ,usr.FIRST_NAME USER_FIRST_NAME"; 					//名前(名)
//		$sql .= "\n  ,usr.FAMILY_NAME_KANA USER_FAMILY_NAME_KANA"; 		//ふりがな(姓)
//		$sql .= "\n  ,usr.FIRST_NAME_KANA USER_FIRST_NAME_KANA"; 		//ふりがな(名)
//		$sql .= "\n  ,usr.ZIP1 USER_ZIP1"; 								//郵便番号1
//		$sql .= "\n  ,usr.ZIP2 USER_ZIP2"; 								//郵便番号2
//		$sql .= "\n  ,usr.PREF USER_PREF"; 								//住所(都道府県)
//		$sql .= "\n  ,usr.ADDRESS1 USER_ADDRESS1"; 						//住所(市町村番地)
//		$sql .= "\n  ,usr.ADDRESS2 USER_ADDRESS2"; 						//住所(マンション等)
//		$sql .= "\n  ,usr.TEL1 USER_TEL1"; 								//電話番号1
//		$sql .= "\n  ,usr.TEL2 USER_TEL2"; 								//電話番号2
//		$sql .= "\n  ,usr.TEL3 USER_TEL3"; 								//電話番号3
//		$sql .= "\n  ,usr.AUTH_ID USER_AUTH_ID"; 						//権限
//		$sql .= "\n  ,usr.NOTE USER_NOTE"; 								//備考
//		$sql .= "\n  ,usr.DEL_FLAG USER_DEL_FLAG"; 						//削除フラグ
//		$sql .= "\n  ,usr.CREATE_IP USER_CREATE_IP"; 					//作成IP
//		$sql .= "\n  ,usr.CREATE_DATE USER_CREATE_DATE"; 				//作成日
//		$sql .= "\n  ,usr.UPDATE_IP USER_UPDATE_IP"; 					//更新IP
//		$sql .= "\n  ,usr.UPDATE_DATE USER_UPDATE_DATE"; 				//更新日
//
//		$sql .= "\n  ,m_sts.NAME STATUS_NAME";							//状態名称
//		$sql .= "\n  ,m_sts.COLOR STATUS_COLOR";						//状態色
//	}
//
//	$sql .= "\n  from ";
//	$sql .= "\n       order_sheet ord left outer join user usr on ord.USER_ID = usr.USER_ID";
//	$sql .= "\n       			   	   left outer join mst_status m_sts on ord.STATUS_ID = m_sts.ID";
//
//	$sql .= "\n  where 1=1";
//
//
//	//条件を設定する。
//	//注文ID
//	if (!_IsNull($condition['ORDER_ID'])) {
//		$sql .= "\n  and ord.ORDER_ID = ".mysql_real_escape_string($condition['ORDER_ID'])."";
//	}
//
//	//オーダー番号
//	if (!_IsNull($condition['ORDER_NO'])) {
//		$sql .= "\n  and ord.ORDER_NO like '%".mysql_real_escape_string($condition['ORDER_NO'])."%'";
//	}
//	//お客様氏名
//	if (!_IsNull($condition['USER_NAME'])) {
//		$sql .= "\n  and (";
//		$sql .= "\n  	   usr.FAMILY_NAME like '%".mysql_real_escape_string($condition['USER_NAME'])."%'"; //名前(姓)
//		$sql .= "\n  	   or";
//		$sql .= "\n  	   usr.FIRST_NAME like '%".mysql_real_escape_string($condition['USER_NAME'])."%'"; //名前(名)
//		$sql .= "\n  	   or";
//		$sql .= "\n  	   usr.FAMILY_NAME_KANA like '%".mysql_real_escape_string($condition['USER_NAME'])."%'"; //ふりがな(姓)
//		$sql .= "\n  	   or";
//		$sql .= "\n  	   usr.FIRST_NAME_KANA like '%".mysql_real_escape_string($condition['USER_NAME'])."%'"; //ふりがな(名)
//		$sql .= "\n 	  )";
//	}
//	//お客様E-Mail
//	if (!_IsNull($condition['E_MAIL'])) {
//		$sql .= "\n  and usr.E_MAIL like '%".mysql_real_escape_string($condition['E_MAIL'])."%'";
//	}
//	//お客様電話番号1
//	if (!_IsNull($condition['TEL1'])) {
//		$sql .= "\n  and usr.TEL1 like '%".mysql_real_escape_string($condition['TEL1'])."%'";
//	}
//	//お客様電話番号2
//	if (!_IsNull($condition['TEL2'])) {
//		$sql .= "\n  and usr.TEL2 like '%".mysql_real_escape_string($condition['TEL2'])."%'";
//	}
//	//お客様電話番号3
//	if (!_IsNull($condition['TEL3'])) {
//		$sql .= "\n  and usr.TEL3 like '%".mysql_real_escape_string($condition['TEL3'])."%'";
//	}
//	//注文日付
//	$year = "";
//	$month = "";
//	$day = "";
//	//年(From)
//	if (!_IsNull($condition['ORDER_DATE_YEAR_FROM'])) {
//		//月(From)
//		if (!_IsNull($condition['ORDER_DATE_MONTH_FROM'])) {
//			//日(From)
//			if (!_IsNull($condition['ORDER_DATE_DAY_FROM'])) {
//				$year = $condition['ORDER_DATE_YEAR_FROM'];
//				$month = $condition['ORDER_DATE_MONTH_FROM'];
//				$day = $condition['ORDER_DATE_DAY_FROM'];
//			} else {
//				$year = $condition['ORDER_DATE_YEAR_FROM'];
//				$month = $condition['ORDER_DATE_DAY_FROM'];
//				$day = "1";
//			}
//		} else {
//				$year = $condition['ORDER_DATE_YEAR_FROM'];
//				$month = "1";
//				$day = "1";
//		}
//	}
//	if (!_IsNull($year) && !_IsNull($month) && !_IsNull($day)) {
//		$ymd = sprintf('%04d/%02d/%02d', $year, $month, $day);
//		$sql .= "\n  and date_format(ord.ORDER_DATE,'%Y/%m/%d') >= '".mysql_real_escape_string($ymd)."'";
//	}
//	$year = "";
//	$month = "";
//	$day = "";
//	//年(To)
//	if (!_IsNull($condition['ORDER_DATE_YEAR_TO'])) {
//		//月(To)
//		if (!_IsNull($condition['ORDER_DATE_MONTH_TO'])) {
//			//日(To)
//			if (!_IsNull($condition['ORDER_DATE_DAY_TO'])) {
//				$year = $condition['ORDER_DATE_YEAR_TO'];
//				$month = $condition['ORDER_DATE_MONTH_TO'];
//				$day = $condition['ORDER_DATE_DAY_TO'];
//			} else {
//				$year = $condition['ORDER_DATE_YEAR_TO'];
//				$month = $condition['ORDER_DATE_DAY_TO'];
//				$day = "31";
//			}
//		} else {
//				$year = $condition['ORDER_DATE_YEAR_TO'];
//				$month = "12";
//				$day = "31";
//		}
//	}
//	if (!_IsNull($year) && !_IsNull($month) && !_IsNull($day)) {
//		$ymd = sprintf('%04d/%02d/%02d', $year, $month, $day);
//		$sql .= "\n  and date_format(ord.ORDER_DATE,'%Y/%m/%d') <= '".mysql_real_escape_string($ymd)."'";
//	}
//	//状態
//	$buf = "";
//	foreach ($condition['STATUS_ID'] as $value) {
//		if ($buf != "") $buf .= ",";
//		$buf .= mysql_real_escape_string($value);
//	}
//	if ($buf != "") {
//		$sql .= "\n  and ord.STATUS_ID in (".$buf.")";
//	}
//	//削除フラグ
//	$buf = "";
//	foreach ($condition['DEL_FLAG'] as $value) {
//		if ($buf != "") $buf .= ",";
//		$buf .= mysql_real_escape_string($value);
//	}
//	if ($buf != "") {
//		$sql .= "\n  and ord.DEL_FLAG in (".$buf.")";
//	}
//
//	$sql .= "\n  order by";
//	$sql .= "\n   ord.ORDER_DATE desc";
//
//	//検索件数のみ場合、以下の条件は不要
//	if (!$countOnly) $sql .= "\n  limit ".(($activePage-1)*$showNumberOfOnePage).",".$showNumberOfOnePage;
//
//
//	_Log("[_SearchOrderSheet] sql='".$sql."'" ,2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$listResult = array();
//	//検索結果を配列に格納
//	while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//		if ($countOnly) {
//			$listResult = $line;
//		} else {
//			$listResult[$line['ORDER_ID']] = $line;
//		}
//	}
//
//	_Log("[_SearchOrderSheet] listResult='".print_r($listResult,true)."'");
//
//
//	if ($countOnly) {
//		return $listResult['CNT'];
//	} else {
//		if (count($listResult) == 0) $listResult = null;
//		return $listResult;
//	}
//}
//
//
///**
// * 注文情報を更新する。
// * 引き数	$info				:注文情報
// *   		$endDateUpdateFlag	:完了日付更新フラグ{END_DATE_NOUPDATE(0):完了日付を更新しない。/END_DATE_UPDATE(1):完了日付を設定する。/END_DATE_DELETE(2):完了日付を削除する。}
// * 戻り値  なし
// */
//function _SaveOrderSheetInfo($info, $endDateUpdateFlag) {
//
//	//SQLを作成する。
//    $sql = "\n update order_sheet set";
//	$sql .= "\n  STATUS_ID = ".mysql_real_escape_string($info['STATUS_ID'])."";    		//状態
//	$sql .= "\n ,COMMENT = '".mysql_real_escape_string($info['COMMENT'])."'";    			//コメント
//	$sql .= "\n ,DEL_FLAG = ".mysql_real_escape_string($info['DEL_FLAG'])."";    			//削除フラグ
//	$sql .= "\n ,UPDATE_IP = '".mysql_real_escape_string($info['UPDATE_IP'])."'";    		//更新IP
//	$sql .= "\n ,UPDATE_DATE = now()";    													//更新日
//
//	//完了日付を更新するか？
//	switch ($endDateUpdateFlag) {
//	case END_DATE_UPDATE:
//		//完了日付を設定する。
//		$sql .= "\n ,END_DATE = now()";    													//完了日付
//		break;
//	case END_DATE_DELETE:
//		//完了日付を削除する。
//		$sql .= "\n ,END_DATE = null";    													//完了日付
//		break;
//	}
//
//    $sql .= "\n  where";
//	$sql .= "\n  	  ORDER_ID = ".mysql_real_escape_string($info['ORDER_ID'])."";    		//注文ID
//
// 	_Log("[_SaveOrderSheetInfo] sql='".$sql."'", 2);
//
//    //SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//}
//
//
///**
// * 指定した注文IDに関連する注文情報を取得する。
// * 引き数	$orderId		:注文ID
// * 			$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	注文情報
// */
//function _GetOrderSheetInfo($orderId, $undeleteOnly = true) {
//
//	//SQLを作成する。
//	$sql = "\n select";
//	$sql .= "\n  ord.*";											//注文情報
//
//	$sql .= "\n ,usr.USER_ID USER_USER_ID"; 						//ユーザーID
//	$sql .= "\n ,usr.ACCOUNT USER_ACCOUNT"; 						//アカウントID
//	$sql .= "\n ,usr.PASS USER_PASS"; 								//PASS
//	$sql .= "\n ,usr.E_MAIL USER_E_MAIL"; 							//E-Mail
//	$sql .= "\n ,usr.FAMILY_NAME USER_FAMILY_NAME"; 				//名前(姓)
//	$sql .= "\n ,usr.FIRST_NAME USER_FIRST_NAME"; 					//名前(名)
//	$sql .= "\n ,usr.FAMILY_NAME_KANA USER_FAMILY_NAME_KANA"; 		//ふりがな(姓)
//	$sql .= "\n ,usr.FIRST_NAME_KANA USER_FIRST_NAME_KANA"; 		//ふりがな(名)
//	$sql .= "\n ,usr.ZIP1 USER_ZIP1"; 								//郵便番号1
//	$sql .= "\n ,usr.ZIP2 USER_ZIP2"; 								//郵便番号2
//	$sql .= "\n ,usr.PREF USER_PREF"; 								//住所(都道府県)
//	$sql .= "\n ,usr.ADDRESS1 USER_ADDRESS1"; 						//住所(市町村番地)
//	$sql .= "\n ,usr.ADDRESS2 USER_ADDRESS2"; 						//住所(マンション等)
//	$sql .= "\n ,usr.TEL1 USER_TEL1"; 								//電話番号1
//	$sql .= "\n ,usr.TEL2 USER_TEL2"; 								//電話番号2
//	$sql .= "\n ,usr.TEL3 USER_TEL3"; 								//電話番号3
//	$sql .= "\n ,usr.AUTH_ID USER_AUTH_ID"; 						//権限
//	$sql .= "\n ,usr.NOTE USER_NOTE"; 								//備考
//	$sql .= "\n ,usr.DEL_FLAG USER_DEL_FLAG"; 						//削除フラグ
//	$sql .= "\n ,usr.CREATE_IP USER_CREATE_IP"; 					//作成IP
//	$sql .= "\n ,usr.CREATE_DATE USER_CREATE_DATE"; 				//作成日
//	$sql .= "\n ,usr.UPDATE_IP USER_UPDATE_IP"; 					//更新IP
//	$sql .= "\n ,usr.UPDATE_DATE USER_UPDATE_DATE"; 				//更新日
//
//	$sql .= "\n ,m_sts.NAME STATUS_NAME";							//状態名称
//	$sql .= "\n ,m_sts.COLOR STATUS_COLOR";							//状態色
//
//	$sql .= "\n from ";
//	$sql .= "\n      order_sheet ord left outer join user usr on ord.USER_ID = usr.USER_ID";
//	$sql .= "\n      			   	   left outer join mst_status m_sts on ord.STATUS_ID = m_sts.ID";
//
//
//	$sql .= "\n where";
//	$sql .= "\n 	ord.ORDER_ID = ".mysql_real_escape_string($orderId)."";
//
//	if ($undeleteOnly) $sql .= "\n and	ord.DEL_FLAG = 0";
//
//	_Log("[_GetOrderSheetInfo] sql='".$sql."'", 2);
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$line = mysql_fetch_array($result, MYSQL_ASSOC);
//
//	_Log("[_GetOrderSheetInfo] count(\$line)='".count($line)."'");
//	_Log("[_GetOrderSheetInfo] \$line='".print_r($line,true)."'");
//
//	if (count($line) == 1) $line = null;
//
//	return $line;
//}
///* end   ----------------------------------------------注文情報関連---------------------------------------------- end   */
//
//
///* start --------------------------------------------注文明細情報関連-------------------------------------------- start */
///**
// * 注文明細情報を登録する。
// * 引き数	$info	：注文情報
// * 戻り値  	なし
// */
//function _CreateOrderSheetDetailsInfo($info) {
//
//	_Log("[_CreateOrderSheetDetailsInfo] \$info='".print_r($info, true)."'");
//
//	//SQLを作成する。
//	$sql = "\n insert into order_sheet_details (";
//	$sql .= "\n ORDER_ID";                           	//注文ID
//	$sql .= "\n,NO";                           			//番号
//	$sql .= "\n,ITEM_NAME";                           	//商品名
//	$sql .= "\n,ITEM_CD";                           	//商品コード
//	$sql .= "\n,ITEM_CHARGE";                         	//単価
//	$sql .= "\n,ITEM_NUM";                           	//数量
//	$sql .= "\n,ITEM_UNIT";                           	//単位
//	$sql .= "\n,NAME_PRINT_FLAG";                     	//名入れ有無フラグ
//	$sql .= "\n,NAME_PRINT_CHAR";                     	//名入れ文字
//	$sql .= "\n,NAME_PRINT_CHARGE";                   	//名入れ金額
//	$sql .= "\n,STRAP";                          	 	//ストラップ
//	$sql .= "\n,CHARM";                           		//チャーム
//	$sql .= "\n,DIAMETER";                           	//径
//	$sql .= "\n,PACKAGE_WAY";                         	//包装方法
//	$sql .= "\n,PACKAGE_CHARGE";                      	//包装金額
//	$sql .= "\n,NOTE";                           		//備考
//	$sql .= "\n,DEL_FLAG";                           	//削除フラグ
//	$sql .= "\n,CREATE_IP";                           	//作成IP
//	$sql .= "\n,CREATE_DATE";                        	//作成日
//	$sql .= "\n,UPDATE_IP";                           	//更新IP
//	$sql .= "\n,UPDATE_DATE";                         	//更新日
//
//	$sql .= "\n\n ) values (";
//
//	//注文ID  int
//	$sql .= "\n ".mysql_real_escape_string($info['ORDER_ID'])."";
//
//	//番号  int
//	$sql .= "\n,".mysql_real_escape_string($info['NO'])."";
//
//	//商品名  varchar
//	if (_IsNull($info['ITEM_NAME'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['ITEM_NAME'])."'";
//	}
//
//	//商品コード  varchar
//	if (_IsNull($info['ITEM_CD'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['ITEM_CD'])."'";
//	}
//
//	//単価  varchar
//	if (_IsNull($info['ITEM_CHARGE'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['ITEM_CHARGE'])."'";
//	}
//
//	//数量  varchar
//	if (_IsNull($info['ITEM_NUM'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['ITEM_NUM'])."'";
//	}
//
//	//単位  varchar
//	if (_IsNull($info['ITEM_UNIT'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['ITEM_UNIT'])."'";
//	}
//
//	//名入れ有無フラグ  int
//	$sql .= "\n,".mysql_real_escape_string($info['NAME_PRINT_FLAG'])."";
//
//	//名入れ文字  varchar
//	if (_IsNull($info['NAME_PRINT_CHAR'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['NAME_PRINT_CHAR'])."'";
//	}
//
//	//名入れ金額  varchar
//	if (_IsNull($info['NAME_PRINT_CHARGE'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['NAME_PRINT_CHARGE'])."'";
//	}
//
//	//ストラップ  varchar
//	if (_IsNull($info['STRAP'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['STRAP'])."'";
//	}
//
//	//チャーム  varchar
//	if (_IsNull($info['CHARM'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['CHARM'])."'";
//	}
//
//	//径  varchar
//	if (_IsNull($info['DIAMETER'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['DIAMETER'])."'";
//	}
//
//	//包装方法  varchar
//	if (_IsNull($info['PACKAGE_WAY'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['PACKAGE_WAY'])."'";
//	}
//
//	//包装金額  varchar
//	if (_IsNull($info['PACKAGE_CHARGE'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['PACKAGE_CHARGE'])."'";
//	}
//
//	//備考  text
//	if (_IsNull($info['NOTE'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['NOTE'])."'";
//	}
//
//	//削除フラグ  int
//	$sql .= "\n,".mysql_real_escape_string($info['DEL_FLAG'])."";
//
//	//作成IP  varchar
//	if (_IsNull($info['CREATE_IP'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['CREATE_IP'])."'";
//	}
//
//	//作成日  datetime
//	if (_IsNull($info['CREATE_DATE'])) {
//		$sql .= "\n,now()";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['CREATE_DATE'])."'";
//	}
//
//	//更新IP  varchar
//	if (_IsNull($info['UPDATE_IP'])) {
//		$sql .= "\n,null";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['UPDATE_IP'])."'";
//	}
//
//	//更新日  datetime
//	if (_IsNull($info['UPDATE_DATE'])) {
//		$sql .= "\n,now()";
//	} else {
//		$sql .= "\n,'".mysql_real_escape_string($info['UPDATE_DATE'])."'";
//	}
//
//	$sql .= "\n)";
//
//	_Log("[_CreateOrderSheetDetailsInfo] sql='".$sql."'", 2);
//
//    //SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//}
///**
// * 指定した注文IDに関連する注文明細情報を取得する。
// * 引き数	$orderId		:注文ID
// * 			$undeleteOnly	:未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}
// * 戻り値  	注文情報
// */
//function _GetOrderSheetDetailsList($orderId, $undeleteOnly = true) {
//
//	_Log("[_GetOrderSheetDetailsList] start.");
//
//	_Log("[_GetOrderSheetDetailsList] 注文ID='".$orderId."'");
//	_Log("[_GetOrderSheetDetailsList] 未削除データのみ取得するか？{true:未削除データ対象/false:全データ対象}='".$undeleteOnly."'");
//
//	if (_IsNull($orderId)) return null;
//
//	//SQLを作成する。
//	$sql .= "\n select";
//	$sql .= "\n		*";
//	$sql .= "\n from";
//	$sql .= "\n		order_sheet_details";
//	$sql .= "\n where";
//	$sql .= "\n 	ORDER_ID = ".mysql_real_escape_string($orderId)."";
//
//	if ($undeleteOnly) $sql .= "\n and	DEL_FLAG = 0";
//
//	$sql .= "\n order by";
//	$sql .= "\n 	NO";
//
//
//	_Log("[_GetOrderSheetDetailsList] sql='".$sql."'");
//
//	//SQL実行
//	$result = mysql_query($sql) or die("Query failed-->".$sql);
//
//	$resultList = array();
//	//検索結果を配列に格納
//	while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
//		$resultList[$line['NO']] = $line;
//	}
//
//	_Log("[_GetOrderSheetDetailsList] count(\$resultList)='".count($resultList)."'");
//	_Log("[_GetOrderSheetDetailsList] \$resultList='".print_r($resultList,true)."'");
//
//	if (count($resultList)==0) $resultList = null;
//
//	_Log("[_GetOrderSheetDetailsList] end.");
//
//	return $resultList;
//}
//
///* end   --------------------------------------------注文明細情報関連-------------------------------------------- end   */
//
//
//
//






?>
