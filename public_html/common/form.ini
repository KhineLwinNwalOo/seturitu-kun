<?php
/*
 * [新★会社設立.JP ツール]
 * フォーム関連ファイル
 *
 * 更新履歴：2008/12/01	d.ishikawa	新規作成
 *
 */

include_once(dirname(__FILE__)."/constants.ini");
include_once(dirname(__FILE__)."/log.ini");
include_once(dirname(__FILE__)."/xml.ini");

/**
 * フォーム用のXMLを読み込んで配列に格納する。
 * 注意：DBはオープンしておくこと。
 *
 * @param	string	$filename	XMLファイルパス
 * @param	array	$otherList	その他に設定したい情報
 * @return	array	XMLを読み込んだ配列
 * @access  public
 * @since
 */
function _GetXml($filename, $otherList = null) {
	_Log("[_GetXml] start.", 4);

	//フォームXMLを読み込む。
	$allList = _Xml2Array($filename);
	_Log("[_GetXml] (初期状態)\$allList = \n'".print_r($allList,true)."'", 4);

	//※sin-kaisha.xsrv.jpサーバ用(seturitu-kun.comサーバ用)
	//XMLを配列にするときに、UTF-8に変換されるたため、ここでEUC-JPに戻す。
	$allList = _Mb_Convert_EncodingForArray($allList, 'EUC-JP', 'UTF-8');
	_Log("[_GetXml] (文字エンコーディング変換後'UTF-8'→'EUC-JP')\$allList = \n'".print_r($allList,true)."'", 4);

	//配列を修正する。
	$allList = _ReviseXml($allList);
	_Log("[_GetXml] (修正後'input')\$allList = \n'".print_r($allList,true)."'", 4);
	$allList = _ReviseXml($allList, 'item');
	_Log("[_GetXml] (修正後'item')\$allList = \n'".print_r($allList,true)."'", 4);
	$allList = _ReviseXml($allList, 'show_item');
	_Log("[_GetXml] (修正後'show_item')\$allList = \n'".print_r($allList,true)."'", 4);
	//DB情報を設定する。
	$allList = _SetDB($allList, $otherList);
	_Log("[_GetXml] (DBセット後)\$allList = \n'".print_r($allList,true)."'", 4);

	_Log("[_GetXml] end.", 4);
	return $allList;
}

/**
 * XMLを読み込んだ配列を修正する。
 * inputが一つの場合、inputの配下に一つ配列を入れる。
 *
 * @param	array	$list	XMLを読み込んだ配列
 * @return	array	XMLを読み込んだ配列
 * @access  public
 * @since
 */
function _ReviseXml($list, $targetKey = 'input') {
	_Log("[_ReviseXml] start.", 4);

	if (_IsNull($list)) {
		_Log("[_ReviseXml] list is null.", 4);
		_Log("[_ReviseXml] end.", 4);
		return $list;
	}

	foreach ($list as $key => $value) {

		_Log("[_ReviseXml] key = '".$key."'", 4);
		_Log("[_ReviseXml] gettype(key) = '".gettype($key)."'", 4);

		//キーには数字の場合があるので、文字列に変更する。
		//数字の0の場合、以下のswitchで'input'と判断されてしまう。
		$key .= "";

		switch ($key) {
			case $targetKey:

				_Log("[_ReviseXml] key is '".$targetKey."'", 4);

				switch (gettype($value)) {
					case 'array':
						$checkFlag = false;
						foreach ($value as $inKey => $inValue) {

							_Log("[_ReviseXml] ".$targetKey." Key = '".$inKey."'", 4);
							_Log("[_ReviseXml] gettype(".$targetKey." Key) = '".gettype($inKey)."'", 4);


							//添字が数字か？
							if (!preg_match ('/^[0-9]+$/', $inKey)) {
								$checkFlag = true;

								_Log("[_ReviseXml] ".$targetKey." Key is '[0-9]'", 4);

								break;
							}
						}
						//添字が数字以外の場合、配列の詰め替えをする。
						//inputの配下に一つ配列を入れる。
						if ($checkFlag) {
							$list[$key] = array($value);
						}
						break;
					default:
						break;
				}
				break;
			default:

				_Log("[_ReviseXml] key is 'default'", 4);

				switch (gettype($value)) {
					case 'array':
						$list[$key] = _ReviseXml($value, $targetKey);
						break;
					default:
						break;
				}
				break;
		}

	}


	_Log("[_ReviseXml] end.", 4);

	return $list;
}


/**
 * XMLを読み込んだ配列にDBの情報を設定する。
 * 添字が"mst_name"の値は、テーブル名になっているので、そのテーブルを情報を取得する。
 * 取得した情報は、添字"list"に設定する。
 *
 * @param	array	$list		XMLを読み込んだ配列
 * @param	array	$otherList	その他に設定したい情報
 * @return	array	XMLを読み込んだ配列
 * @access  public
 * @since
 */
function _SetDB($list, $otherList = null) {
	if (_IsNull($list)) return $list;

	foreach ($list as $key => $value) {
		switch (gettype($value)) {
			case 'array':
				$list[$key] = _SetDB($value, $otherList);
				break;
			default:
				if ($key == 'tbl_name') {

					$condition = null;
					$keyFieldName = "id";
					$order = "lpad(show_order,10,'0')";
					if (isset($list['list_condition'])) {

						if (isset($list['list_condition']['sort_order'])) {
							if (!_IsNull($list['list_condition']['sort_order'])) {
								$order = $list['list_condition']['sort_order'];
							}
							unset($list['list_condition']['sort_order']);
						}
						if (isset($list['list_condition']['key_field_name'])) {
							if (!_IsNull($list['list_condition']['key_field_name'])) {
								$keyFieldName = $list['list_condition']['key_field_name'];
							}
							unset($list['list_condition']['key_field_name']);
						}

						$condition = array();
						$condition = $list['list_condition'];

					}
					$undeleteOnly = false;
					$delFlagFieldName = 'del_flag';

					$buf = _DB_GetList($value, $condition, $undeleteOnly, $order, $delFlagFieldName, $keyFieldName);
					$list['list'] = $buf;

				} elseif ($key == 'mst_name') {

					//削除フラグを設定する。
					$undeleteOnly = true;
					if (isset($list['list_condition']['undeleteOnly'])) {
						if ($list['list_condition']['undeleteOnly'] != "") {
							$undeleteOnly = $list['list_condition']['undeleteOnly'];
						}
					}

					$buf = null;
					switch ($value) {
						case 'year':
							$buf = _GetYearArray(date('Y'), date('Y') + 1);
							break;
						case 'year_system':
							$buf = _GetYearArray(SYSTEM_START_YEAR, date('Y') + 3);
							break;
						case 'year_system_50':
							$buf = _GetYearArray(SYSTEM_START_YEAR - 50, date('Y') + 3);
							break;
						case 'year_birth':
							$buf = _GetYearArray(date('Y')-100, date('Y'));
							break;
						case 'year_birth_jp':
							$buf = _GetYearArray(date('Y')-100, date('Y'));
							foreach ($buf as $bufKey => $bufInfo) {
								$jpY = _ConvertAD2Jp($bufInfo['name']);
								$bufInfo['name'] .= "(".$jpY.")";
								$buf[$bufKey] = $bufInfo;
							}
							break;
						case 'year_found_jp':
							$buf = _GetYearArray(SYSTEM_START_YEAR, date('Y') + 1);
							foreach ($buf as $bufKey => $bufInfo) {
								$bufInfo['name_no_jp'] = $bufInfo['name'];
								$jpY = _ConvertAD2Jp($bufInfo['name']);
								$bufInfo['name'] .= "(".$jpY.")";
								$buf[$bufKey] = $bufInfo;
							}
							krsort($buf, SORT_NUMERIC);
							break;
						case 'month':
							$buf = _GetMonthArray();
							break;
						case 'day':
							$buf = _GetDayArray();
							break;
						case 'hour':
							$buf = _GetNumberArray(0, 23);
							break;
						case 'minute':
							$buf = _GetNumberArray(0, 59, 5);
							break;
						case 'number_10':
							$buf = _GetNumberArray(1, 10);
							break;
						case 'number_0_10':
							$buf = _GetNumberArray(0, 10);
							break;
						case 'number_0null_10':
							$buf = _GetNumberArray(0, 10);
							$buf[0]['name'] = null;
							break;
						case 'del_flag_yes':
							$buf = array(DELETE_FLAG_YES => array('id' => DELETE_FLAG_YES, 'name' => DELETE_FLAG_YES_NAME, 'no_name' => ''));
							break;
						case 'del_flag':
							$buf = array(
										 DELETE_FLAG_NO => array('id' => DELETE_FLAG_NO, 'name' => DELETE_FLAG_NO_NAME, 'no_name' => '')
										,DELETE_FLAG_YES => array('id' => DELETE_FLAG_YES, 'name' => DELETE_FLAG_YES_NAME, 'no_name' => '')
										);
							break;
						case 'mst_plan_abc':
							$condition = array();
							$condition['company_id'] = MST_COMPANY_ID_ABC;
							$buf = _GetMstPlan($condition, null, $undeleteOnly);
							break;
						case 'mst_plan':
							$buf = _GetMstPlan(null, null, $undeleteOnly);
							break;
						case 'mst_class_abc':
							$condition = array();
							$condition['company_id'] = MST_COMPANY_ID_ABC;
							$buf = _GetMstClass($condition, null, $undeleteOnly);
							break;
//						case 'mst_option':
//							$buf = _GetMstOptionList($undeleteOnly);
//							break;
						case 'mst_plan_details':
							$buf = _GetMstPlanDetails(null, null, $undeleteOnly);
							break;
						case 'other_list':
							if (!_IsNull($otherList)) {
								$buf = $otherList[$list['other_list_key']];
							}
							break;
						case 'user_auth':
							$buf = array(
									AUTH_NON => array('id' => AUTH_NON, 'name' => AUTH_NON_NAME, 'no_name' => '')
									,AUTH_CLIENT => array('id' => AUTH_CLIENT, 'name' => AUTH_CLIENT_NAME, 'no_name' => '')
									,AUTH_WOOROM => array('id' => AUTH_WOOROM, 'name' => AUTH_WOOROM_NAME, 'no_name' => '')
									);
							break;
						default:
							$buf = _GetMasterList($value, $undeleteOnly);
							break;
					}
					$list['list'] = $buf;
				}
				break;
		}
	}

	return $list;
}


/**
 * XMLを読み込んだ配列を修正する。
 * 指定したタグを削除する。
 *
 * @param	array	$list		XMLを読み込んだ配列
 * @param	string	$targetKey	削除するキー
 * @return	array	XMLを読み込んだ配列
 * @access  public
 * @since
 */
function _DeleteXmlByTag($list, $targetKey) {
	_Log("[_DeleteXmlByTag] start.", 4);

	if (_IsNull($list)) {
		_Log("[_DeleteXmlByTag] list is null.", 4);
		_Log("[_DeleteXmlByTag] end.", 4);
		return $list;
	}

	if (_IsNull($targetKey)) {
		_Log("[_DeleteXmlByTag] Delete Tag is null.", 4);
		_Log("[_DeleteXmlByTag] end.", 4);
		return $list;
	}


	foreach ($list as $key => $value) {

		_Log("[_DeleteXmlByTag] key = '".$key."'", 4);
		_Log("[_DeleteXmlByTag] gettype(value) = '".gettype($value)."'", 4);

		//キーには数字の場合があるので、文字列に変更する。
		//数字の0の場合、以下のswitchで'input'と判断されてしまう。
		$key .= "";

		switch ($key) {
			case $targetKey:

				_Log("[_DeleteXmlByTag] key is '".$targetKey."' ---> deleted.", 4);
				unset($list[$key]);
				break;
			default:

				_Log("[_DeleteXmlByTag] key is 'default'", 4);

				switch (gettype($value)) {
					case 'array':
						$list[$key] = _DeleteXmlByTag($value, $targetKey);
						break;
					default:
						break;
				}
				break;
		}

	}

	_Log("[_DeleteXmlByTag] end.", 4);

	return $list;
}


/**
 * XMLを読み込んだ配列を修正する。
 * 指定したタグが指定した値の場合、削除する。
 *
 * @param	array	$list			XMLを読み込んだ配列
 * @param	string	$targetKey		削除するタグ
 * @param	string	$targetValue	削除するタグの値
 * @param	inf		$targetMode		削除するタグの値の判断モード{1:完全一致/2:あいまい一致}
 * @return	array	XMLを読み込んだ配列
 * @access  public
 * @since
 */
function _DeleteXmlByTagAndValue($list, $targetKey, $targetValue, $targetMode = 1) {
	_Log("[_DeleteXmlByTagAndValue] start.", 4);

	if (_IsNull($list)) {
		_Log("[_DeleteXmlByTagAndValue] list is null.", 4);
		_Log("[_DeleteXmlByTagAndValue] end.", 4);
		return $list;
	}

	if (_IsNull($targetKey)) {
		_Log("[_DeleteXmlByTagAndValue] Delete Tag is null.", 4);
		_Log("[_DeleteXmlByTagAndValue] end.", 4);
		return $list;
	}

	if (_IsNull($targetValue)) {
		_Log("[_DeleteXmlByTagAndValue] Delete Tag's Value is null.", 4);
		_Log("[_DeleteXmlByTagAndValue] end.", 4);
		return $list;
	}


	foreach ($list as $key => $value) {

		_Log("[_DeleteXmlByTagAndValue] key = '".$key."'", 4);
		_Log("[_DeleteXmlByTagAndValue] value = '".$value."'", 4);
		_Log("[_DeleteXmlByTagAndValue] gettype(value) = '".gettype($value)."'", 4);

		switch (gettype($value)) {
			case 'array':
				$res = _DeleteXmlByTagAndValue($value, $targetKey, $targetValue, $targetMode);
				if (is_null($res)) {
					unset($list[$key]);
				} else {
					$list[$key] = $res;
				}
				break;
			default:
				//キーには数字の場合があるので、文字列に変更する。
				//数字の0の場合、以下のswitchで'input'と判断されてしまう。
				$key .= "";

				switch ($key) {
					case $targetKey:
						_Log("[_DeleteXmlByTagAndValue] key is '".$targetKey."' --->", 4);
						$value .= "";
						switch ($targetMode) {
							case 2:
								if (preg_match('/'.$targetValue.'/', $value)) {
									_Log("[_DeleteXmlByTagAndValue] value is '".$targetValue."' (preg_match) ---> deleted.", 3);
									return null;
								}
								break;
							default:
								if ($value == $targetValue) {
									_Log("[_DeleteXmlByTagAndValue] value is '".$targetValue."' ---> deleted.", 3);
									return null;
								}
								break;
						}
						break;
				}
				break;
		}
	}

	_Log("[_DeleteXmlByTagAndValue] end.", 4);

	return $list;
}


/**
 * 入力用に表示するテーブル(フォーム)を作成する。
 *
 * @param	int		$mode			動作モード{1:入力/2:確認/3:完了/4:エラー}
 * @param	array	$allList		XMLを読み込んだ配列
 * @param	array	$info			入力した値が格納されている配列
 * @param	int		&$tabindex		タブインデックス
 * @param	array	$loginInfo		ログイン情報
 * @param	string	$message		メッセージ
 * @param	boolean	$errorFlag		エラーフラグ
 * @param	boolean	$allShowFlag	全て表示するか？hidden項目も表示するか？{true:全て表示する。/false:XML設定、権限による表示有無に従う。}
 * @param	string	$clientName		クライアント名(サイト名)
 * @param	string	$clientMail		クライアントE-Mail
 * @param	string	$urlBase		"トップに戻る"に使用するURL
 * @return	なし
 * @access  public
 * @since
 */
function _GetFormTable($mode, $allList, $info, &$tabindex, $loginInfo = null, $message = null, $errorFlag = false, $allShowFlag = false, $clientName = null, $clientMail = null, $urlBase = null) {

	$res = null;

//	if (isset($allList['title']) && !_IsNull($allList['title'])) {
//		//タイトルを設定する。
//		$res .= "<h2>";
//		$res .= $allList['title'];
//		$res .= "</h2>";
//		$res .= "\n";
//
////		unset($allList['title']);
//	}



//	if (_IsNull($loginInfo)) {
		//管理画面以外の場合(問合せフォームなど)

		//メッセージが有る場合、メッセージを表示する。
//		if ($mode != 3) {
			if (!_IsNull($message)) {
				$addClass = null;
				//エラーが有る場合、文字色を変更する。
				if ($errorFlag) $addClass = "errorMessage";
				$res .= "<div class=\"message ".$addClass."\">";
				$res .= "\n";
				$res .= nl2br($message);
				$res .= "\n";
				$res .= "</div>";
				$res .= "\n";
			}
//		}


	switch ($allList['xml_name']) {
		case XML_NAME_CMP:
		case XML_NAME_CMP_NAME:
		case XML_NAME_CMP_CAPITAL:
		case XML_NAME_CMP_ADDRESS:
		case XML_NAME_CMP_PURPOSE:
		case XML_NAME_CMP_BOARD_BASE:
		case XML_NAME_CMP_BOARD_NAME:
		case XML_NAME_CMP_PROMOTER:
		case XML_NAME_CMP_PROMOTER_INVESTMENT:
		case XML_NAME_CMP_ALL:
			//株式会社設立情報
		case XML_NAME_LLC:
		case XML_NAME_LLC_NAME:
		case XML_NAME_LLC_CAPITAL:
		case XML_NAME_LLC_ADDRESS:
		case XML_NAME_LLC_ARTICLE:
		case XML_NAME_LLC_PURPOSE:
		case XML_NAME_LLC_BOARD_BASE:
		case XML_NAME_LLC_BOARD_NAME:
		case XML_NAME_LLC_PROMOTER:
		case XML_NAME_LLC_PROMOTER_INVESTMENT:
		case XML_NAME_LLC_ALL:
			//合同会社設立情報
			if ($mode == 1 || $mode == 2) {
				//説明を設定する。
				$res .= "<div class=\"explain\">";
				$res .= "\n";
				$res .= "※&nbsp;印は必須項目です。";
				$res .= "\n";
				$res .= "</div>";
				$res .= "\n";
			}

			break;
		case XML_NAME_SEAL:
		case XML_NAME_SEAL_SET:
			break;
		case XML_NAME_SEAL_IMPRINT:
		case XML_NAME_SEAL_NAME:
		case XML_NAME_SEAL_ALL:
			//法人印注文情報
		case XML_NAME_PAY:
			//お支払い報告情報
		case XML_NAME_BUY:
			//ご利用料金のお支払い情報
		case XML_NAME_INQ:
			//問合せ情報
		case XML_NAME_LINK:
			//相互リンク情報
			if ($mode == 1) {
				//説明を設定する。
				$res .= "<div class=\"explain\">";
				$res .= "\n";
				$res .= "※&nbsp;印は必須項目です。";
				$res .= "\n";
				$res .= "</div>";
				$res .= "\n";
			} elseif ($mode == 2) {
				$res .= "<div class=\"explain\">";
				$res .= "\n";
				$res .= "※入力内容を確認して、「送信」ボタンを押してください。";
				$res .= "\n";
				$res .= "</div>";
				$res .= "\n";
			}

			break;
		case XML_NAME_ARTICLE:
			//定款認証情報
		case XML_NAME_ARTICLE_LLC:
			//定款認証情報(合同会社用)
			if ($mode == 1) {
				//説明を設定する。
				$res .= "<div class=\"explain\">";
				$res .= "\n";
				$res .= "※&nbsp;印は必須項目です。";
				$res .= "\n";
				$res .= "</div>";
				$res .= "\n";
			} elseif ($mode == 2) {
				$res .= "<div class=\"explain\">";
				$res .= "\n";
				$res .= "※入力内容を確認して、「送信」ボタンを押してください。";
				$res .= "\n";
				$res .= "<br />";
				$res .= "\n";
				$res .= "※下記の入力内容で行政書士に電子定款認証を依頼します。";
				$res .= "\n";
				$res .= "</div>";
				$res .= "\n";
			}

			break;

        case XML_NAME_USER:
			//ユーザー情報
			//ログイン情報が渡された場合→ログイン後の「ユーザーページ」が表示された。
			//ログイン情報が渡されない場合→ログイン前の「ユーザー登録」が表示された。
		case XML_NAME_USER_OEM:
			//ユーザー情報(OEM・代理店制度用)
			if (_IsNull($loginInfo) || !isset($loginInfo['usr_user_id'])) {
				if ($mode == 1) {
					//説明を設定する。
					$res .= "<div class=\"explain\">";
					$res .= "\n";
					$res .= "<span style=\"color:#f00;font-weight:bold\">【ご注意】<br />お申し込み後に自動返信メールが届かない場合は、迷惑メールとして扱われている事がありますのでご確認ください。<br />ご不明な場合はお電話にてお問い合わせください。(03-3586-1523)</span>";
					$res .= "\n";
					$res .= "<br />";
					$res .= "<br />";
					$res .= "\n";
					$res .= "※&nbsp;印は必須項目です。";
					$res .= "\n";
					$res .= "</div>";
					$res .= "\n";
				} elseif ($mode == 2) {
					$res .= "<div class=\"explain\">";
					$res .= "\n";
					$res .= "※入力内容を確認して、「登録」ボタンを押してください。";
					$res .= "\n";
					$res .= "</div>";
					$res .= "\n";
				}
			} else {
				if ($mode == 1) {
					//説明を設定する。
					$res .= "<div class=\"explain\">";
					$res .= "\n";
					$res .= "※&nbsp;印は必須項目です。";
					$res .= "\n";
					$res .= "</div>";
					$res .= "\n";
				} elseif ($mode == 2) {
					$res .= "<div class=\"explain\">";
					$res .= "\n";
					$res .= "※入力内容を確認して、「保存」ボタンを押してください。";
					$res .= "\n";
					$res .= "</div>";
					$res .= "\n";
				}
			}
			break;

        case XML_NAME_CMP_PLAN:
        case XML_NAME_LLC_PLAN:
            if ($mode == 1) {
                //説明を設定する。
                $res .= "<div class=\"explain\">";
                $res .= "\n";
                $res .= "※&nbsp;印は必須項目です。";
                $res .= "\n";
                $res .= "</div>";
                $res .= "\n";
            } elseif ($mode == 2) {
                $res .= "<div class=\"explain\">";
                $res .= "\n";
                $res .= "※入力内容を確認して、「変更する」ボタンを押してください。";
                $res .= "\n";
                $res .= "</div>";
                $res .= "\n";
            }
            break;

		case XML_NAME_CANCEL:
			//登録解除
			if ($mode == 1) {
				//説明を設定する。
				$res .= "<div class=\"explain\">";
				$res .= "\n";
				$res .= "※&nbsp;印は必須項目です。";
				$res .= "\n";
				$res .= "</div>";
				$res .= "\n";
			} elseif ($mode == 2) {
				$res .= "<div class=\"explain\">";
				$res .= "\n";
				$res .= "※入力内容を確認して、「送信」ボタンを押してください。";
				$res .= "<br />";
				$res .= "※「送信」ボタンを押した後は、全ての情報が削除されます。";
				$res .= "\n";
				$res .= "</div>";
				$res .= "\n";
			}
			break;

		default:
			if ($mode == 1) {
				//説明を設定する。
				$res .= "<div class=\"explain\">";
				$res .= "\n";
				$res .= "※&nbsp;印は必須項目です。";
				$res .= "\n";
				$res .= "</div>";
				$res .= "\n";
			} elseif ($mode == 2) {
				$res .= "<div class=\"explain\">";
				$res .= "\n";
				$res .= "※入力内容を確認して、「登録」ボタンを押してください。";
				$res .= "\n";
				$res .= "</div>";
				$res .= "\n";
			}
			break;
	}


//	} else {
//		//管理画面の場合
//
//		//メッセージが有る場合、メッセージを表示する。
//		if (!_IsNull($message)) {
//			$addClass = null;
//			//エラーが有る場合、文字色を変更する。
//			if ($errorFlag) $addClass = "errorMessage";
//			$res .= "<div class=\"message ".$addClass."\">";
//			$res .= "\n";
//			$res .= nl2br($message);
//			$res .= "\n";
//			$res .= "</div>";
//			$res .= "\n";
//		}
//
//		if ($mode == 1) {
//			//説明を設定する。
//			$res .= "<div class=\"explain\">";
//			$res .= "\n";
//			$res .= "<a href=\"#\" title=\"説明\" onclick=\"openBox('explain_sub', 'explain', 'explain_close'); return false;\">[説明]</a>";
//			$res .= "\n";
//			$res .= "<br />";
//			$res .= "\n";
//			$res .= "<ul id=\"explain_sub\">";
//			$res .= "\n";
//			$res .= "<li>";
//			$res .= "※は、必須項目です。";
//			$res .= "</li>";
//			$res .= "\n";
//			$res .= "</ul>";
//			$res .= "\n";
//			$res .= "</div>";
//			$res .= "\n";
//		}
//	}


	$addAction = null;
	switch ($allList['xml_name']) {
		case XML_NAME_USER:
        case XML_NAME_CMP_PLAN:
        case XML_NAME_LLC_PLAN:
			//ユーザー情報
			//ログイン情報が渡された場合→ログイン後の「ユーザーページ」が表示された。
			//ログイン情報が渡されない場合→ログイン前の「ユーザー登録」が表示された。
		case XML_NAME_USER_OEM:
			//ユーザー情報(OEM・代理店制度用)
			if (_IsNull($loginInfo) || !isset($loginInfo['usr_user_id'])) {
			} else {
				$addAction .= "#mc_ui_update";
			}
			break;
		case XML_NAME_CANCEL:
			//登録解除
			$addAction .= "#mc_ui_cancel";
			break;
	}

	$res .= "<form id=\"frmUpdate\" name=\"frmUpdate\" action=\"".$_SERVER['PHP_SELF'].$addAction."\" method=\"post\" enctype=\"multipart/form-data\">";
	$res .= "\n";

	$res .= "<div class=\"formWrapper\">";
	$res .= "\n";

	$res .= "<div class=\"formList\">";
	$res .= "\n";

	//動作モードによって、表示する内容を切り替える。
	switch ($mode) {
	case 1://入力
		$res .= _CreateTableInputAll($allList, $info, $tabindex, $loginInfo, $allShowFlag);
		break;
	case 2://確認
		$res .= _CreateTableConfirmAll($allList, $info, $tabindex, $loginInfo, $allShowFlag);
		break;
	case 3://完了
		$res .= _CreateTableEnd($message, $info, $loginInfo, $allShowFlag, $clientName, $clientMail, $urlBase);

		switch ($allList['xml_name']) {
			case XML_NAME_CART:
				//カート情報
				break;
			case XML_NAME_INQ:
				//問合せ情報
			case XML_NAME_LINK:
				//相互リンク情報
			case XML_NAME_INQ_MOBILE:
				//問合せ情報(携帯用)
				break;
			case XML_NAME_CMP:
			case XML_NAME_CMP_NAME:
			case XML_NAME_CMP_CAPITAL:
			case XML_NAME_CMP_ADDRESS:
			case XML_NAME_CMP_PURPOSE:
			case XML_NAME_CMP_BOARD_BASE:
			case XML_NAME_CMP_BOARD_NAME:
			case XML_NAME_CMP_PROMOTER:
			case XML_NAME_CMP_PROMOTER_INVESTMENT:
			case XML_NAME_CMP_ALL:
				//株式会社設立情報
				break;
	
			case XML_NAME_LLC:
			case XML_NAME_LLC_NAME:
			case XML_NAME_LLC_CAPITAL:
			case XML_NAME_LLC_ADDRESS:
			case XML_NAME_LLC_ARTICLE:
			case XML_NAME_LLC_PURPOSE:
			case XML_NAME_LLC_BOARD_BASE:
			case XML_NAME_LLC_BOARD_NAME:
			case XML_NAME_LLC_PROMOTER:
			case XML_NAME_LLC_PROMOTER_INVESTMENT:
			case XML_NAME_LLC_ALL:
				//合同会社設立情報
				break;
			case XML_NAME_SEAL:
			case XML_NAME_SEAL_SET:
			case XML_NAME_SEAL_IMPRINT:
			case XML_NAME_SEAL_NAME:
			case XML_NAME_SEAL_ALL:
				//法人印注文情報
//_Log("[_GetFormTable] 1 \$info = '\n".print_r($info,true)."\n'");
				if (isset($info['update']['tbl_seal_name']['sel_nam_company_name']) && !_IsNull($info['update']['tbl_seal_name']['sel_nam_company_name'])) {
					//会社テーブル
					$condition = null;
					$condition['cmp_company_id'] = $info['update']['tbl_seal_name']['sel_nam_company_name'];//会社ID
					$tblCompanyInfo = _DB_GetInfo('tbl_company', $condition, true, 'cmp_del_flag');
					if (!_IsNull($tblCompanyInfo)) {
						$url = null;
						//会社タイプID
						switch ($tblCompanyInfo['cmp_company_type_id']) {
						case MST_COMPANY_TYPE_ID_CMP://株式会社
							$url = "../user/company/article/";
							break;
						case MST_COMPANY_TYPE_ID_LLC://合同会社
							$url = "../user/llc/info/?article";
							break;
						}
						if (!_IsNull($url)) {
							$res .= "<div class=\"button\">";
							$res .= "\n";
							$res .= "<input class=\"submit\" type=\"button\" value=\"次のステップへ\" tabindex=\"".(++$tabindex)."\" onclick=\"window.location.href='".$url."';\" />";
							$res .= "\n";
							$res .= "</div>";
							$res .= "\n";
						}
					}
				}
				break;
			case XML_NAME_PAY:
				//お支払い報告情報
			case XML_NAME_BUY:
				//ご利用料金のお支払い情報
			case XML_NAME_ARTICLE:
				//定款認証情報
			case XML_NAME_ARTICLE_LLC:
				//定款認証情報(合同会社用)
				break;
			case XML_NAME_USER:
				//ユーザー情報
				//ログイン情報が渡された場合→ログイン後の「ユーザーページ」が表示された。
				//ログイン情報が渡されない場合→ログイン前の「ユーザー登録」が表示された。
			case XML_NAME_USER_OEM:
				//ユーザー情報(OEM・代理店制度用)
				break;
            case XML_NAME_CMP_PLAN:
            case XML_NAME_LLC_PLAN:
                $res .= '<div>';
                $res .= 'プラン変更を承りました。';
                $res .= '<br/>';
                $res .= '改めて担当者よりご連絡致します。';
                $res .= '</div>';
                break;
			case XML_NAME_CANCEL:
				//登録解除
				break;
			case XML_NAME_ITEM:
				//商品情報
			default:
				break;
		}
		break;
	case 4://エラー
		break;
	}

	$res .= "\n";
	$res .= "</div>";//<!-- End formList -->
	$res .= "\n";
	$res .= "</div>";//<!-- End formWrapper -->
	$res .= "\n";
	$res .= "</form>";


	//動作モードによって、表示する内容を切り替える。
	switch ($mode) {
	case 20://確認(簡易)
		$res = null;
		$res .= _CreateTableConfirmSimpleAll($allList, $info, $tabindex, $loginInfo, $allShowFlag);
		break;
	}



	return $res;
}


/**
 * 入力用に表示するテーブル(フォーム)を作成する。
 *
 * @param	array	$allList		XMLを読み込んだ配列
 * @param	array	$info			入力した値が格納されている配列
 * @param	int		&$tabindex		タブインデックス
 * @param	array	$loginInfo		ログイン情報
 * @param	boolean	$allShowFlag	全て表示するか？hidden項目も表示するか？{true:全て表示する。/false:XML設定、権限による表示有無に従う。}
 * @return	なし
 * @access  public
 * @since
 */
function _CreateTableInputAll($allList, $info, &$tabindex, $loginInfo = null, $allShowFlag = false) {

	$res = null;

	foreach($allList as $key => $itemList) {
		if ($itemList['confirm_only']) continue;

		//交通事故サイト用(これは特別です。)------------------- start
		//権限チェック
		//ログイン情報が渡された場合
		if (!_IsNull($loginInfo)) {
			//WOOROM権限以外の場合
			if ($loginInfo['usr_auth_id'] != AUTH_WOOROM) {
				//WOOROM権限のみ表示可の項目の場合
				if (isset($itemList['auth']) && $itemList['auth'] == AUTH_WOOROM) {
					//非表示にする。
					continue;
				}
			}
		}
		//交通事故サイト用(これは特別です。)------------------- end


		$multipleFlag = false;
		$multipleCount = 1;

		$resBufTitle = null;
		if (is_array($itemList)) {
			if (isset($itemList['sub_title']) && !_IsNull($itemList['sub_title'])) {
				$resBufTitle .= "<h3>";
				$resBufTitle .= $itemList['sub_title'];
				$resBufTitle .= "</h3>";
				$resBufTitle .= "\n";
			}

			//複数入力か？
			if (isset($itemList['multiple']) && !_IsNull($itemList['multiple']) && _IsHalfSizeNumeric($itemList['multiple'])) {
				$multipleFlag = true;
				$multipleCount = $itemList['multiple'];

				//複数項目がJavaScriptで追加される場合もある。
				if (isset($info['update'][$key]) && is_array($info['update'][$key])) {
//					if ($multipleCount < count($info['update'][$key])) {
//						$multipleCount = count($info['update'][$key]);
//					}
					$multipleCount = count($info['update'][$key]);
				}
			}
		}


		$resBuf = null;
		for ($tIdx = 0; $tIdx < $multipleCount; $tIdx++) {
			$resBuf .= _CreateTableInput($itemList['item'], $info, $tabindex, $key, $loginInfo, $allShowFlag, $multipleFlag, $tIdx);
		}


		if (is_array($itemList)) {
			if (isset($itemList['prefix']) && !_IsNull($itemList['prefix'])) {
				$resBuf = $itemList['prefix']."\n".$resBuf;
			}
			if (isset($itemList['prefix_html']) && !_IsNull($itemList['prefix_html'])) {
				$resBuf = $itemList['prefix_html']."\n".$resBuf;
			}
			if (isset($itemList['prefix_msg']) && !_IsNull($itemList['prefix_msg'])) {
				$resBuf = $itemList['prefix_msg']."\n".$resBuf;
			}


			if (isset($itemList['suffix']) && !_IsNull($itemList['suffix'])) {
				if (!_IsNull($resBuf)) $resBuf .= "\n";
				$resBuf .= $itemList['suffix'];
			}
			if (isset($itemList['suffix_html']) && !_IsNull($itemList['suffix_html'])) {
				if (!_IsNull($resBuf)) $resBuf .= "\n";
				$resBuf .= $itemList['suffix_html'];
			}
			if (isset($itemList['suffix_msg']) && !_IsNull($itemList['suffix_msg'])) {
				if (!_IsNull($resBuf)) $resBuf .= "\n";
				$resBuf .= $itemList['suffix_msg'];
			}

		}

		if (!_IsNull($resBufTitle) || !_IsNull($resBuf)) {
			$res .= "<div id=\"".$key."\">";
			$res .= "\n";
			$res .= $resBufTitle;
			$res .= $resBuf;
			$res .= "</div>";
			$res .= "\n";
		}

	}

	switch ($allList['xml_name']) {
		case XML_NAME_CART:
			//カート情報
			$res .= "<div class=\"button\">";
			$res .= "\n";

			$tabindexConfirm = (++$tabindex);
			$tabindexBack = (++$tabindex);

			$res .= "<input class=\"submit\" type=\"submit\" name=\"back_cart\" value=\"　カートに戻る　\" tabindex=\"".$tabindexBack."\" />";
			$res .= "\n";
			$res .= "&nbsp;";
			$res .= "<input class=\"submit\" type=\"submit\" name=\"confirm\" value=\"　確　認　\" tabindex=\"".$tabindexConfirm."\" />";
			$res .= "\n";
			$res .= "</div>";
			$res .= "\n";
			break;
		case XML_NAME_LOGIN:
			//ログイン情報
			$res .= "<div class=\"button\">";
			$res .= "\n";
			$res .= "<input class=\"submit\" type=\"submit\" name=\"confirm\" value=\"　ログイン　\" tabindex=\"".(++$tabindex)."\" />";
			$res .= "\n";
			$res .= "</div>";
			$res .= "\n";
			break;
		case XML_NAME_LOGIN_REMIND:
			//ログインパスワード確認情報
			$res .= "<div class=\"button\">";
			$res .= "\n";
			$res .= "<input class=\"submit\" type=\"submit\" name=\"confirm\" value=\"　送　信　\" tabindex=\"".(++$tabindex)."\" />";
			$res .= "\n";
			$res .= "</div>";
			$res .= "\n";
			break;
		case XML_NAME_CMP:
		case XML_NAME_CMP_NAME:
		case XML_NAME_CMP_CAPITAL:
		case XML_NAME_CMP_ADDRESS:
		case XML_NAME_CMP_PURPOSE:
		case XML_NAME_CMP_BOARD_BASE:
		case XML_NAME_CMP_BOARD_NAME:
		case XML_NAME_CMP_PROMOTER:
		case XML_NAME_CMP_PROMOTER_INVESTMENT:
		case XML_NAME_CMP_ALL:
			//株式会社設立情報
		case XML_NAME_LLC:
		case XML_NAME_LLC_NAME:
		case XML_NAME_LLC_CAPITAL:
		case XML_NAME_LLC_ADDRESS:
//		case XML_NAME_LLC_ARTICLE:
		case XML_NAME_LLC_PURPOSE:
		case XML_NAME_LLC_BOARD_BASE:
		case XML_NAME_LLC_BOARD_NAME:
		case XML_NAME_LLC_PROMOTER:
		case XML_NAME_LLC_PROMOTER_INVESTMENT:
		case XML_NAME_LLC_ALL:
			//合同会社設立情報
            if (!empty($info['nologin_input'])) {
                /*
                $res .= "<div class=\"button\">";
                $res .= "\n";
                $res .= "<input id=\"btn_back\" class=\"submit\" type=\"submit\" name=\"back\" value=\"前の項目へ\" tabindex=\"".(++$tabindex)."\" />";
                $res .= "\n";
                $res .= "&nbsp;";
                $res .= "\n";
                $res .= "<input id=\"btn_go\" class=\"submit\" type=\"submit\" name=\"go\" value=\"会員登録/ログインして保存する\" tabindex=\"".(++$tabindex)."\" />";
                $res .= "\n";
                $res .= "&nbsp;";
                $res .= "\n";
                $res .= "<input id=\"btn_next\" class=\"submit\" type=\"submit\" name=\"next\" value=\"次の項目へ\" tabindex=\"".(++$tabindex)."\" />";
                $res .= "\n";
                $res .= "</div>";
                $res .= "\n";
                */

                $buttonFormat = <<<EOT
<link rel="stylesheet" href="/css/button.css" type="text/css" />
<div class="btn_cont">%s%s%s</div>
EOT;
                $backButton = <<<EOT
<a href="#" onclick="submitBack();return false;" onmouseout="MM_swapImgRestore()" onmouseover="MM_swapImage('back','','/img/free_info/btn_back_ov.png',1)"><img src="/img/free_info/btn_back.png" alt="前の項目へ" name="back" id="back" /></a>
EOT;
                $goButton = <<<EOT
<a href="#" onclick="submitGo();return false;" onmouseout="MM_swapImgRestore()" onmouseover="MM_swapImage('enter','','/img/free_info/btn_enter_ov.png',1)"><img src="/img/free_info/btn_enter.png" alt="会員登録/ログインして保存する" name="enter" id="enter" /></a>
EOT;
                $nextButton = <<<EOT
<a href="#" onclick="submitNext();return false;" onmouseout="MM_swapImgRestore()" onmouseover="MM_swapImage('next','','/img/free_info/btn_next_ov.png',1)"><img src="/img/free_info/btn_next.png" alt="次の項目へ" name="next" id="next" /></a>
EOT;

                if (preg_match('/cmp/', $allList['xml_name'])) {
                    $step = !empty($_SESSION['free_info_step']) ? $_SESSION['free_info_step'] : 1;
                    if ($step == '1') {
                        $backButton = '';
                    } elseif ($step == '9') {
                        $nextButton = '';
                    }
                } else {
                    $step = !empty($_SESSION['llc_free_info_step']) ? $_SESSION['llc_free_info_step'] : 1;
                    if ($step == '1') {
                        $backButton = '';
     